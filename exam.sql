/*
Navicat MySQL Data Transfer

Source Server         : sql
Source Server Version : 50621
Source Host           : zmzmdr.com:3306
Source Database       : exam

Target Server Type    : MYSQL
Target Server Version : 50621
File Encoding         : 65001

Date: 2016-07-18 12:18:58
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for examoption
-- ----------------------------
DROP TABLE IF EXISTS `examoption`;
CREATE TABLE `examoption` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `eid` int(11) NOT NULL,
  `qid` int(11) NOT NULL,
  `oid` int(11) NOT NULL,
  `isSelect` int(11) NOT NULL,
  `uid` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `eid` (`eid`),
  KEY `qid` (`qid`),
  KEY `oid` (`oid`),
  KEY `uid` (`uid`),
  CONSTRAINT `examoption_ibfk_1` FOREIGN KEY (`eid`) REFERENCES `exampaper` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `examoption_ibfk_2` FOREIGN KEY (`qid`) REFERENCES `question` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `examoption_ibfk_3` FOREIGN KEY (`oid`) REFERENCES `option` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `examoption_ibfk_4` FOREIGN KEY (`uid`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=617 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of examoption
-- ----------------------------
INSERT INTO `examoption` VALUES ('435', '388', '177', '645', '1', '5');
INSERT INTO `examoption` VALUES ('436', '388', '177', '646', '0', '5');
INSERT INTO `examoption` VALUES ('437', '388', '177', '647', '0', '5');
INSERT INTO `examoption` VALUES ('438', '388', '177', '648', '0', '5');
INSERT INTO `examoption` VALUES ('439', '388', '178', '649', '1', '5');
INSERT INTO `examoption` VALUES ('440', '388', '178', '650', '0', '5');
INSERT INTO `examoption` VALUES ('441', '388', '178', '651', '0', '5');
INSERT INTO `examoption` VALUES ('442', '388', '178', '652', '0', '5');
INSERT INTO `examoption` VALUES ('443', '388', '179', '653', '1', '5');
INSERT INTO `examoption` VALUES ('444', '388', '179', '654', '0', '5');
INSERT INTO `examoption` VALUES ('445', '388', '180', '655', '1', '5');
INSERT INTO `examoption` VALUES ('446', '388', '180', '656', '0', '5');
INSERT INTO `examoption` VALUES ('447', '388', '180', '657', '0', '5');
INSERT INTO `examoption` VALUES ('448', '388', '180', '658', '0', '5');
INSERT INTO `examoption` VALUES ('449', '388', '181', '659', '1', '5');
INSERT INTO `examoption` VALUES ('450', '388', '181', '660', '0', '5');
INSERT INTO `examoption` VALUES ('451', '392', '18', '27', '0', '5');
INSERT INTO `examoption` VALUES ('452', '392', '18', '28', '1', '5');
INSERT INTO `examoption` VALUES ('453', '392', '18', '29', '0', '5');
INSERT INTO `examoption` VALUES ('454', '392', '18', '30', '0', '5');
INSERT INTO `examoption` VALUES ('455', '392', '19', '31', '0', '5');
INSERT INTO `examoption` VALUES ('456', '392', '19', '32', '1', '5');
INSERT INTO `examoption` VALUES ('457', '392', '19', '33', '0', '5');
INSERT INTO `examoption` VALUES ('458', '392', '19', '34', '0', '5');
INSERT INTO `examoption` VALUES ('459', '392', '20', '35', '0', '5');
INSERT INTO `examoption` VALUES ('460', '392', '20', '36', '1', '5');
INSERT INTO `examoption` VALUES ('461', '392', '20', '37', '0', '5');
INSERT INTO `examoption` VALUES ('462', '392', '20', '38', '0', '5');
INSERT INTO `examoption` VALUES ('463', '392', '21', '39', '0', '5');
INSERT INTO `examoption` VALUES ('464', '392', '21', '40', '1', '5');
INSERT INTO `examoption` VALUES ('465', '392', '22', '41', '1', '5');
INSERT INTO `examoption` VALUES ('466', '392', '22', '42', '0', '5');
INSERT INTO `examoption` VALUES ('467', '392', '22', '43', '0', '5');
INSERT INTO `examoption` VALUES ('468', '392', '22', '44', '0', '5');
INSERT INTO `examoption` VALUES ('469', '393', '18', '27', '1', '5');
INSERT INTO `examoption` VALUES ('470', '393', '18', '28', '0', '5');
INSERT INTO `examoption` VALUES ('471', '393', '18', '29', '0', '5');
INSERT INTO `examoption` VALUES ('472', '393', '18', '30', '0', '5');
INSERT INTO `examoption` VALUES ('473', '393', '21', '39', '0', '5');
INSERT INTO `examoption` VALUES ('474', '393', '21', '40', '1', '5');
INSERT INTO `examoption` VALUES ('475', '393', '22', '41', '1', '5');
INSERT INTO `examoption` VALUES ('476', '393', '22', '42', '0', '5');
INSERT INTO `examoption` VALUES ('477', '393', '22', '43', '0', '5');
INSERT INTO `examoption` VALUES ('478', '393', '22', '44', '0', '5');
INSERT INTO `examoption` VALUES ('479', '394', '18', '27', '1', '5');
INSERT INTO `examoption` VALUES ('480', '394', '18', '28', '0', '5');
INSERT INTO `examoption` VALUES ('481', '394', '18', '29', '0', '5');
INSERT INTO `examoption` VALUES ('482', '394', '18', '30', '0', '5');
INSERT INTO `examoption` VALUES ('483', '394', '19', '31', '1', '5');
INSERT INTO `examoption` VALUES ('484', '394', '19', '32', '0', '5');
INSERT INTO `examoption` VALUES ('485', '394', '19', '33', '0', '5');
INSERT INTO `examoption` VALUES ('486', '394', '19', '34', '0', '5');
INSERT INTO `examoption` VALUES ('487', '394', '20', '35', '0', '5');
INSERT INTO `examoption` VALUES ('488', '394', '20', '36', '0', '5');
INSERT INTO `examoption` VALUES ('489', '394', '20', '37', '1', '5');
INSERT INTO `examoption` VALUES ('490', '394', '20', '38', '0', '5');
INSERT INTO `examoption` VALUES ('491', '394', '22', '41', '0', '5');
INSERT INTO `examoption` VALUES ('492', '394', '22', '42', '1', '5');
INSERT INTO `examoption` VALUES ('493', '394', '22', '43', '0', '5');
INSERT INTO `examoption` VALUES ('494', '394', '22', '44', '0', '5');
INSERT INTO `examoption` VALUES ('495', '394', '24', '45', '1', '5');
INSERT INTO `examoption` VALUES ('496', '394', '24', '46', '0', '5');
INSERT INTO `examoption` VALUES ('497', '394', '30', '63', '0', '5');
INSERT INTO `examoption` VALUES ('498', '394', '30', '64', '0', '5');
INSERT INTO `examoption` VALUES ('499', '394', '30', '65', '0', '5');
INSERT INTO `examoption` VALUES ('500', '394', '30', '66', '0', '5');
INSERT INTO `examoption` VALUES ('519', '392', '18', '27', '1', '1');
INSERT INTO `examoption` VALUES ('520', '392', '18', '28', '0', '1');
INSERT INTO `examoption` VALUES ('521', '392', '18', '29', '0', '1');
INSERT INTO `examoption` VALUES ('522', '392', '18', '30', '0', '1');
INSERT INTO `examoption` VALUES ('523', '392', '19', '31', '0', '1');
INSERT INTO `examoption` VALUES ('524', '392', '19', '32', '0', '1');
INSERT INTO `examoption` VALUES ('525', '392', '19', '33', '0', '1');
INSERT INTO `examoption` VALUES ('526', '392', '19', '34', '0', '1');
INSERT INTO `examoption` VALUES ('527', '392', '20', '35', '1', '1');
INSERT INTO `examoption` VALUES ('528', '392', '20', '36', '0', '1');
INSERT INTO `examoption` VALUES ('529', '392', '20', '37', '0', '1');
INSERT INTO `examoption` VALUES ('530', '392', '20', '38', '0', '1');
INSERT INTO `examoption` VALUES ('531', '392', '21', '39', '0', '1');
INSERT INTO `examoption` VALUES ('532', '392', '21', '40', '0', '1');
INSERT INTO `examoption` VALUES ('533', '392', '22', '41', '0', '1');
INSERT INTO `examoption` VALUES ('534', '392', '22', '42', '0', '1');
INSERT INTO `examoption` VALUES ('535', '392', '22', '43', '0', '1');
INSERT INTO `examoption` VALUES ('536', '392', '22', '44', '0', '1');
INSERT INTO `examoption` VALUES ('537', '424', '626', '2382', '0', null);
INSERT INTO `examoption` VALUES ('538', '424', '626', '2383', '0', null);
INSERT INTO `examoption` VALUES ('539', '424', '627', '2384', '0', null);
INSERT INTO `examoption` VALUES ('540', '424', '627', '2385', '0', null);
INSERT INTO `examoption` VALUES ('541', '424', '627', '2386', '0', null);
INSERT INTO `examoption` VALUES ('542', '424', '627', '2387', '0', null);
INSERT INTO `examoption` VALUES ('543', '424', '628', '2388', '0', null);
INSERT INTO `examoption` VALUES ('544', '424', '628', '2389', '0', null);
INSERT INTO `examoption` VALUES ('545', '424', '628', '2390', '0', null);
INSERT INTO `examoption` VALUES ('546', '424', '628', '2391', '0', null);
INSERT INTO `examoption` VALUES ('547', '424', '629', '2392', '0', null);
INSERT INTO `examoption` VALUES ('548', '424', '629', '2393', '0', null);
INSERT INTO `examoption` VALUES ('549', '424', '629', '2394', '0', null);
INSERT INTO `examoption` VALUES ('550', '424', '629', '2395', '0', null);
INSERT INTO `examoption` VALUES ('551', '424', '630', '2396', '1', null);
INSERT INTO `examoption` VALUES ('552', '424', '630', '2397', '0', null);
INSERT INTO `examoption` VALUES ('553', '424', '630', '2398', '0', null);
INSERT INTO `examoption` VALUES ('554', '424', '630', '2399', '0', null);
INSERT INTO `examoption` VALUES ('555', '427', '626', '2382', '0', null);
INSERT INTO `examoption` VALUES ('556', '427', '626', '2383', '0', null);
INSERT INTO `examoption` VALUES ('557', '427', '627', '2384', '0', null);
INSERT INTO `examoption` VALUES ('558', '427', '627', '2385', '0', null);
INSERT INTO `examoption` VALUES ('559', '427', '627', '2386', '0', null);
INSERT INTO `examoption` VALUES ('560', '427', '627', '2387', '0', null);
INSERT INTO `examoption` VALUES ('561', '427', '628', '2388', '0', null);
INSERT INTO `examoption` VALUES ('562', '427', '628', '2389', '0', null);
INSERT INTO `examoption` VALUES ('563', '427', '628', '2390', '0', null);
INSERT INTO `examoption` VALUES ('564', '427', '628', '2391', '0', null);
INSERT INTO `examoption` VALUES ('565', '427', '629', '2392', '0', null);
INSERT INTO `examoption` VALUES ('566', '427', '629', '2393', '0', null);
INSERT INTO `examoption` VALUES ('567', '427', '629', '2394', '0', null);
INSERT INTO `examoption` VALUES ('568', '427', '629', '2395', '0', null);
INSERT INTO `examoption` VALUES ('569', '427', '630', '2396', '0', null);
INSERT INTO `examoption` VALUES ('570', '427', '630', '2397', '0', null);
INSERT INTO `examoption` VALUES ('571', '427', '630', '2398', '0', null);
INSERT INTO `examoption` VALUES ('572', '427', '630', '2399', '0', null);
INSERT INTO `examoption` VALUES ('573', '431', '119', '416', '1', null);
INSERT INTO `examoption` VALUES ('574', '431', '119', '417', '0', null);
INSERT INTO `examoption` VALUES ('575', '431', '119', '418', '0', null);
INSERT INTO `examoption` VALUES ('576', '431', '119', '419', '0', null);
INSERT INTO `examoption` VALUES ('577', '431', '120', '420', '1', null);
INSERT INTO `examoption` VALUES ('578', '431', '120', '421', '0', null);
INSERT INTO `examoption` VALUES ('579', '431', '121', '422', '0', null);
INSERT INTO `examoption` VALUES ('580', '431', '121', '423', '1', null);
INSERT INTO `examoption` VALUES ('581', '431', '122', '424', '0', null);
INSERT INTO `examoption` VALUES ('582', '431', '122', '425', '1', null);
INSERT INTO `examoption` VALUES ('583', '431', '123', '426', '1', null);
INSERT INTO `examoption` VALUES ('584', '431', '123', '427', '1', null);
INSERT INTO `examoption` VALUES ('585', '431', '123', '428', '0', null);
INSERT INTO `examoption` VALUES ('586', '431', '123', '429', '0', null);
INSERT INTO `examoption` VALUES ('587', '431', '542', '2065', '0', null);
INSERT INTO `examoption` VALUES ('588', '431', '542', '2066', '1', null);
INSERT INTO `examoption` VALUES ('589', '431', '543', '2067', '0', null);
INSERT INTO `examoption` VALUES ('590', '431', '543', '2068', '0', null);
INSERT INTO `examoption` VALUES ('591', '431', '543', '2069', '1', null);
INSERT INTO `examoption` VALUES ('592', '431', '543', '2070', '0', null);
INSERT INTO `examoption` VALUES ('593', '431', '544', '2071', '0', null);
INSERT INTO `examoption` VALUES ('594', '431', '544', '2072', '1', null);
INSERT INTO `examoption` VALUES ('595', '431', '545', '2073', '0', null);
INSERT INTO `examoption` VALUES ('596', '431', '545', '2074', '1', null);
INSERT INTO `examoption` VALUES ('597', '431', '545', '2075', '0', null);
INSERT INTO `examoption` VALUES ('598', '431', '545', '2076', '0', null);
INSERT INTO `examoption` VALUES ('599', '431', '546', '2077', '0', null);
INSERT INTO `examoption` VALUES ('600', '431', '546', '2078', '0', null);
INSERT INTO `examoption` VALUES ('601', '431', '546', '2079', '1', null);
INSERT INTO `examoption` VALUES ('602', '431', '546', '2080', '0', null);
INSERT INTO `examoption` VALUES ('603', '432', '119', '416', '0', null);
INSERT INTO `examoption` VALUES ('604', '432', '119', '417', '1', null);
INSERT INTO `examoption` VALUES ('605', '432', '119', '418', '0', null);
INSERT INTO `examoption` VALUES ('606', '432', '119', '419', '0', null);
INSERT INTO `examoption` VALUES ('607', '432', '120', '420', '1', null);
INSERT INTO `examoption` VALUES ('608', '432', '120', '421', '0', null);
INSERT INTO `examoption` VALUES ('609', '432', '121', '422', '0', null);
INSERT INTO `examoption` VALUES ('610', '432', '121', '423', '1', null);
INSERT INTO `examoption` VALUES ('611', '432', '122', '424', '0', null);
INSERT INTO `examoption` VALUES ('612', '432', '122', '425', '1', null);
INSERT INTO `examoption` VALUES ('613', '432', '123', '426', '1', null);
INSERT INTO `examoption` VALUES ('614', '432', '123', '427', '1', null);
INSERT INTO `examoption` VALUES ('615', '432', '123', '428', '0', null);
INSERT INTO `examoption` VALUES ('616', '432', '123', '429', '0', null);

-- ----------------------------
-- Table structure for exampaper
-- ----------------------------
DROP TABLE IF EXISTS `exampaper`;
CREATE TABLE `exampaper` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `starttime` bigint(20) DEFAULT NULL,
  `endtime` bigint(20) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `practice` int(2) DEFAULT NULL,
  `uid` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`),
  CONSTRAINT `exampaper_ibfk_1` FOREIGN KEY (`uid`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=435 DEFAULT CHARSET=gb2312;

-- ----------------------------
-- Records of exampaper
-- ----------------------------
INSERT INTO `exampaper` VALUES ('388', '第一次测试', '1467561600000', '1469808000000', 'admin', '0', '5');
INSERT INTO `exampaper` VALUES ('389', '第二次测试', '1467820800000', '1469808000000', 'admin', '0', '5');
INSERT INTO `exampaper` VALUES ('390', '第三次测试', '1466956800000', '1470412800000', 'admin', '0', '5');
INSERT INTO `exampaper` VALUES ('391', '第五次测试', '1467648000000', '1470412800000', 'admin', '0', '5');
INSERT INTO `exampaper` VALUES ('392', '第六次考试', '1467734400000', '1468944000000', '', '0', '5');
INSERT INTO `exampaper` VALUES ('393', '第七次考试', '1468339200000', '1469808000000', '123', '0', '5');
INSERT INTO `exampaper` VALUES ('394', '第八次考试', '1467993600000', '1469808000000', '123', '0', '5');
INSERT INTO `exampaper` VALUES ('395', '练习系统', '1468632163989', '1468632163989', '12', '1', '1');
INSERT INTO `exampaper` VALUES ('396', 'wfc 的考试之路 0', '1468632445156', '1468732445156', '0', '0', '1');
INSERT INTO `exampaper` VALUES ('397', 'wfc 的考试之路 1', '1468632445156', '1468732445525', '1', '1', '1');
INSERT INTO `exampaper` VALUES ('398', 'wfc 的考试之路 2', '1468632445156', '1468732445849', '2', '0', '1');
INSERT INTO `exampaper` VALUES ('399', 'wfc 的考试之路 3', '1468632445156', '1468732446159', '3', '1', '1');
INSERT INTO `exampaper` VALUES ('400', 'wfc 的考试之路 4', '1468632445156', '1468732446484', '4', '0', '1');
INSERT INTO `exampaper` VALUES ('401', 'wfc 的考试之路 5', '1468632445156', '1468732446790', '5', '1', '1');
INSERT INTO `exampaper` VALUES ('402', 'wfc 的考试之路 6', '1468632445156', '1468732447096', '6', '0', '1');
INSERT INTO `exampaper` VALUES ('403', 'wfc 的考试之路 7', '1468632445156', '1468732447403', '7', '1', '1');
INSERT INTO `exampaper` VALUES ('404', 'wfc 的考试之路 8', '1468632445156', '1468732447705', '8', '0', '1');
INSERT INTO `exampaper` VALUES ('405', 'wfc 的考试之路 9', '1468632445156', '1468732447993', '9', '1', '1');
INSERT INTO `exampaper` VALUES ('406', 'wfc 的考试之路 10', '1468632445156', '1468732448303', '10', '0', '1');
INSERT INTO `exampaper` VALUES ('407', 'wfc 的考试之路 11', '1468632445156', '1468732448596', '11', '1', '1');
INSERT INTO `exampaper` VALUES ('408', 'wfc 的考试之路 12', '1468632445156', '1468732448884', '12', '0', '1');
INSERT INTO `exampaper` VALUES ('409', 'wfc 的考试之路 13', '1468632445156', '1468732449203', '13', '1', '1');
INSERT INTO `exampaper` VALUES ('410', 'wfc 的考试之路 14', '1468632445156', '1468732449495', '14', '0', '1');
INSERT INTO `exampaper` VALUES ('411', 'wfc 的考试之路 15', '1468632445156', '1468732449794', '15', '1', '1');
INSERT INTO `exampaper` VALUES ('412', 'wfc 的考试之路 16', '1468632445156', '1468732450084', '16', '0', '1');
INSERT INTO `exampaper` VALUES ('413', 'wfc 的考试之路 17', '1468632445156', '1468732450382', '17', '1', '1');
INSERT INTO `exampaper` VALUES ('414', 'wfc 的考试之路 18', '1468632445156', '1468732450683', '18', '0', '1');
INSERT INTO `exampaper` VALUES ('415', 'wfc 的考试之路 19', '1468632445156', '1468732450976', '19', '1', '1');
INSERT INTO `exampaper` VALUES ('416', '练习', '0', '0', null, '1', '5');
INSERT INTO `exampaper` VALUES ('418', '练习', '0', '0', null, '1', '1');
INSERT INTO `exampaper` VALUES ('421', '练习', '0', '0', null, '1', '1');
INSERT INTO `exampaper` VALUES ('422', '练习', '0', '0', null, '1', '1');
INSERT INTO `exampaper` VALUES ('423', '练习', '0', '0', null, '1', '1');
INSERT INTO `exampaper` VALUES ('424', '练习', '0', '0', null, '1', '1');
INSERT INTO `exampaper` VALUES ('427', '练习', '0', '0', null, '1', '2');
INSERT INTO `exampaper` VALUES ('428', '练习', '0', '0', null, '1', '1');
INSERT INTO `exampaper` VALUES ('429', '练习', '0', '0', null, '1', '2');
INSERT INTO `exampaper` VALUES ('430', '练习', '0', '0', null, '1', '2');
INSERT INTO `exampaper` VALUES ('431', '练习', '0', '0', null, '1', '2');
INSERT INTO `exampaper` VALUES ('432', '练习', '0', '0', null, '1', '2');
INSERT INTO `exampaper` VALUES ('433', '练习', '0', '0', null, '1', '2');
INSERT INTO `exampaper` VALUES ('434', '练习', '0', '0', null, '1', '2');

-- ----------------------------
-- Table structure for examQuestion
-- ----------------------------
DROP TABLE IF EXISTS `examQuestion`;
CREATE TABLE `examQuestion` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `eid` int(11) DEFAULT NULL,
  `qid` int(11) DEFAULT NULL,
  `mark` double DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `eid` (`eid`),
  KEY `examQuestion_ibfk_2` (`qid`),
  CONSTRAINT `examQuestion_ibfk_1` FOREIGN KEY (`eid`) REFERENCES `exampaper` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `examQuestion_ibfk_2` FOREIGN KEY (`qid`) REFERENCES `question` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=998 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of examQuestion
-- ----------------------------
INSERT INTO `examQuestion` VALUES ('857', '388', '177', '0');
INSERT INTO `examQuestion` VALUES ('858', '388', '178', '0');
INSERT INTO `examQuestion` VALUES ('859', '388', '179', '0');
INSERT INTO `examQuestion` VALUES ('860', '388', '180', '0');
INSERT INTO `examQuestion` VALUES ('861', '388', '181', '0');
INSERT INTO `examQuestion` VALUES ('862', '389', '18', '0');
INSERT INTO `examQuestion` VALUES ('863', '389', '19', '0');
INSERT INTO `examQuestion` VALUES ('864', '389', '20', '0');
INSERT INTO `examQuestion` VALUES ('865', '390', '18', '0');
INSERT INTO `examQuestion` VALUES ('866', '391', '18', '0');
INSERT INTO `examQuestion` VALUES ('867', '391', '19', '0');
INSERT INTO `examQuestion` VALUES ('868', '392', '18', '0');
INSERT INTO `examQuestion` VALUES ('869', '392', '19', '0');
INSERT INTO `examQuestion` VALUES ('870', '392', '20', '0');
INSERT INTO `examQuestion` VALUES ('871', '392', '21', '0');
INSERT INTO `examQuestion` VALUES ('872', '392', '22', '0');
INSERT INTO `examQuestion` VALUES ('873', '393', '18', '0');
INSERT INTO `examQuestion` VALUES ('874', '393', '22', '0');
INSERT INTO `examQuestion` VALUES ('875', '393', '21', '0');
INSERT INTO `examQuestion` VALUES ('876', '393', '24', '0');
INSERT INTO `examQuestion` VALUES ('877', '394', '18', '0');
INSERT INTO `examQuestion` VALUES ('878', '394', '19', '0');
INSERT INTO `examQuestion` VALUES ('879', '394', '20', '0');
INSERT INTO `examQuestion` VALUES ('880', '394', '22', '0');
INSERT INTO `examQuestion` VALUES ('881', '394', '24', '0');
INSERT INTO `examQuestion` VALUES ('882', '394', '30', '0');
INSERT INTO `examQuestion` VALUES ('883', '396', '22', '0');
INSERT INTO `examQuestion` VALUES ('884', '396', '24', '0');
INSERT INTO `examQuestion` VALUES ('885', '397', '22', '0');
INSERT INTO `examQuestion` VALUES ('886', '397', '24', '0');
INSERT INTO `examQuestion` VALUES ('887', '398', '22', '0');
INSERT INTO `examQuestion` VALUES ('888', '398', '24', '0');
INSERT INTO `examQuestion` VALUES ('889', '399', '22', '0');
INSERT INTO `examQuestion` VALUES ('890', '399', '24', '0');
INSERT INTO `examQuestion` VALUES ('891', '400', '22', '0');
INSERT INTO `examQuestion` VALUES ('892', '400', '24', '0');
INSERT INTO `examQuestion` VALUES ('893', '401', '22', '0');
INSERT INTO `examQuestion` VALUES ('894', '401', '24', '0');
INSERT INTO `examQuestion` VALUES ('895', '402', '22', '0');
INSERT INTO `examQuestion` VALUES ('896', '402', '24', '0');
INSERT INTO `examQuestion` VALUES ('897', '403', '22', '0');
INSERT INTO `examQuestion` VALUES ('898', '403', '24', '0');
INSERT INTO `examQuestion` VALUES ('899', '404', '22', '0');
INSERT INTO `examQuestion` VALUES ('900', '404', '24', '0');
INSERT INTO `examQuestion` VALUES ('901', '405', '22', '0');
INSERT INTO `examQuestion` VALUES ('902', '405', '24', '0');
INSERT INTO `examQuestion` VALUES ('903', '406', '22', '0');
INSERT INTO `examQuestion` VALUES ('904', '406', '24', '0');
INSERT INTO `examQuestion` VALUES ('905', '407', '22', '0');
INSERT INTO `examQuestion` VALUES ('906', '407', '24', '0');
INSERT INTO `examQuestion` VALUES ('907', '408', '22', '0');
INSERT INTO `examQuestion` VALUES ('908', '408', '24', '0');
INSERT INTO `examQuestion` VALUES ('909', '409', '22', '0');
INSERT INTO `examQuestion` VALUES ('910', '409', '24', '0');
INSERT INTO `examQuestion` VALUES ('911', '410', '22', '0');
INSERT INTO `examQuestion` VALUES ('912', '410', '24', '0');
INSERT INTO `examQuestion` VALUES ('913', '411', '22', '0');
INSERT INTO `examQuestion` VALUES ('914', '411', '24', '0');
INSERT INTO `examQuestion` VALUES ('915', '412', '22', '0');
INSERT INTO `examQuestion` VALUES ('916', '412', '24', '0');
INSERT INTO `examQuestion` VALUES ('917', '413', '22', '0');
INSERT INTO `examQuestion` VALUES ('918', '413', '24', '0');
INSERT INTO `examQuestion` VALUES ('919', '414', '22', '0');
INSERT INTO `examQuestion` VALUES ('920', '414', '24', '0');
INSERT INTO `examQuestion` VALUES ('921', '415', '22', '0');
INSERT INTO `examQuestion` VALUES ('922', '415', '24', '0');
INSERT INTO `examQuestion` VALUES ('923', '416', '626', '0');
INSERT INTO `examQuestion` VALUES ('924', '416', '627', '0');
INSERT INTO `examQuestion` VALUES ('925', '416', '628', '0');
INSERT INTO `examQuestion` VALUES ('926', '416', '629', '0');
INSERT INTO `examQuestion` VALUES ('927', '416', '630', '0');
INSERT INTO `examQuestion` VALUES ('933', '418', '274', '0');
INSERT INTO `examQuestion` VALUES ('934', '418', '275', '0');
INSERT INTO `examQuestion` VALUES ('935', '418', '276', '0');
INSERT INTO `examQuestion` VALUES ('936', '418', '405', '0');
INSERT INTO `examQuestion` VALUES ('937', '418', '406', '0');
INSERT INTO `examQuestion` VALUES ('938', '421', '274', '0');
INSERT INTO `examQuestion` VALUES ('939', '421', '275', '0');
INSERT INTO `examQuestion` VALUES ('940', '421', '276', '0');
INSERT INTO `examQuestion` VALUES ('941', '421', '405', '0');
INSERT INTO `examQuestion` VALUES ('942', '421', '406', '0');
INSERT INTO `examQuestion` VALUES ('943', '422', '274', '0');
INSERT INTO `examQuestion` VALUES ('944', '422', '275', '0');
INSERT INTO `examQuestion` VALUES ('945', '422', '276', '0');
INSERT INTO `examQuestion` VALUES ('946', '422', '405', '0');
INSERT INTO `examQuestion` VALUES ('947', '422', '406', '0');
INSERT INTO `examQuestion` VALUES ('948', '423', '274', '0');
INSERT INTO `examQuestion` VALUES ('949', '423', '275', '0');
INSERT INTO `examQuestion` VALUES ('950', '423', '276', '0');
INSERT INTO `examQuestion` VALUES ('951', '423', '405', '0');
INSERT INTO `examQuestion` VALUES ('952', '423', '406', '0');
INSERT INTO `examQuestion` VALUES ('953', '424', '626', '0');
INSERT INTO `examQuestion` VALUES ('954', '424', '627', '0');
INSERT INTO `examQuestion` VALUES ('955', '424', '628', '0');
INSERT INTO `examQuestion` VALUES ('956', '424', '629', '0');
INSERT INTO `examQuestion` VALUES ('957', '424', '630', '0');
INSERT INTO `examQuestion` VALUES ('958', '427', '626', '0');
INSERT INTO `examQuestion` VALUES ('959', '427', '627', '0');
INSERT INTO `examQuestion` VALUES ('960', '427', '628', '0');
INSERT INTO `examQuestion` VALUES ('961', '427', '629', '0');
INSERT INTO `examQuestion` VALUES ('962', '427', '630', '0');
INSERT INTO `examQuestion` VALUES ('963', '428', '626', '0');
INSERT INTO `examQuestion` VALUES ('964', '428', '627', '0');
INSERT INTO `examQuestion` VALUES ('965', '428', '628', '0');
INSERT INTO `examQuestion` VALUES ('966', '428', '629', '0');
INSERT INTO `examQuestion` VALUES ('967', '428', '630', '0');
INSERT INTO `examQuestion` VALUES ('968', '431', '119', '0');
INSERT INTO `examQuestion` VALUES ('969', '431', '120', '0');
INSERT INTO `examQuestion` VALUES ('970', '431', '121', '0');
INSERT INTO `examQuestion` VALUES ('971', '431', '122', '0');
INSERT INTO `examQuestion` VALUES ('972', '431', '123', '0');
INSERT INTO `examQuestion` VALUES ('973', '431', '542', '0');
INSERT INTO `examQuestion` VALUES ('974', '431', '543', '0');
INSERT INTO `examQuestion` VALUES ('975', '431', '544', '0');
INSERT INTO `examQuestion` VALUES ('976', '431', '545', '0');
INSERT INTO `examQuestion` VALUES ('977', '431', '546', '0');
INSERT INTO `examQuestion` VALUES ('978', '432', '119', '0');
INSERT INTO `examQuestion` VALUES ('979', '432', '120', '0');
INSERT INTO `examQuestion` VALUES ('980', '432', '121', '0');
INSERT INTO `examQuestion` VALUES ('981', '432', '122', '0');
INSERT INTO `examQuestion` VALUES ('982', '432', '123', '0');
INSERT INTO `examQuestion` VALUES ('983', '433', '626', '0');
INSERT INTO `examQuestion` VALUES ('984', '433', '627', '0');
INSERT INTO `examQuestion` VALUES ('985', '433', '628', '0');
INSERT INTO `examQuestion` VALUES ('986', '433', '629', '0');
INSERT INTO `examQuestion` VALUES ('987', '433', '630', '0');
INSERT INTO `examQuestion` VALUES ('988', '433', '274', '0');
INSERT INTO `examQuestion` VALUES ('989', '433', '275', '0');
INSERT INTO `examQuestion` VALUES ('990', '433', '276', '0');
INSERT INTO `examQuestion` VALUES ('991', '433', '134', '0');
INSERT INTO `examQuestion` VALUES ('992', '433', '135', '0');
INSERT INTO `examQuestion` VALUES ('993', '434', '626', '0');
INSERT INTO `examQuestion` VALUES ('994', '434', '627', '0');
INSERT INTO `examQuestion` VALUES ('995', '434', '628', '0');
INSERT INTO `examQuestion` VALUES ('996', '434', '629', '0');
INSERT INTO `examQuestion` VALUES ('997', '434', '630', '0');

-- ----------------------------
-- Table structure for option
-- ----------------------------
DROP TABLE IF EXISTS `option`;
CREATE TABLE `option` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `qid` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `isTrue` int(11) NOT NULL,
  `tutorial` varchar(255) DEFAULT NULL,
  `symbol` char(4) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fo_qid` (`qid`),
  CONSTRAINT `fo_qid` FOREIGN KEY (`qid`) REFERENCES `question` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=2549 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of option
-- ----------------------------
INSERT INTO `option` VALUES ('27', '18', '小或相等', '1', ' ', 'A');
INSERT INTO `option` VALUES ('28', '18', '小', '0', ' ', 'B');
INSERT INTO `option` VALUES ('29', '18', '大或相等', '0', ' ', 'C');
INSERT INTO `option` VALUES ('30', '18', '大', '0', ' ', 'D');
INSERT INTO `option` VALUES ('31', '19', '2m+1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('32', '19', '2m-1', '1', ' ', 'B');
INSERT INTO `option` VALUES ('33', '19', '2(m-1)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('34', '19', '2m', '0', ' ', 'D');
INSERT INTO `option` VALUES ('35', '20', '[logn]+1', '1', ' ', 'A');
INSERT INTO `option` VALUES ('36', '20', 'logn+1', '0', ' ', 'B');
INSERT INTO `option` VALUES ('37', '20', '[logn]', '0', ' ', 'C');
INSERT INTO `option` VALUES ('38', '20', 'logn-1', '0', ' ', 'D');
INSERT INTO `option` VALUES ('39', '21', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('40', '21', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('41', '22', '6', '0', ' ', 'A');
INSERT INTO `option` VALUES ('42', '22', '5', '0', ' ', 'B');
INSERT INTO `option` VALUES ('43', '22', '4', '1', ' ', 'C');
INSERT INTO `option` VALUES ('44', '22', '3', '0', ' ', 'D');
INSERT INTO `option` VALUES ('45', '24', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('46', '24', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('47', '25', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('48', '25', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('49', '26', '二叉排序树', '0', ' ', 'A');
INSERT INTO `option` VALUES ('50', '26', '哈夫曼树', '0', ' ', 'B');
INSERT INTO `option` VALUES ('51', '26', 'AVL树', '0', ' ', 'C');
INSERT INTO `option` VALUES ('52', '26', '堆', '1', ' ', 'D');
INSERT INTO `option` VALUES ('53', '27', '栈', '0', ' ', 'A');
INSERT INTO `option` VALUES ('54', '27', '队列', '0', ' ', 'B');
INSERT INTO `option` VALUES ('55', '27', '完全二叉树', '1', ' ', 'C');
INSERT INTO `option` VALUES ('56', '27', '堆', '1', ' ', 'D');
INSERT INTO `option` VALUES ('57', '28', '删除最小元素的复杂度是o(lgn)', '1', ' ', 'A');
INSERT INTO `option` VALUES ('58', '28', '插入新元素的复杂度是o(1)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('59', '28', '合并两个堆的复杂度是o(lgn)', '1', ' ', 'C');
INSERT INTO `option` VALUES ('60', '28', '查询最小元素的复杂度是o(1)', '1', ' ', 'D');
INSERT INTO `option` VALUES ('61', '29', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('62', '29', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('63', '30', '队列', '0', ' ', 'A');
INSERT INTO `option` VALUES ('64', '30', '栈', '0', ' ', 'B');
INSERT INTO `option` VALUES ('65', '30', '关联数组', '1', ' ', 'C');
INSERT INTO `option` VALUES ('66', '30', '链表', '0', ' ', 'D');
INSERT INTO `option` VALUES ('67', '31', '1,1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('68', '31', '1,2', '1', ' ', 'B');
INSERT INTO `option` VALUES ('69', '31', '2,1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('70', '31', '2,2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('71', '32', 'a.y[0]=11', '0', ' ', 'A');
INSERT INTO `option` VALUES ('72', '32', 'a.y[1]=11', '0', ' ', 'B');
INSERT INTO `option` VALUES ('73', '32', 'a.y[2]=11', '0', ' ', 'C');
INSERT INTO `option` VALUES ('74', '32', 'a.y[3]=11', '1', ' ', 'D');
INSERT INTO `option` VALUES ('75', '32', 'a.y[0]=22', '0', ' ', 'E');
INSERT INTO `option` VALUES ('76', '32', 'a.y[3]=22', '0', ' ', 'F');
INSERT INTO `option` VALUES ('77', '33', 'Func(a)', '1', ' ', 'A');
INSERT INTO `option` VALUES ('78', '33', 'Func(&amp;a)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('79', '33', 'Func(*a)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('80', '33', 'Func(&amp;(*a))', '0', ' ', 'D');
INSERT INTO `option` VALUES ('81', '34', 'A、C、D、G、H、M、P、Q、R、X', '0', ' ', 'A');
INSERT INTO `option` VALUES ('82', '34', 'A、C、M、D、H、P、X 、G、0、R', '0', ' ', 'B');
INSERT INTO `option` VALUES ('83', '34', 'A、D、P、R、C、Q、X 、M、H、G', '1', ' ', 'C');
INSERT INTO `option` VALUES ('84', '34', 'A、D、C、M、P、G、H、X 、R、Q', '0', ' ', 'D');
INSERT INTO `option` VALUES ('85', '35', 'O(log<sub>2</sub>n)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('86', '35', 'O(n)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('87', '35', 'O(nlog<sub>2</sub>n)', '1', ' ', 'C');
INSERT INTO `option` VALUES ('88', '35', 'O(n*n)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('89', '36', '8&nbsp;3&nbsp;2&nbsp;5&nbsp;1&nbsp;6&nbsp;4&nbsp;7', '1', ' ', 'A');
INSERT INTO `option` VALUES ('90', '36', '3&nbsp;2&nbsp;8&nbsp;5&nbsp;1&nbsp;4&nbsp;6&nbsp;7', '0', ' ', 'B');
INSERT INTO `option` VALUES ('91', '36', '3&nbsp;8&nbsp;2&nbsp;5&nbsp;1&nbsp;6&nbsp;7&nbsp;4', '0', ' ', 'C');
INSERT INTO `option` VALUES ('92', '36', '8&nbsp;2&nbsp;3&nbsp;5&nbsp;1&nbsp;4&nbsp;7&nbsp;6', '0', ' ', 'D');
INSERT INTO `option` VALUES ('93', '37', '(11 5 7 2 3 17)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('94', '37', '(11 5 7 2 13 3)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('95', '37', '(17 11 7 2 3 5)', '1', ' ', 'C');
INSERT INTO `option` VALUES ('96', '37', '(17 11 7 5 3 2)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('97', '37', '(17 7 11 3 5 2)', '0', ' ', 'E');
INSERT INTO `option` VALUES ('98', '37', '(17 7 11 3 2 5)', '0', ' ', 'F');
INSERT INTO `option` VALUES ('99', '38', '可运行状态', '0', ' ', 'A');
INSERT INTO `option` VALUES ('100', '38', '运行状态', '0', ' ', 'B');
INSERT INTO `option` VALUES ('101', '38', '阻塞状态', '1', ' ', 'C');
INSERT INTO `option` VALUES ('102', '38', '终止状态', '0', ' ', 'D');
INSERT INTO `option` VALUES ('103', '39', '寻道时间', '0', ' ', 'A');
INSERT INTO `option` VALUES ('104', '39', '旋转延迟时间', '0', ' ', 'B');
INSERT INTO `option` VALUES ('105', '39', '定位时间', '1', ' ', 'C');
INSERT INTO `option` VALUES ('106', '39', '传送时间', '0', ' ', 'D');
INSERT INTO `option` VALUES ('107', '40', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('108', '40', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('109', '41', '前序', '0', ' ', 'A');
INSERT INTO `option` VALUES ('110', '41', '中序', '0', ' ', 'B');
INSERT INTO `option` VALUES ('111', '41', '后序', '1', ' ', 'C');
INSERT INTO `option` VALUES ('112', '41', '从根开始按层次遍历', '0', ' ', 'D');
INSERT INTO `option` VALUES ('113', '42', '11', '0', ' ', 'A');
INSERT INTO `option` VALUES ('114', '43', '从始点到终点的最短路径', '0', ' ', 'A');
INSERT INTO `option` VALUES ('115', '43', '从始点到终点的最长路径', '1', ' ', 'B');
INSERT INTO `option` VALUES ('116', '43', '从始点到终点的边数最多的路径', '0', ' ', 'C');
INSERT INTO `option` VALUES ('117', '43', '从始点到终点的边数最少的路径', '0', ' ', 'D');
INSERT INTO `option` VALUES ('118', '44', '哈希表是一个在时间和空间上做出权衡的经典例子。如果没有内存限制，那么可以直接将键作为数组的索引。那么所有的查找时间复杂度为O(1)；', '0', ' ', 'A');
INSERT INTO `option` VALUES ('119', '44', '线性表实现相对比较简单', '0', ' ', 'B');
INSERT INTO `option` VALUES ('120', '44', '平衡二叉树的各项操作的时间复杂度为O（logn）', '0', ' ', 'C');
INSERT INTO `option` VALUES ('121', '44', '平衡二叉树的插入节点比较快', '1', ' ', 'D');
INSERT INTO `option` VALUES ('122', '45', '107', '0', ' ', 'A');
INSERT INTO `option` VALUES ('123', '45', '108', '1', ' ', 'B');
INSERT INTO `option` VALUES ('124', '45', '214', '0', ' ', 'C');
INSERT INTO `option` VALUES ('125', '45', '215', '0', ' ', 'D');
INSERT INTO `option` VALUES ('126', '46', 'a(001)&nbsp;&nbsp;b(000)&nbsp;&nbsp;h(01)&nbsp;&nbsp;i(10)&nbsp;&nbsp;o(11)', '1', ' ', 'A');
INSERT INTO `option` VALUES ('127', '46', 'a(0000)&nbsp;&nbsp;b(0001)&nbsp;&nbsp;h(001)&nbsp;&nbsp;o(01)&nbsp;&nbsp;i(1)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('128', '46', 'a(000)&nbsp;&nbsp;b(001)&nbsp;&nbsp;h(01)&nbsp;&nbsp;i(10)&nbsp;&nbsp;o(00)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('129', '46', 'a(0000)&nbsp;&nbsp;b(0001)&nbsp;&nbsp;h(001)&nbsp;&nbsp;o(000)&nbsp;&nbsp;i(1)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('130', '47', '(00,01,10,11)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('131', '47', '(0,1,00,11)', '1', ' ', 'B');
INSERT INTO `option` VALUES ('132', '47', '(0,10,110,111)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('133', '47', '(1,01,000,001)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('134', '48', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('135', '48', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('136', '49', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('137', '49', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('138', '50', 'o(1)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('139', '50', 'o(n)', '1', ' ', 'B');
INSERT INTO `option` VALUES ('140', '50', 'o(logn)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('141', '50', 'o(n的二次方)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('142', '51', '前序线索树', '0', ' ', 'A');
INSERT INTO `option` VALUES ('143', '51', '中序线索树', '0', ' ', 'B');
INSERT INTO `option` VALUES ('144', '51', '后序线索树', '1', ' ', 'C');
INSERT INTO `option` VALUES ('145', '52', '如果一个问题可以找到一个能在多项式的时间里解决它的算法，那么这个问题就属于P问题', '0', ' ', 'A');
INSERT INTO `option` VALUES ('146', '52', 'NP问题是指可以在多项式的时间里验证一个解的问题', '0', ' ', 'B');
INSERT INTO `option` VALUES ('147', '52', '所有的P类问题都是NP问题', '0', ' ', 'C');
INSERT INTO `option` VALUES ('148', '52', 'NPC问题不一定是个NP问题，只要保证所有的NP问题都可以约化到它即可', '1', ' ', 'D');
INSERT INTO `option` VALUES ('149', '53', '多态性', '1', ' ', 'A');
INSERT INTO `option` VALUES ('150', '53', '多继承', '0', ' ', 'B');
INSERT INTO `option` VALUES ('151', '53', '类的组合', '0', ' ', 'C');
INSERT INTO `option` VALUES ('152', '53', '类的复用', '0', ' ', 'D');
INSERT INTO `option` VALUES ('153', '54', 'true,false', '0', ' ', 'A');
INSERT INTO `option` VALUES ('154', '54', 'true,true', '1', ' ', 'B');
INSERT INTO `option` VALUES ('155', '54', 'false,true', '0', ' ', 'C');
INSERT INTO `option` VALUES ('156', '54', 'false,false', '0', ' ', 'D');
INSERT INTO `option` VALUES ('157', '54', '对于不同的环境结果不同', '0', ' ', 'E');
INSERT INTO `option` VALUES ('158', '54', '程序无法执行', '0', ' ', 'F');
INSERT INTO `option` VALUES ('159', '55', 'PROPAGATION_SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行', '0', ' ', 'A');
INSERT INTO `option` VALUES ('160', '55', 'PROPAGATION_REQUIRED：支持当前事务，如果当前没有事务，就抛出异常', '1', ' ', 'B');
INSERT INTO `option` VALUES ('161', '55', 'PROPAGATION_REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起', '0', ' ', 'C');
INSERT INTO `option` VALUES ('162', '55', 'PROPAGATION_NESTED：支持当前事务，新增Savepoint点，与当前事务同步提交或回滚', '0', ' ', 'D');
INSERT INTO `option` VALUES ('163', '56', '给元素绑定样式', '1', ' ', 'A');
INSERT INTO `option` VALUES ('164', '56', '给元素绑定类名', '0', ' ', 'B');
INSERT INTO `option` VALUES ('165', '56', '给元素绑定监听', '0', ' ', 'C');
INSERT INTO `option` VALUES ('166', '56', '显示隐藏', '0', ' ', 'D');
INSERT INTO `option` VALUES ('167', '57', '在compile后', '1', ' ', 'A');
INSERT INTO `option` VALUES ('168', '57', 'compile执行中', '0', ' ', 'B');
INSERT INTO `option` VALUES ('169', '57', 'compile前', '0', ' ', 'C');
INSERT INTO `option` VALUES ('170', '57', '以上都不是', '0', ' ', 'D');
INSERT INTO `option` VALUES ('171', '58', '绑定DOM', '1', ' ', 'A');
INSERT INTO `option` VALUES ('172', '58', '数据绑定', '0', ' ', 'B');
INSERT INTO `option` VALUES ('173', '58', '定义模版', '0', ' ', 'C');
INSERT INTO `option` VALUES ('174', '58', '以上都不是', '0', ' ', 'D');
INSERT INTO `option` VALUES ('175', '59', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('176', '59', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('177', '60', 'O(n*n),O(nlogn),O(n*n)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('178', '60', 'O(n*n),O(n*n),O(nlogn)', '1', ' ', 'B');
INSERT INTO `option` VALUES ('179', '60', 'O(n*n),O(nlogn),O(nlogn)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('180', '60', 'O(nlogn),O(nlogn),O(nlogn)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('181', '61', '-1,4,8,9,20,7,15,7', '0', ' ', 'A');
INSERT INTO `option` VALUES ('182', '61', '-1,7,15,7,4,8,20,9', '0', ' ', 'B');
INSERT INTO `option` VALUES ('183', '61', '-1,4,7,8,20,15,7,9', '1', ' ', 'C');
INSERT INTO `option` VALUES ('184', '61', 'ABC均不对', '0', ' ', 'D');
INSERT INTO `option` VALUES ('185', '62', '[n/2]', '0', ' ', 'A');
INSERT INTO `option` VALUES ('186', '62', '[n/2]-1', '0', ' ', 'B');
INSERT INTO `option` VALUES ('187', '62', '1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('188', '62', '[n/2]+2', '1', ' ', 'D');
INSERT INTO `option` VALUES ('189', '63', '插入排序', '1', ' ', 'A');
INSERT INTO `option` VALUES ('190', '63', 'Shell排序', '0', ' ', 'B');
INSERT INTO `option` VALUES ('191', '63', '合并排序', '0', ' ', 'C');
INSERT INTO `option` VALUES ('192', '63', '快速排序', '0', ' ', 'D');
INSERT INTO `option` VALUES ('193', '64', '2', '1', ' ', 'A');
INSERT INTO `option` VALUES ('194', '64', '3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('195', '64', '4', '0', ' ', 'C');
INSERT INTO `option` VALUES ('196', '64', '7', '0', ' ', 'D');
INSERT INTO `option` VALUES ('197', '65', '错', '0', ' ', 'A');
INSERT INTO `option` VALUES ('198', '65', '对', '1', ' ', 'B');
INSERT INTO `option` VALUES ('199', '66', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('200', '66', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('201', '67', '+ requestWithURL:', '0', ' ', 'A');
INSERT INTO `option` VALUES ('202', '67', '– initWithURL:', '0', ' ', 'B');
INSERT INTO `option` VALUES ('203', '67', '+ URLWithString:', '1', ' ', 'C');
INSERT INTO `option` VALUES ('204', '67', '– initWithString:', '1', ' ', 'D');
INSERT INTO `option` VALUES ('205', '68', 'ABPeoplePickerNavigationController', '1', ' ', 'A');
INSERT INTO `option` VALUES ('206', '68', 'ABPersonViewController', '1', ' ', 'B');
INSERT INTO `option` VALUES ('207', '68', 'ABNewPersonViewController', '1', ' ', 'C');
INSERT INTO `option` VALUES ('208', '68', 'ABUnknownPersonViewController', '1', ' ', 'D');
INSERT INTO `option` VALUES ('209', '69', 'OCUnit', '1', ' ', 'A');
INSERT INTO `option` VALUES ('210', '69', 'GHUnit', '1', ' ', 'B');
INSERT INTO `option` VALUES ('211', '69', 'OCMock', '1', ' ', 'C');
INSERT INTO `option` VALUES ('212', '69', 'NSXML', '0', ' ', 'D');
INSERT INTO `option` VALUES ('213', '70', '158', '0', ' ', 'A');
INSERT INTO `option` VALUES ('214', '70', '160', '1', ' ', 'B');
INSERT INTO `option` VALUES ('215', '70', '162', '0', ' ', 'C');
INSERT INTO `option` VALUES ('216', '70', '165', '0', ' ', 'D');
INSERT INTO `option` VALUES ('217', '71', '18', '0', ' ', 'A');
INSERT INTO `option` VALUES ('218', '71', '20', '0', ' ', 'B');
INSERT INTO `option` VALUES ('219', '71', '40', '0', ' ', 'C');
INSERT INTO `option` VALUES ('220', '71', '60', '1', ' ', 'D');
INSERT INTO `option` VALUES ('221', '71', 'None of above is correct', '0', ' ', 'E');
INSERT INTO `option` VALUES ('222', '72', '144', '0', ' ', 'A');
INSERT INTO `option` VALUES ('223', '72', '217', '0', ' ', 'B');
INSERT INTO `option` VALUES ('224', '72', '512', '1', ' ', 'C');
INSERT INTO `option` VALUES ('225', '72', '640', '0', ' ', 'D');
INSERT INTO `option` VALUES ('226', '73', '9', '0', ' ', 'A');
INSERT INTO `option` VALUES ('227', '73', '15', '0', ' ', 'B');
INSERT INTO `option` VALUES ('228', '73', '24', '1', ' ', 'C');
INSERT INTO `option` VALUES ('229', '73', '48', '0', ' ', 'D');
INSERT INTO `option` VALUES ('230', '74', '456', '0', ' ', 'A');
INSERT INTO `option` VALUES ('231', '74', '492', '1', ' ', 'B');
INSERT INTO `option` VALUES ('232', '74', '568', '0', ' ', 'C');
INSERT INTO `option` VALUES ('233', '74', '626', '0', ' ', 'D');
INSERT INTO `option` VALUES ('234', '74', '680', '0', ' ', 'E');
INSERT INTO `option` VALUES ('235', '74', '702', '0', ' ', 'F');
INSERT INTO `option` VALUES ('236', '75', '线性访问内存非法时，当前线程会进入信号处理函数', '1', ' ', 'A');
INSERT INTO `option` VALUES ('237', '75', '用mv命令移动文件时，文件的修改时间会发生变化', '0', ' ', 'B');
INSERT INTO `option` VALUES ('238', '75', 'ulimit -c设置的是函数调用栈的大小', '0', ' ', 'C');
INSERT INTO `option` VALUES ('239', '75', 'malloc函数是应用程序向操作系统申请内存的接口', '0', ' ', 'D');
INSERT INTO `option` VALUES ('240', '76', 'cat  /proc/cpuinfo 查看CPU相关参数的linux系统命令', '0', ' ', 'A');
INSERT INTO `option` VALUES ('241', '76', 'cat  /proc/meminfo 查看linux系统内存信息的linux系统命令', '0', ' ', 'B');
INSERT INTO `option` VALUES ('242', '76', 'du -h: 查看硬盘信息', '1', ' ', 'C');
INSERT INTO `option` VALUES ('243', '76', 'cat /proc/swaps ：查看所有swap分区的信息', '0', ' ', 'D');
INSERT INTO `option` VALUES ('244', '77', 'grep  \"mrtg\" /usr/local', '0', ' ', 'A');
INSERT INTO `option` VALUES ('245', '77', 'grep -Rn \"mrtg\" /usr/local', '1', ' ', 'B');
INSERT INTO `option` VALUES ('246', '77', 'find /usr/local -name \'mrtg\'', '0', ' ', 'C');
INSERT INTO `option` VALUES ('247', '77', 'find /usr/local -name \'mrtg\' -R', '0', ' ', 'D');
INSERT INTO `option` VALUES ('248', '78', 'bash &amp;.bashrc', '0', ' ', 'A');
INSERT INTO `option` VALUES ('249', '78', 'bash &amp; bash_profile', '0', ' ', 'B');
INSERT INTO `option` VALUES ('250', '78', 'bashrc &amp;.bash_profile', '1', ' ', 'C');
INSERT INTO `option` VALUES ('251', '78', 'bashrc &amp;.bash_conf', '0', ' ', 'D');
INSERT INTO `option` VALUES ('252', '79', 'pthread_create 创建一个线程', '1', ' ', 'A');
INSERT INTO `option` VALUES ('253', '79', 'pthread_join用来等待一个线程的结束', '1', ' ', 'B');
INSERT INTO `option` VALUES ('254', '79', 'pthread_mutex_init 初始化一个线程互斥锁', '1', ' ', 'C');
INSERT INTO `option` VALUES ('255', '79', 'pthread_exit结束一个线程', '1', ' ', 'D');
INSERT INTO `option` VALUES ('256', '80', '5', '0', ' ', 'A');
INSERT INTO `option` VALUES ('257', '80', '30', '0', ' ', 'B');
INSERT INTO `option` VALUES ('258', '80', '45', '0', ' ', 'C');
INSERT INTO `option` VALUES ('259', '80', '50', '1', ' ', 'D');
INSERT INTO `option` VALUES ('260', '80', '55', '0', ' ', 'E');
INSERT INTO `option` VALUES ('261', '81', '260,180', '1', ' ', 'A');
INSERT INTO `option` VALUES ('262', '81', '240,180', '0', ' ', 'B');
INSERT INTO `option` VALUES ('263', '81', '260,190', '0', ' ', 'C');
INSERT INTO `option` VALUES ('264', '81', '240,190', '0', ' ', 'D');
INSERT INTO `option` VALUES ('265', '82', '33MB/s', '0', ' ', 'A');
INSERT INTO `option` VALUES ('266', '82', '4MB/s', '0', ' ', 'B');
INSERT INTO `option` VALUES ('267', '82', '133MB/s', '1', ' ', 'C');
INSERT INTO `option` VALUES ('268', '82', '266MB/s', '0', ' ', 'D');
INSERT INTO `option` VALUES ('269', '83', '25', '1', ' ', 'A');
INSERT INTO `option` VALUES ('270', '83', '32', '0', ' ', 'B');
INSERT INTO `option` VALUES ('271', '83', '24', '0', ' ', 'C');
INSERT INTO `option` VALUES ('272', '83', '16', '0', ' ', 'D');
INSERT INTO `option` VALUES ('273', '84', '19', '0', ' ', 'A');
INSERT INTO `option` VALUES ('274', '84', '20', '0', ' ', 'B');
INSERT INTO `option` VALUES ('275', '84', '15', '0', ' ', 'C');
INSERT INTO `option` VALUES ('276', '84', '24', '1', ' ', 'D');
INSERT INTO `option` VALUES ('277', '85', 'Ctrl+Alt+Del', '0', ' ', 'A');
INSERT INTO `option` VALUES ('278', '85', 'halt', '1', ' ', 'B');
INSERT INTO `option` VALUES ('279', '85', 'shutdown -r now', '0', ' ', 'C');
INSERT INTO `option` VALUES ('280', '85', 'reboot', '0', ' ', 'D');
INSERT INTO `option` VALUES ('281', '86', '-m', '0', ' ', 'A');
INSERT INTO `option` VALUES ('282', '86', '-d', '0', ' ', 'B');
INSERT INTO `option` VALUES ('283', '86', '-f', '0', ' ', 'C');
INSERT INTO `option` VALUES ('284', '86', '-p', '1', ' ', 'D');
INSERT INTO `option` VALUES ('285', '87', '孤儿进程：一个父进程退出，而它的一个或多个子进程还在运行，那么那些子进程将成为孤儿进程。', '0', ' ', 'A');
INSERT INTO `option` VALUES ('286', '87', '僵尸进程：一个进程使用fork创建子进程，如果子进程退出，而父进程并没有调用wait或waitpid获取子进程的状态信息，那么子进程的进程描述符仍然保存在系统中。这种进程称之为僵死进程。', '0', ' ', 'B');
INSERT INTO `option` VALUES ('287', '87', '孤儿进程将被init进程(进程号为1)所收养，并由init进程对它们完成状态收集工作。', '0', ' ', 'C');
INSERT INTO `option` VALUES ('288', '87', '孤儿进程和僵尸进程都可能使系统不能产生新的进程，都应该避免', '1', ' ', 'D');
INSERT INTO `option` VALUES ('289', '88', '775', '0', ' ', 'A');
INSERT INTO `option` VALUES ('290', '88', '745', '0', ' ', 'B');
INSERT INTO `option` VALUES ('291', '88', '645', '1', ' ', 'C');
INSERT INTO `option` VALUES ('292', '88', '643', '0', ' ', 'D');
INSERT INTO `option` VALUES ('293', '89', 'SpinLock', '1', ' ', 'A');
INSERT INTO `option` VALUES ('294', '89', 'Mutex', '0', ' ', 'B');
INSERT INTO `option` VALUES ('295', '89', 'Semaphore', '0', ' ', 'C');
INSERT INTO `option` VALUES ('296', '89', 'Condition variable', '0', ' ', 'D');
INSERT INTO `option` VALUES ('297', '90', '共享内存', '0', ' ', 'A');
INSERT INTO `option` VALUES ('298', '90', '命名管道', '0', ' ', 'B');
INSERT INTO `option` VALUES ('299', '90', '信号量', '0', ' ', 'C');
INSERT INTO `option` VALUES ('300', '90', '临界区', '1', ' ', 'D');
INSERT INTO `option` VALUES ('301', '91', '单级目录结构', '0', ' ', 'A');
INSERT INTO `option` VALUES ('302', '91', '二级目录结构', '0', ' ', 'B');
INSERT INTO `option` VALUES ('303', '91', '单纯树形目录结构', '0', ' ', 'C');
INSERT INTO `option` VALUES ('304', '91', '带链接树形目录结构', '1', ' ', 'D');
INSERT INTO `option` VALUES ('305', '92', 'ls -h', '0', ' ', 'A');
INSERT INTO `option` VALUES ('306', '92', 'du -sh', '1', ' ', 'B');
INSERT INTO `option` VALUES ('307', '92', 'df -h', '0', ' ', 'C');
INSERT INTO `option` VALUES ('308', '92', 'fdish -h', '0', ' ', 'D');
INSERT INTO `option` VALUES ('309', '93', 'Unix', '1', ' ', 'A');
INSERT INTO `option` VALUES ('310', '93', 'Linux', '1', ' ', 'B');
INSERT INTO `option` VALUES ('311', '93', 'WIN98', '0', ' ', 'C');
INSERT INTO `option` VALUES ('312', '93', 'WINDOWS&nbsp;NT', '1', ' ', 'D');
INSERT INTO `option` VALUES ('313', '93', 'NETWARE&nbsp;4.11', '1', ' ', 'E');
INSERT INTO `option` VALUES ('314', '93', 'OS/2', '0', ' ', 'F');
INSERT INTO `option` VALUES ('315', '93', 'LAN&nbsp;MANGER&nbsp;4.0', '1', ' ', 'G');
INSERT INTO `option` VALUES ('316', '94', '.bash_logout：退出shell时，要执行的命令', '1', ' ', 'A');
INSERT INTO `option` VALUES ('317', '94', '.bash_profile：每个用户都可使用该文件输入专用于自己使用的shell信息，当用户登录时，该文件仅仅执行一次!默认情况下', '1', ' ', 'B');
INSERT INTO `option` VALUES ('318', '94', '/etc/bash.bashrc 该文件包含专用于个人的bash shell的bash信息，当登录时以及每次打开新的shell时，该文件被读取', '0', ' ', 'C');
INSERT INTO `option` VALUES ('319', '94', '/etc/profile：此文件为系统的每个用户设置环境信息，当用户第一次登录时，该文件被执行', '1', ' ', 'D');
INSERT INTO `option` VALUES ('320', '95', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('321', '95', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('322', '96', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('323', '96', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('324', '97', '没有将timer加入runloop', '1', ' ', 'A');
INSERT INTO `option` VALUES ('325', '97', 'doSomeThing缺少参数', '0', ' ', 'B');
INSERT INTO `option` VALUES ('326', '97', '忘记传递数据给userInfo', '0', ' ', 'C');
INSERT INTO `option` VALUES ('327', '97', 'myTimer对象未通过[[myTimer alloc] init]方法初始化', '0', ' ', 'D');
INSERT INTO `option` VALUES ('328', '98', '建立Socket连接', '1', ' ', 'A');
INSERT INTO `option` VALUES ('329', '98', '获得端口号', '0', ' ', 'B');
INSERT INTO `option` VALUES ('330', '98', '获得IP地址', '0', ' ', 'C');
INSERT INTO `option` VALUES ('331', '98', '获得主机名', '0', ' ', 'D');
INSERT INTO `option` VALUES ('332', '99', '封装', '1', ' ', 'A');
INSERT INTO `option` VALUES ('333', '99', '继承', '1', ' ', 'B');
INSERT INTO `option` VALUES ('334', '99', '重载', '0', ' ', 'C');
INSERT INTO `option` VALUES ('335', '99', '多态', '1', ' ', 'D');
INSERT INTO `option` VALUES ('336', '100', 'visible-print-block', '0', ' ', 'A');
INSERT INTO `option` VALUES ('337', '100', 'visible-print-inline', '0', ' ', 'B');
INSERT INTO `option` VALUES ('338', '100', 'hidden-print', '1', ' ', 'C');
INSERT INTO `option` VALUES ('339', '100', 'print-hidden', '0', ' ', 'D');
INSERT INTO `option` VALUES ('340', '101', '一直到IE9，都是Trident内核', '0', ' ', 'A');
INSERT INTO `option` VALUES ('341', '101', 'firefox是Gecko内核', '0', ' ', 'B');
INSERT INTO `option` VALUES ('342', '101', 'chrome是webkit内核', '0', ' ', 'C');
INSERT INTO `option` VALUES ('343', '101', 'IE是目前最快的浏览器', '1', ' ', 'D');
INSERT INTO `option` VALUES ('344', '102', '图片存储的地址', '1', ' ', 'A');
INSERT INTO `option` VALUES ('345', '102', '图片的描述', '0', ' ', 'B');
INSERT INTO `option` VALUES ('346', '102', '图片的名称', '0', ' ', 'C');
INSERT INTO `option` VALUES ('347', '102', '图片大小', '0', ' ', 'D');
INSERT INTO `option` VALUES ('348', '103', '&lt;meta&gt;', '0', ' ', 'A');
INSERT INTO `option` VALUES ('349', '103', '&lt;pre&gt;', '1', ' ', 'B');
INSERT INTO `option` VALUES ('350', '103', '&lt;mark&gt;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('351', '103', '&lt;small&gt;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('352', '104', '&lt;meta&gt;', '0', ' ', 'A');
INSERT INTO `option` VALUES ('353', '104', '&lt;link&gt;', '0', ' ', 'B');
INSERT INTO `option` VALUES ('354', '104', '&lt;title&gt;', '1', ' ', 'C');
INSERT INTO `option` VALUES ('355', '104', '&lt;script&gt;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('356', '105', 'A%2==1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('357', '105', '!(A%2==0)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('358', '105', '!(A%2)', '1', ' ', 'C');
INSERT INTO `option` VALUES ('359', '105', 'A%2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('360', '106', 'while(int i&lt;7){i++;System.out.println(\"i is \"+i);}', '0', ' ', 'A');
INSERT INTO `option` VALUES ('361', '106', 'int j=3;while(j){ System.out.println(\"j is \"+j);}', '0', ' ', 'B');
INSERT INTO `option` VALUES ('362', '106', 'int j=0;for(int k=0;j+k!=10;j++,k++){System.out.println(\"j is \"+j+\"k is\" +k);}', '1', ' ', 'C');
INSERT INTO `option` VALUES ('363', '106', 'int j=0; do{System.out.println(\"j is \"+j++);if(j==3){continue loop;}}while(j&lt;10);', '0', ' ', 'D');
INSERT INTO `option` VALUES ('364', '107', 'Hello', '0', ' ', 'A');
INSERT INTO `option` VALUES ('365', '107', 'Hello World!', '0', ' ', 'B');
INSERT INTO `option` VALUES ('366', '107', 'Well', '0', ' ', 'C');
INSERT INTO `option` VALUES ('367', '107', '以上全部不正确', '1', ' ', 'D');
INSERT INTO `option` VALUES ('368', '108', '0.08', '1', ' ', 'A');
INSERT INTO `option` VALUES ('369', '108', '0.09', '0', ' ', 'B');
INSERT INTO `option` VALUES ('370', '108', '0.11', '0', ' ', 'C');
INSERT INTO `option` VALUES ('371', '108', '0.1', '0', ' ', 'D');
INSERT INTO `option` VALUES ('372', '109', 'y[0]=11', '0', ' ', 'A');
INSERT INTO `option` VALUES ('373', '109', 'y[1]=11', '0', ' ', 'B');
INSERT INTO `option` VALUES ('374', '109', 'y[2]=11', '0', ' ', 'C');
INSERT INTO `option` VALUES ('375', '109', 'y[3]=11', '1', ' ', 'D');
INSERT INTO `option` VALUES ('376', '109', 'y[0]=22', '0', ' ', 'E');
INSERT INTO `option` VALUES ('377', '109', 'y[3]=22', '0', ' ', 'F');
INSERT INTO `option` VALUES ('378', '110', '24', '0', ' ', 'A');
INSERT INTO `option` VALUES ('379', '110', '30', '0', ' ', 'B');
INSERT INTO `option` VALUES ('380', '110', '53', '0', ' ', 'C');
INSERT INTO `option` VALUES ('381', '110', '69', '1', ' ', 'D');
INSERT INTO `option` VALUES ('382', '111', '先序遍历', '0', ' ', 'A');
INSERT INTO `option` VALUES ('383', '111', '中序遍历', '1', ' ', 'B');
INSERT INTO `option` VALUES ('384', '111', '后序遍', '0', ' ', 'C');
INSERT INTO `option` VALUES ('385', '111', '层次遍历', '0', ' ', 'D');
INSERT INTO `option` VALUES ('386', '112', 'g d b c e h f a', '0', ' ', 'A');
INSERT INTO `option` VALUES ('387', '112', 'g d b e h f c a', '1', ' ', 'B');
INSERT INTO `option` VALUES ('388', '112', 'd g b a c e f h', '0', ' ', 'C');
INSERT INTO `option` VALUES ('389', '112', 'g h d e f b c a', '0', ' ', 'D');
INSERT INTO `option` VALUES ('390', '113', '60', '0', ' ', 'A');
INSERT INTO `option` VALUES ('391', '113', '61', '0', ' ', 'B');
INSERT INTO `option` VALUES ('392', '113', '63', '1', ' ', 'C');
INSERT INTO `option` VALUES ('393', '113', '64', '0', ' ', 'D');
INSERT INTO `option` VALUES ('394', '114', '30', '0', ' ', 'A');
INSERT INTO `option` VALUES ('395', '114', '31', '1', ' ', 'B');
INSERT INTO `option` VALUES ('396', '114', '32', '0', ' ', 'C');
INSERT INTO `option` VALUES ('397', '114', '33', '0', ' ', 'D');
INSERT INTO `option` VALUES ('398', '115', '15', '1', ' ', 'A');
INSERT INTO `option` VALUES ('399', '115', '12', '0', ' ', 'B');
INSERT INTO `option` VALUES ('400', '115', '18', '0', ' ', 'C');
INSERT INTO `option` VALUES ('401', '115', '58', '0', ' ', 'D');
INSERT INTO `option` VALUES ('402', '116', '-127', '0', ' ', 'A');
INSERT INTO `option` VALUES ('403', '116', '-32', '0', ' ', 'B');
INSERT INTO `option` VALUES ('404', '116', '-125', '1', ' ', 'C');
INSERT INTO `option` VALUES ('405', '116', '-3', '0', ' ', 'D');
INSERT INTO `option` VALUES ('406', '117', '9,15', '0', ' ', 'A');
INSERT INTO `option` VALUES ('407', '117', '9,16', '0', ' ', 'B');
INSERT INTO `option` VALUES ('408', '117', '16,24', '0', ' ', 'C');
INSERT INTO `option` VALUES ('409', '117', '16,28', '1', ' ', 'D');
INSERT INTO `option` VALUES ('410', '117', '18,30', '0', ' ', 'E');
INSERT INTO `option` VALUES ('411', '117', '18,32', '0', ' ', 'F');
INSERT INTO `option` VALUES ('412', '118', '线性结构', '1', ' ', 'A');
INSERT INTO `option` VALUES ('413', '118', '非线性结构', '1', ' ', 'B');
INSERT INTO `option` VALUES ('414', '118', '散列结构', '0', ' ', 'C');
INSERT INTO `option` VALUES ('415', '118', '数组结构', '0', ' ', 'D');
INSERT INTO `option` VALUES ('416', '119', '方便删除', '0', ' ', 'A');
INSERT INTO `option` VALUES ('417', '119', '方便插入', '0', ' ', 'B');
INSERT INTO `option` VALUES ('418', '119', '长度可变', '0', ' ', 'C');
INSERT INTO `option` VALUES ('419', '119', '存储空间小', '1', ' ', 'D');
INSERT INTO `option` VALUES ('420', '120', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('421', '120', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('422', '121', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('423', '121', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('424', '122', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('425', '122', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('426', '123', '线性表的逻辑顺序与物理顺序总是一致的。', '0', ' ', 'A');
INSERT INTO `option` VALUES ('427', '123', '线性表的顺序存储表示优于链式存储表示。', '0', ' ', 'B');
INSERT INTO `option` VALUES ('428', '123', '线性表若采用链式存储表示时所有结点之间的存储单元地址可连续可不连续。', '1', ' ', 'C');
INSERT INTO `option` VALUES ('429', '123', '二维数组是其数组元素为线性表的线性表。', '1', ' ', 'D');
INSERT INTO `option` VALUES ('430', '124', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('431', '124', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('432', '125', 'double d=Math.cos（42）', '0', ' ', 'A');
INSERT INTO `option` VALUES ('433', '125', 'double d=Math.cosine（42）', '0', ' ', 'B');
INSERT INTO `option` VALUES ('434', '125', 'double d=Math.cos（Math.toRadians（42））', '1', ' ', 'C');
INSERT INTO `option` VALUES ('435', '125', 'double d=Math.cos（Math.toDegrees（42））', '0', ' ', 'D');
INSERT INTO `option` VALUES ('436', '126', 's.equals(t);', '0', ' ', 'A');
INSERT INTO `option` VALUES ('437', '126', 't.equals(c);', '1', ' ', 'B');
INSERT INTO `option` VALUES ('438', '126', 's==t;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('439', '126', 't.equals(new String (\"hello\"));', '0', ' ', 'D');
INSERT INTO `option` VALUES ('440', '127', 'StringBuffer是线程安全的', '0', ' ', 'A');
INSERT INTO `option` VALUES ('441', '127', 'StringBuilder是非线程安全的', '0', ' ', 'B');
INSERT INTO `option` VALUES ('442', '127', 'StringBuffer对 String 类型进行改变的时候其实都等同于生成了一个新的 String 对象，然后将指针指向新的 String 对象。', '1', ' ', 'C');
INSERT INTO `option` VALUES ('443', '127', '效率比较String&lt;StringBuffer&lt;StringBuilder，但是在 String S1 = “This is only a” + “ simple” + “ test”时，String效率最高。', '0', ' ', 'D');
INSERT INTO `option` VALUES ('444', '128', '堆', '1', ' ', 'A');
INSERT INTO `option` VALUES ('445', '128', '栈', '0', ' ', 'B');
INSERT INTO `option` VALUES ('446', '128', '字符串常量区', '1', ' ', 'C');
INSERT INTO `option` VALUES ('447', '128', '寄存器', '0', ' ', 'D');
INSERT INTO `option` VALUES ('448', '129', '线程同步的方法包括使用临界区，互斥量，信号量等', '0', ' ', 'A');
INSERT INTO `option` VALUES ('449', '129', '两个线程同时对简单类型全局变量进行写操作也需要互斥', '0', ' ', 'B');
INSERT INTO `option` VALUES ('450', '129', '实现可重入函数时，对自动变量也要用互斥量加以保护', '1', ' ', 'C');
INSERT INTO `option` VALUES ('451', '129', '可重入函数不可以调用不可重入函数', '0', ' ', 'D');
INSERT INTO `option` VALUES ('452', '130', 'Thread 1 wake up\nThread 2 sent notify.', '0', ' ', 'A');
INSERT INTO `option` VALUES ('453', '130', 'Thread 2 sent notify.\nThread 1 wake up', '1', ' ', 'B');
INSERT INTO `option` VALUES ('454', '130', 'A、B皆有可能', '0', ' ', 'C');
INSERT INTO `option` VALUES ('455', '130', '程序无输出卡死', '0', ' ', 'D');
INSERT INTO `option` VALUES ('456', '131', '2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('457', '131', '3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('458', '131', '4', '1', ' ', 'C');
INSERT INTO `option` VALUES ('459', '131', '5', '0', ' ', 'D');
INSERT INTO `option` VALUES ('460', '132', '进程释放资源', '0', ' ', 'A');
INSERT INTO `option` VALUES ('461', '132', '一个进程进入死循环', '0', ' ', 'B');
INSERT INTO `option` VALUES ('462', '132', '多个进程竞争，资源出现循环等待', '1', ' ', 'C');
INSERT INTO `option` VALUES ('463', '132', '多个进程竞争共享型设备', '0', ' ', 'D');
INSERT INTO `option` VALUES ('464', '133', 'HashTable', '1', ' ', 'A');
INSERT INTO `option` VALUES ('465', '133', 'Vector', '1', ' ', 'B');
INSERT INTO `option` VALUES ('466', '133', 'TreeSet', '0', ' ', 'C');
INSERT INTO `option` VALUES ('467', '133', 'LinkedList', '0', ' ', 'D');
INSERT INTO `option` VALUES ('468', '134', 'DBS', '0', ' ', 'A');
INSERT INTO `option` VALUES ('469', '134', 'DB', '0', ' ', 'B');
INSERT INTO `option` VALUES ('470', '134', 'DBMS', '1', ' ', 'C');
INSERT INTO `option` VALUES ('471', '134', 'MIS', '0', ' ', 'D');
INSERT INTO `option` VALUES ('472', '135', '6', '0', ' ', 'A');
INSERT INTO `option` VALUES ('473', '135', '11', '0', ' ', 'B');
INSERT INTO `option` VALUES ('474', '135', '9', '0', ' ', 'C');
INSERT INTO `option` VALUES ('475', '135', '7', '1', ' ', 'D');
INSERT INTO `option` VALUES ('476', '136', '预处理阶段出错', '0', ' ', 'A');
INSERT INTO `option` VALUES ('477', '136', '编译阶段出错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('478', '136', '汇编阶段出错', '0', ' ', 'C');
INSERT INTO `option` VALUES ('479', '136', '链接阶段出错', '0', ' ', 'D');
INSERT INTO `option` VALUES ('480', '136', '运行阶段出错', '0', ' ', 'E');
INSERT INTO `option` VALUES ('481', '136', '程序运行正常', '1', ' ', 'F');
INSERT INTO `option` VALUES ('482', '137', '必要不充分条件', '1', ' ', 'A');
INSERT INTO `option` VALUES ('483', '137', '充分不必要条件', '0', ' ', 'B');
INSERT INTO `option` VALUES ('484', '137', '充要条件', '0', ' ', 'C');
INSERT INTO `option` VALUES ('485', '137', '既不充分也不必要条件', '0', ' ', 'D');
INSERT INTO `option` VALUES ('486', '138', '3', '0', ' ', 'A');
INSERT INTO `option` VALUES ('487', '138', '9', '0', ' ', 'B');
INSERT INTO `option` VALUES ('488', '138', '27', '0', ' ', 'C');
INSERT INTO `option` VALUES ('489', '138', '81', '1', ' ', 'D');
INSERT INTO `option` VALUES ('490', '139', '二叉树的度为2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('491', '139', '一棵二叉树的度可以小于2', '1', ' ', 'B');
INSERT INTO `option` VALUES ('492', '139', '二叉树中至少有一个结点的度为2', '0', ' ', 'C');
INSERT INTO `option` VALUES ('493', '139', '二叉树中任何一个结点的度都为2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('494', '140', '加快查找结点的前驱或后继的速度', '1', ' ', 'A');
INSERT INTO `option` VALUES ('495', '140', '为了能在二叉树中方便地进行插入与删除', '0', ' ', 'B');
INSERT INTO `option` VALUES ('496', '140', '为了能方便地找到双亲', '0', ' ', 'C');
INSERT INTO `option` VALUES ('497', '140', '使二叉树的遍历结果唯一', '0', ' ', 'D');
INSERT INTO `option` VALUES ('498', '141', '349', '0', ' ', 'A');
INSERT INTO `option` VALUES ('499', '141', '350', '1', ' ', 'B');
INSERT INTO `option` VALUES ('500', '141', '351', '0', ' ', 'C');
INSERT INTO `option` VALUES ('501', '141', '352', '0', ' ', 'D');
INSERT INTO `option` VALUES ('502', '141', '353', '0', ' ', 'E');
INSERT INTO `option` VALUES ('503', '142', '2n', '0', ' ', 'A');
INSERT INTO `option` VALUES ('504', '142', 'n-1', '0', ' ', 'B');
INSERT INTO `option` VALUES ('505', '142', 'n+1', '1', ' ', 'C');
INSERT INTO `option` VALUES ('506', '142', 'n', '0', ' ', 'D');
INSERT INTO `option` VALUES ('507', '143', '在树T中,X是其双亲的第一个孩子', '0', ' ', 'A');
INSERT INTO `option` VALUES ('508', '143', '在树T中,X一定无右兄弟', '0', ' ', 'B');
INSERT INTO `option` VALUES ('509', '143', '在树T中,X一定是叶结点', '0', ' ', 'C');
INSERT INTO `option` VALUES ('510', '143', '在树T中,X一定有左兄弟', '1', ' ', 'D');
INSERT INTO `option` VALUES ('511', '144', 'Servlet是一个特殊的Java类，它必须直接或间接实现Servlet接口', '0', ' ', 'A');
INSERT INTO `option` VALUES ('512', '144', 'Servlet接口定义了Servelt的生命周期方法', '0', ' ', 'B');
INSERT INTO `option` VALUES ('513', '144', '当多个客户请求一个Servlet时，服务器为每一个客户启动一个进程', '1', ' ', 'C');
INSERT INTO `option` VALUES ('514', '144', 'Servlet客户线程调用service方法响应客户的请求', '0', ' ', 'D');
INSERT INTO `option` VALUES ('515', '145', 'Spring Core：Core封装包是框架的最基础部分，提供IOC和依赖注入特性', '0', ' ', 'A');
INSERT INTO `option` VALUES ('516', '145', 'AOP模块提供了AOP（拦截器）机制，并提供常用的拦截器，供用户自定义和配置', '0', ' ', 'B');
INSERT INTO `option` VALUES ('517', '145', 'ORM模块提供了spring自己的实现，而且支持常用的Hibernate，ibtas，jdao等框架', '1', ' ', 'C');
INSERT INTO `option` VALUES ('518', '145', 'DAO模块Spring 提供对JDBC的支持，对JDBC进行封装，允许JDBC使用Spring资源，并能统一管理JDBC事物，并不对JDBC进行实现', '0', ' ', 'D');
INSERT INTO `option` VALUES ('519', '146', 'spring mvc的入口是filter，而struts2是servlet', '1', ' ', 'A');
INSERT INTO `option` VALUES ('520', '146', 'spring mvc是基于方法的设计，而struts2是基于类的设计', '0', ' ', 'B');
INSERT INTO `option` VALUES ('521', '146', 'struts2有以自己的interceptor机制，spring mvc用的是独立的AOP方式', '0', ' ', 'C');
INSERT INTO `option` VALUES ('522', '146', 'spring mvc的方法之间基本上独立的，独享request response数据，struts2所有Action变量是共享的', '0', ' ', 'D');
INSERT INTO `option` VALUES ('523', '147', '依赖注入', '1', ' ', 'A');
INSERT INTO `option` VALUES ('524', '147', '控制反转', '1', ' ', 'B');
INSERT INTO `option` VALUES ('525', '147', '面向对象', '0', ' ', 'C');
INSERT INTO `option` VALUES ('526', '147', '面向切面', '1', ' ', 'D');
INSERT INTO `option` VALUES ('527', '148', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('528', '148', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('529', '149', 'n+1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('530', '149', 'n-1', '1', ' ', 'B');
INSERT INTO `option` VALUES ('531', '149', 'n', '0', ' ', 'C');
INSERT INTO `option` VALUES ('532', '149', 'nlogn', '0', ' ', 'D');
INSERT INTO `option` VALUES ('533', '150', 'V1 V2 V5 V4 V3 V6', '1', ' ', 'A');
INSERT INTO `option` VALUES ('534', '150', 'V1 V2 V3 V4 V5 V6', '0', ' ', 'B');
INSERT INTO `option` VALUES ('535', '150', 'V1 V3 V5 V4 V2 V6', '0', ' ', 'C');
INSERT INTO `option` VALUES ('536', '150', 'V1 V2 V5 V3 V4 V6', '0', ' ', 'D');
INSERT INTO `option` VALUES ('537', '151', '4,5', '0', ' ', 'A');
INSERT INTO `option` VALUES ('538', '151', '4,10', '0', ' ', 'B');
INSERT INTO `option` VALUES ('539', '151', '5,6', '0', ' ', 'C');
INSERT INTO `option` VALUES ('540', '151', '5,8', '1', ' ', 'D');
INSERT INTO `option` VALUES ('541', '152', '8', '0', ' ', 'A');
INSERT INTO `option` VALUES ('542', '152', '11', '1', ' ', 'B');
INSERT INTO `option` VALUES ('543', '152', '6', '0', ' ', 'C');
INSERT INTO `option` VALUES ('544', '152', '5', '0', ' ', 'D');
INSERT INTO `option` VALUES ('545', '153', '2002', '0', ' ', 'A');
INSERT INTO `option` VALUES ('546', '153', '3003', '1', ' ', 'B');
INSERT INTO `option` VALUES ('547', '153', '11628', '0', ' ', 'C');
INSERT INTO `option` VALUES ('548', '153', '12589', '0', ' ', 'D');
INSERT INTO `option` VALUES ('549', '154', 'H(K)=k/N', '0', ' ', 'A');
INSERT INTO `option` VALUES ('550', '154', 'H(k)=k mod N', '1', ' ', 'B');
INSERT INTO `option` VALUES ('551', '154', 'H(k)=1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('552', '154', 'H(k)=(k+Random(N))mod N，其中Random(N)返回0到N-1的整数', '0', ' ', 'D');
INSERT INTO `option` VALUES ('553', '155', '127', '0', ' ', 'A');
INSERT INTO `option` VALUES ('554', '155', '128', '1', ' ', 'B');
INSERT INTO `option` VALUES ('555', '155', '255', '0', ' ', 'C');
INSERT INTO `option` VALUES ('556', '155', '256', '0', ' ', 'D');
INSERT INTO `option` VALUES ('557', '156', '144', '0', ' ', 'A');
INSERT INTO `option` VALUES ('558', '156', '240', '0', ' ', 'B');
INSERT INTO `option` VALUES ('559', '156', '288', '0', ' ', 'C');
INSERT INTO `option` VALUES ('560', '156', '480', '1', ' ', 'D');
INSERT INTO `option` VALUES ('561', '156', '576', '0', ' ', 'E');
INSERT INTO `option` VALUES ('562', '156', '960', '0', ' ', 'F');
INSERT INTO `option` VALUES ('563', '157', '如果A-B=∅，则A=B', '0', ' ', 'A');
INSERT INTO `option` VALUES ('564', '157', '如果A-C=B-C，则A∩^C=B∩^C', '1', ' ', 'B');
INSERT INTO `option` VALUES ('565', '157', '如果A∪B=A∪C，则B=C', '0', ' ', 'C');
INSERT INTO `option` VALUES ('566', '157', '如果A∩B=A∩C，则B=C', '0', ' ', 'D');
INSERT INTO `option` VALUES ('567', '157', '∅是∅的子集', '1', ' ', 'E');
INSERT INTO `option` VALUES ('568', '158', '特征灵活', '0', ' ', 'A');
INSERT INTO `option` VALUES ('569', '158', '速度快', '1', ' ', 'B');
INSERT INTO `option` VALUES ('570', '158', '可容纳较多上下文信息', '0', ' ', 'C');
INSERT INTO `option` VALUES ('571', '158', '全局最优', '0', ' ', 'D');
INSERT INTO `option` VALUES ('572', '159', '卡方检验值', '0', ' ', 'A');
INSERT INTO `option` VALUES ('573', '159', '互信息', '0', ' ', 'B');
INSERT INTO `option` VALUES ('574', '159', '信息增益', '0', ' ', 'C');
INSERT INTO `option` VALUES ('575', '159', '主成分分析', '1', ' ', 'D');
INSERT INTO `option` VALUES ('576', '160', '1,4', '0', ' ', 'A');
INSERT INTO `option` VALUES ('577', '160', '3,4', '0', ' ', 'B');
INSERT INTO `option` VALUES ('578', '160', '2,3', '1', ' ', 'C');
INSERT INTO `option` VALUES ('579', '160', '1,2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('580', '161', '选用的可分性判据J具有可加性', '0', ' ', 'A');
INSERT INTO `option` VALUES ('581', '161', '选用的可分性判据J对特征数目单调不减', '1', ' ', 'B');
INSERT INTO `option` VALUES ('582', '161', '样本较多', '0', ' ', 'C');
INSERT INTO `option` VALUES ('583', '161', '<img src=\"http://uploadfiles.nowcoder.com/images/20160413/59_1460543064533_0BB4EB1A7220D40476DE7B7C8D48C843\" alt=\"\">', '1', ' ', 'D');
INSERT INTO `option` VALUES ('584', '162', '最小损失准则', '0', ' ', 'A');
INSERT INTO `option` VALUES ('585', '162', 'N-P判决', '1', ' ', 'B');
INSERT INTO `option` VALUES ('586', '162', '最小最大损失准则', '1', ' ', 'C');
INSERT INTO `option` VALUES ('587', '162', '最小误判概率准则', '0', ' ', 'D');
INSERT INTO `option` VALUES ('588', '163', '128  127', '0', ' ', 'A');
INSERT INTO `option` VALUES ('589', '163', '128 - 128', '1', ' ', 'B');
INSERT INTO `option` VALUES ('590', '163', '128  128', '0', ' ', 'C');
INSERT INTO `option` VALUES ('591', '163', '编译错误', '0', ' ', 'D');
INSERT INTO `option` VALUES ('592', '164', '同步', '1', ' ', 'A');
INSERT INTO `option` VALUES ('593', '164', '异步', '0', ' ', 'B');
INSERT INTO `option` VALUES ('594', '164', '只读', '0', ' ', 'C');
INSERT INTO `option` VALUES ('595', '164', '只写', '0', ' ', 'D');
INSERT INTO `option` VALUES ('596', '165', 'This code may throw an InterruptedException', '1', ' ', 'A');
INSERT INTO `option` VALUES ('597', '165', 'This code may throw an IllegalStateException', '0', ' ', 'B');
INSERT INTO `option` VALUES ('598', '165', 'This code may throw a TimeOutException after ten minutes', '0', ' ', 'C');
INSERT INTO `option` VALUES ('599', '165', 'This code will not compile unless”obj.wait()”is replaced with”(Thread)obj).wait()”', '0', ' ', 'D');
INSERT INTO `option` VALUES ('600', '165', 'Reversing the order of obj.wait()and obj.notify()may cause this method to complete normally', '0', ' ', 'E');
INSERT INTO `option` VALUES ('601', '166', '在运行时判断一个对象所属的类', '1', ' ', 'A');
INSERT INTO `option` VALUES ('602', '166', '在运行时构造一个类的对象', '1', ' ', 'B');
INSERT INTO `option` VALUES ('603', '166', '在运行时判断一个类所具有的成员变量和方法', '1', ' ', 'C');
INSERT INTO `option` VALUES ('604', '166', '在运行时调用一个对象的方法', '1', ' ', 'D');
INSERT INTO `option` VALUES ('605', '167', '19', '0', ' ', 'A');
INSERT INTO `option` VALUES ('606', '167', '20', '0', ' ', 'B');
INSERT INTO `option` VALUES ('607', '167', '30', '0', ' ', 'C');
INSERT INTO `option` VALUES ('608', '167', '40', '1', ' ', 'D');
INSERT INTO `option` VALUES ('609', '168', '8只雄兔，6只雌兔。', '1', ' ', 'A');
INSERT INTO `option` VALUES ('610', '168', '10只雄兔，8只雌兔。', '0', ' ', 'B');
INSERT INTO `option` VALUES ('611', '168', '12只雄兔，10只雌兔。', '0', ' ', 'C');
INSERT INTO `option` VALUES ('612', '168', '14只雄兔，8只雌兔。', '0', ' ', 'D');
INSERT INTO `option` VALUES ('613', '169', '48', '0', ' ', 'A');
INSERT INTO `option` VALUES ('614', '169', '54', '0', ' ', 'B');
INSERT INTO `option` VALUES ('615', '169', '63', '1', ' ', 'C');
INSERT INTO `option` VALUES ('616', '169', '101', '0', ' ', 'D');
INSERT INTO `option` VALUES ('617', '170', '14 40', '1', ' ', 'A');
INSERT INTO `option` VALUES ('618', '170', '50 50', '0', ' ', 'B');
INSERT INTO `option` VALUES ('619', '170', '100 1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('620', '170', '7 32', '0', ' ', 'D');
INSERT INTO `option` VALUES ('621', '171', '一样大', '1', ' ', 'A');
INSERT INTO `option` VALUES ('622', '171', '浅灰色面积大', '0', ' ', 'B');
INSERT INTO `option` VALUES ('623', '171', '深灰色面积大', '0', ' ', 'C');
INSERT INTO `option` VALUES ('624', '171', '无法确定', '0', ' ', 'D');
INSERT INTO `option` VALUES ('625', '172', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('626', '172', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('627', '173', '3', '0', ' ', 'A');
INSERT INTO `option` VALUES ('628', '173', '4', '0', ' ', 'B');
INSERT INTO `option` VALUES ('629', '173', '2', '1', ' ', 'C');
INSERT INTO `option` VALUES ('630', '173', '5', '0', ' ', 'D');
INSERT INTO `option` VALUES ('631', '174', '二叉搜索树，比较函数开销：1次运算/每字符', '0', ' ', 'A');
INSERT INTO `option` VALUES ('632', '174', '哈希表，hash算法开销：10次运算/每字符', '0', ' ', 'B');
INSERT INTO `option` VALUES ('633', '174', '链表，比较函数开销：1次运算/每字符', '0', ' ', 'C');
INSERT INTO `option` VALUES ('634', '174', 'TRIE树，寻找子节点开销：1次运算/每字符', '1', ' ', 'D');
INSERT INTO `option` VALUES ('635', '175', '两者都属于自平衡二叉树', '0', ' ', 'A');
INSERT INTO `option` VALUES ('636', '175', '两者查找,插入，删除的时间复杂度相同', '0', ' ', 'B');
INSERT INTO `option` VALUES ('637', '175', '包含n个内部节点的红黑树的高度是O(log(n))', '0', ' ', 'C');
INSERT INTO `option` VALUES ('638', '175', 'JDK的TreeMap是一个AVL的实现', '1', ' ', 'D');
INSERT INTO `option` VALUES ('639', '176', '1', '1', ' ', 'A');
INSERT INTO `option` VALUES ('640', '176', '2', '0', ' ', 'B');
INSERT INTO `option` VALUES ('641', '176', '3', '0', ' ', 'C');
INSERT INTO `option` VALUES ('642', '176', '4', '1', ' ', 'D');
INSERT INTO `option` VALUES ('643', '176', '5', '1', ' ', 'E');
INSERT INTO `option` VALUES ('644', '176', '6', '0', ' ', 'F');
INSERT INTO `option` VALUES ('645', '177', 'head==NULL', '0', ' ', 'A');
INSERT INTO `option` VALUES ('646', '177', 'head-&gt;next==NULL', '1', ' ', 'B');
INSERT INTO `option` VALUES ('647', '177', 'head-&gt;next==head', '0', ' ', 'C');
INSERT INTO `option` VALUES ('648', '177', 'head!=NULL', '0', ' ', 'D');
INSERT INTO `option` VALUES ('649', '178', '顺序表', '0', ' ', 'A');
INSERT INTO `option` VALUES ('650', '178', '哈希表', '0', ' ', 'B');
INSERT INTO `option` VALUES ('651', '178', '有序表', '1', ' ', 'C');
INSERT INTO `option` VALUES ('652', '178', '单链表', '0', ' ', 'D');
INSERT INTO `option` VALUES ('653', '179', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('654', '179', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('655', '180', '队列', '0', ' ', 'A');
INSERT INTO `option` VALUES ('656', '180', '线性表', '0', ' ', 'B');
INSERT INTO `option` VALUES ('657', '180', '二叉树', '1', ' ', 'C');
INSERT INTO `option` VALUES ('658', '180', '栈', '0', ' ', 'D');
INSERT INTO `option` VALUES ('659', '181', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('660', '181', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('661', '182', '对端发送了一段长度为0的数据', '0', ' ', 'A');
INSERT INTO `option` VALUES ('662', '182', '对端关闭了连接', '1', ' ', 'B');
INSERT INTO `option` VALUES ('663', '182', '还没有收到对端数据', '0', ' ', 'C');
INSERT INTO `option` VALUES ('664', '182', '连接发生错误', '0', ' ', 'D');
INSERT INTO `option` VALUES ('665', '183', '传统交换机从网桥发展而来，属于OSI第二层即数据链路层设备', '0', ' ', 'A');
INSERT INTO `option` VALUES ('666', '183', '路由器属于OSI第三层即网络层设备，它根据IP地址进行寻址，通过路由表路由协议产生', '0', ' ', 'B');
INSERT INTO `option` VALUES ('667', '183', '交换器隔离了广播域，广播报文不能通过交换器继续进行广播', '1', ' ', 'C');
INSERT INTO `option` VALUES ('668', '183', '三层交换机在对第一个数据流进行路由后，它将会产生一个MAC地址与IP地址的映射表，当同样的数据流再次通过时，将根据此表直接从二层通过而不是再次路由', '0', ' ', 'D');
INSERT INTO `option` VALUES ('669', '184', 'N（N-1）', '0', ' ', 'A');
INSERT INTO `option` VALUES ('670', '184', 'N', '0', ' ', 'B');
INSERT INTO `option` VALUES ('671', '184', 'N-1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('672', '184', 'N(N-1)/2', '1', ' ', 'D');
INSERT INTO `option` VALUES ('673', '185', 'RARP', '0', ' ', 'A');
INSERT INTO `option` VALUES ('674', '185', 'ARP', '1', ' ', 'B');
INSERT INTO `option` VALUES ('675', '185', 'IP', '0', ' ', 'C');
INSERT INTO `option` VALUES ('676', '185', 'IMCP', '0', ' ', 'D');
INSERT INTO `option` VALUES ('677', '186', 'HOST1给HOST2发送一个确认消息，然后HOST2关闭连接并释放资源，然而，HOST1却没有关闭连接，而是进入了TIME_WAIT状态，并为两个最大段生存时间(2MSL)保留在此状态.', '1', ' ', 'A');
INSERT INTO `option` VALUES ('678', '186', '因为在第四步的时候，HOST1发送的ACK可能丢失并导致HOST2重新发送FIN消息，TIME_WAIT维护连接状态.', '1', ' ', 'B');
INSERT INTO `option` VALUES ('679', '186', 'TIME_WAIT为连接中”离群的段”提供从网络中消失的时间', '1', ' ', 'C');
INSERT INTO `option` VALUES ('680', '186', '以上描述都不正确', '0', ' ', 'D');
INSERT INTO `option` VALUES ('681', '187', '有向图', '0', ' ', 'A');
INSERT INTO `option` VALUES ('682', '187', '无向图', '1', ' ', 'B');
INSERT INTO `option` VALUES ('683', '187', 'AOV网', '0', ' ', 'C');
INSERT INTO `option` VALUES ('684', '187', 'AOE网', '0', ' ', 'D');
INSERT INTO `option` VALUES ('685', '188', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('686', '188', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('687', '189', 'n^2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('688', '189', 'n(n-1)', '1', ' ', 'B');
INSERT INTO `option` VALUES ('689', '189', 'n(n+1)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('690', '189', 'n(n-1)/2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('691', '190', 'V<sub>1</sub>,V<sub>3</sub>,V<sub>4</sub>,V<sub>6</sub>,V<sub>2</sub>,V<sub>5</sub>,V<sub>7</sub>', '1', ' ', 'A');
INSERT INTO `option` VALUES ('692', '190', 'V<sub>1</sub>,V<sub>3</sub>,V<sub>2</sub>,V<sub>6</sub>,V<sub>4</sub>,V<sub>5</sub>,V<sub>7</sub>', '0', ' ', 'B');
INSERT INTO `option` VALUES ('693', '190', 'V<sub>1</sub>,V<sub>3</sub>,V<sub>4</sub>,V<sub>5</sub>,V<sub>2</sub>,V<sub>6</sub>,V<sub>7</sub>', '0', ' ', 'C');
INSERT INTO `option` VALUES ('694', '190', 'V<sub>1</sub>,V<sub>2</sub>,V<sub>5</sub>,V<sub>3</sub>,V<sub>4</sub>,V<sub>6</sub>,V<sub>7</sub>', '0', ' ', 'D');
INSERT INTO `option` VALUES ('695', '191', '9', '0', ' ', 'A');
INSERT INTO `option` VALUES ('696', '191', '7', '1', ' ', 'B');
INSERT INTO `option` VALUES ('697', '191', '6', '0', ' ', 'C');
INSERT INTO `option` VALUES ('698', '191', '5', '0', ' ', 'D');
INSERT INTO `option` VALUES ('699', '192', '递归部分', '0', ' ', 'A');
INSERT INTO `option` VALUES ('700', '192', '终止条件和递归部分', '1', ' ', 'B');
INSERT INTO `option` VALUES ('701', '192', '迭代部分', '0', ' ', 'C');
INSERT INTO `option` VALUES ('702', '192', '终止条件和迭代部分', '0', ' ', 'D');
INSERT INTO `option` VALUES ('703', '193', 'O(1)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('704', '193', 'O(logn)', '1', ' ', 'B');
INSERT INTO `option` VALUES ('705', '193', 'O(n)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('706', '193', 'O(n^2)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('707', '194', '1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('708', '194', '2', '0', ' ', 'B');
INSERT INTO `option` VALUES ('709', '194', '3', '1', ' ', 'C');
INSERT INTO `option` VALUES ('710', '194', '4', '0', ' ', 'D');
INSERT INTO `option` VALUES ('711', '194', '5', '0', ' ', 'E');
INSERT INTO `option` VALUES ('712', '194', '6', '0', ' ', 'F');
INSERT INTO `option` VALUES ('713', '195', '递归次数与初始数据的排列次序无关', '0', ' ', 'A');
INSERT INTO `option` VALUES ('714', '195', '每次划分后，先处理较长的分区可以减少递归次数', '0', ' ', 'B');
INSERT INTO `option` VALUES ('715', '195', '每次划分后，先处理较短的分区可以减少递归次数', '0', ' ', 'C');
INSERT INTO `option` VALUES ('716', '195', '递归次数与每次划分后得到的分区处理顺序无关', '1', ' ', 'D');
INSERT INTO `option` VALUES ('717', '196', '在有向图中,出度为0的结点称为叶子', '0', ' ', 'A');
INSERT INTO `option` VALUES ('718', '196', '用邻接矩阵表示图,容易判断任意两个结点之间是否有边相连,并求得各结点的度', '0', ' ', 'B');
INSERT INTO `option` VALUES ('719', '196', '按深度方向遍历图和前序遍历树类似,得到的结果是唯一的', '1', ' ', 'C');
INSERT INTO `option` VALUES ('720', '196', '若有向图G中从结点V<sub>i</sub>到结点V<sub>j</sub>有一条路径,则在图G的结点的线性序列中结点V<sub>i</sub>,必在结点V<sub>j</sub>之前的话,则称为一个拓扑序列', '0', ' ', 'D');
INSERT INTO `option` VALUES ('721', '197', '关键活动不按期完成就会影响整个工程的完成时间', '0', ' ', 'A');
INSERT INTO `option` VALUES ('722', '197', '任何一个关键活动提前完成,那么整个工程将会提前完成', '1', ' ', 'B');
INSERT INTO `option` VALUES ('723', '197', '所有的关键活动提前完成,那么整个工程将会提前完成', '0', ' ', 'C');
INSERT INTO `option` VALUES ('724', '197', '某些关键活动若提前完成,那么整个工程将会提前完成', '1', ' ', 'D');
INSERT INTO `option` VALUES ('725', '198', '事务中包括的所有操作要么都做，要么不做', '0', ' ', 'A');
INSERT INTO `option` VALUES ('726', '198', '事务一旦提交，对数据库的改变时永久的', '1', ' ', 'B');
INSERT INTO `option` VALUES ('727', '198', '一个事务内部的操作及使用的数据对并发的其他事务是隔离的', '0', ' ', 'C');
INSERT INTO `option` VALUES ('728', '198', '事务必须是使数据库从一个一致性状态变到另一个一致性状态', '0', ' ', 'D');
INSERT INTO `option` VALUES ('729', '199', 'SELECT', '1', ' ', 'A');
INSERT INTO `option` VALUES ('730', '199', 'INSERT', '0', ' ', 'B');
INSERT INTO `option` VALUES ('731', '199', 'UPDATE', '0', ' ', 'C');
INSERT INTO `option` VALUES ('732', '199', 'DELETE', '0', ' ', 'D');
INSERT INTO `option` VALUES ('733', '200', '原子性是指事务中包含的所有操作要么都做，要么都不做，保证数据库是一致的。', '1', ' ', 'A');
INSERT INTO `option` VALUES ('734', '200', '一致性是指数据库在事务操作前和事务处理后，其中的数据必须都满足业务规则约束。', '1', ' ', 'B');
INSERT INTO `option` VALUES ('735', '200', '隔离性是数据库允许多个并发事务同时对齐数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。', '1', ' ', 'C');
INSERT INTO `option` VALUES ('736', '200', '持久性表示为：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。', '1', ' ', 'D');
INSERT INTO `option` VALUES ('737', '201', '未提交读(Read Uncommitted)：允许脏读，也就是可能读取到其他会话中未提交事务修改的数据', '1', ' ', 'A');
INSERT INTO `option` VALUES ('738', '201', '提交读(Read Committed)：只能读取到已经提交的数据', '1', ' ', 'B');
INSERT INTO `option` VALUES ('739', '201', '可重复读(Repeated Read)：在同一个事务内的查询都是事务开始时刻一致的', '1', ' ', 'C');
INSERT INTO `option` VALUES ('740', '201', '串行读(Serializable)：完全串行化的读，每次读都需要获得表级共享锁，读写相互都会阻塞', '1', ' ', 'D');
INSERT INTO `option` VALUES ('741', '202', '持久性', '1', ' ', 'A');
INSERT INTO `option` VALUES ('742', '202', '隔离性', '1', ' ', 'B');
INSERT INTO `option` VALUES ('743', '202', '原子性', '1', ' ', 'C');
INSERT INTO `option` VALUES ('744', '202', '一致性', '1', ' ', 'D');
INSERT INTO `option` VALUES ('745', '203', '1/20', '0', ' ', 'A');
INSERT INTO `option` VALUES ('746', '203', '15/16', '0', ' ', 'B');
INSERT INTO `option` VALUES ('747', '203', '3/5', '1', ' ', 'C');
INSERT INTO `option` VALUES ('748', '203', '19/20', '0', ' ', 'D');
INSERT INTO `option` VALUES ('749', '204', '97.44%', '0', ' ', 'A');
INSERT INTO `option` VALUES ('750', '204', '92%', '0', ' ', 'B');
INSERT INTO `option` VALUES ('751', '204', '80%', '0', ' ', 'C');
INSERT INTO `option` VALUES ('752', '204', '60%', '1', ' ', 'D');
INSERT INTO `option` VALUES ('753', '205', '0.0078', '0', ' ', 'A');
INSERT INTO `option` VALUES ('754', '205', '0.0298', '0', ' ', 'B');
INSERT INTO `option` VALUES ('755', '205', '0.2074', '1', ' ', 'C');
INSERT INTO `option` VALUES ('756', '205', '0.98', '0', ' ', 'D');
INSERT INTO `option` VALUES ('757', '206', '以0为均值,2为标准差的正态分布', '0', ' ', 'A');
INSERT INTO `option` VALUES ('758', '206', '以0为均值,sqrt(2)为标准差的正态分布', '1', ' ', 'B');
INSERT INTO `option` VALUES ('759', '206', '以0为均值,1为标准差的正态分布', '0', ' ', 'C');
INSERT INTO `option` VALUES ('760', '206', '以0为均值,sqrt(2)/2为标准差的正态分布', '0', ' ', 'D');
INSERT INTO `option` VALUES ('761', '207', 'P(AB)&gt;=(P(A)+P(B))/2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('762', '207', 'P(AB)&lt;=P(A)P(B)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('763', '207', 'P(AB)&lt;=(P(A)+P(B))/2', '1', ' ', 'C');
INSERT INTO `option` VALUES ('764', '207', 'P(AB)&gt;=P(A)P(B)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('765', '209', '两者都是用key-value方式获取数据', '0', ' ', 'A');
INSERT INTO `option` VALUES ('766', '209', 'Hashtable允许null值作为key和value，而HashMap不可以', '1', ' ', 'B');
INSERT INTO `option` VALUES ('767', '209', 'HashMap不是同步的，而Hashtable是同步的', '0', ' ', 'C');
INSERT INTO `option` VALUES ('768', '209', '迭代HashMap采用快速失败机制，而Hashtable不是', '0', ' ', 'D');
INSERT INTO `option` VALUES ('769', '210', '生成java.lang.Class对象', '0', ' ', 'A');
INSERT INTO `option` VALUES ('770', '210', 'int类型对象成员变量赋予默认值', '1', ' ', 'B');
INSERT INTO `option` VALUES ('771', '210', '执行static块代码', '0', ' ', 'C');
INSERT INTO `option` VALUES ('772', '210', '类方法解析', '0', ' ', 'D');
INSERT INTO `option` VALUES ('773', '211', 'catch语句块\n和是：43', '0', ' ', 'A');
INSERT INTO `option` VALUES ('774', '211', '编译异常', '0', ' ', 'B');
INSERT INTO `option` VALUES ('775', '211', 'finally语句块\n和是：43', '1', ' ', 'C');
INSERT INTO `option` VALUES ('776', '211', '和是：43\nfinally语句块', '0', ' ', 'D');
INSERT INTO `option` VALUES ('777', '212', 'public成员', '1', ' ', 'A');
INSERT INTO `option` VALUES ('778', '212', 'private成员', '0', ' ', 'B');
INSERT INTO `option` VALUES ('779', '212', 'protected成员', '1', ' ', 'C');
INSERT INTO `option` VALUES ('780', '212', '数据成员', '0', ' ', 'D');
INSERT INTO `option` VALUES ('781', '212', '函数成员', '0', ' ', 'E');
INSERT INTO `option` VALUES ('782', '213', 'ThreadLocal继承自Thread', '0', ' ', 'A');
INSERT INTO `option` VALUES ('783', '213', 'ThreadLocal实现了Runnable接口', '0', ' ', 'B');
INSERT INTO `option` VALUES ('784', '213', 'ThreadLocal重要作用在于多线程间的数据共享', '0', ' ', 'C');
INSERT INTO `option` VALUES ('785', '213', 'ThreadLocal是采用哈希表的方式来为每个线程都提供一个变量的副本', '1', ' ', 'D');
INSERT INTO `option` VALUES ('786', '213', 'ThreadLocal保证各个线程间数据安全，每个线程的数据不会被另外线程访问和破坏', '1', ' ', 'E');
INSERT INTO `option` VALUES ('787', '214', 'T', '1', ' ', 'A');
INSERT INTO `option` VALUES ('788', '214', 'F', '0', ' ', 'B');
INSERT INTO `option` VALUES ('789', '215', '全部选项', '1', ' ', 'A');
INSERT INTO `option` VALUES ('790', '215', '程序可能因为缺某些路径而存在问题', '0', ' ', 'B');
INSERT INTO `option` VALUES ('791', '215', '穷举路径的测试可能不好暴露数据敏感的错误', '0', ' ', 'C');
INSERT INTO `option` VALUES ('792', '215', '就算穷举路径测试也不能保证程序符合需求', '0', ' ', 'D');
INSERT INTO `option` VALUES ('793', '216', 'TDD的原理是在开发功能代码之前，先编写单元测试用例代码，测试代码确定需要编写什么产品代码', '1', ' ', 'A');
INSERT INTO `option` VALUES ('794', '216', 'TDD的基本思路就是通过测试来推动整个开发得进行，但测试驱动开发并不只是单纯的测试工作，而是把需求分析，设计，质量控制量化的过程。', '1', ' ', 'B');
INSERT INTO `option` VALUES ('795', '216', 'TDD的重要目的不仅仅是测试软件，测试工作保证代码质量仅仅是其中一部分，而且是在开发过程中帮助客户和程序员去除模棱两可的需求。', '1', ' ', 'C');
INSERT INTO `option` VALUES ('796', '216', 'TDD首先考虑使用需求（对象、功能、过程、接口等），主要是编写测试用例框架对功能的过程和接口进行设计，而测试框架可以持续进行验证。', '1', ' ', 'D');
INSERT INTO `option` VALUES ('797', '217', '路径测试', '0', ' ', 'A');
INSERT INTO `option` VALUES ('798', '217', '等价类划分', '1', ' ', 'B');
INSERT INTO `option` VALUES ('799', '217', '边界值分析', '1', ' ', 'C');
INSERT INTO `option` VALUES ('800', '217', '条件判断', '0', ' ', 'D');
INSERT INTO `option` VALUES ('801', '217', '循环测试', '0', ' ', 'E');
INSERT INTO `option` VALUES ('802', '217', '因果图分析', '1', ' ', 'F');
INSERT INTO `option` VALUES ('803', '217', '正交分析法', '1', ' ', 'G');
INSERT INTO `option` VALUES ('804', '218', 'alpha 测试需要用户代表参加', '1', ' ', 'A');
INSERT INTO `option` VALUES ('805', '218', 'alpha 测试不需要用户代表参加', '0', ' ', 'B');
INSERT INTO `option` VALUES ('806', '218', 'alpha 测试是系统测试的一种', '0', ' ', 'C');
INSERT INTO `option` VALUES ('807', '218', 'alpha 测试是验收测试的一种', '1', ' ', 'D');
INSERT INTO `option` VALUES ('808', '219', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('809', '219', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('810', '220', '散列存储和索引存储', '0', ' ', 'A');
INSERT INTO `option` VALUES ('811', '220', '索引存储和链式存储', '0', ' ', 'B');
INSERT INTO `option` VALUES ('812', '220', '顺序存储和链式存储', '1', ' ', 'C');
INSERT INTO `option` VALUES ('813', '220', '散列存储和顺序存储', '0', ' ', 'D');
INSERT INTO `option` VALUES ('814', '221', '堆', '0', ' ', 'A');
INSERT INTO `option` VALUES ('815', '221', '栈', '0', ' ', 'B');
INSERT INTO `option` VALUES ('816', '221', '字符串', '1', ' ', 'C');
INSERT INTO `option` VALUES ('817', '221', '有向图', '0', ' ', 'D');
INSERT INTO `option` VALUES ('818', '222', '(0,1,0,1,0,4,1,0,1)', '1', ' ', 'A');
INSERT INTO `option` VALUES ('819', '222', '(0,1,0,1,0,2,1,0,1)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('820', '222', '(0,1,0,1,0,0,0,1,1)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('821', '222', '(0,1,0,1,0,1,0,1,1)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('822', '223', '\"I love this game\"', '0', ' ', 'A');
INSERT INTO `option` VALUES ('823', '223', '\"I love thi\"', '0', ' ', 'B');
INSERT INTO `option` VALUES ('824', '223', '\"I love\"', '0', ' ', 'C');
INSERT INTO `option` VALUES ('825', '223', '\"I\"', '1', ' ', 'D');
INSERT INTO `option` VALUES ('826', '224', '模块间的操作细节', '0', ' ', 'A');
INSERT INTO `option` VALUES ('827', '224', '模块间的相似性', '0', ' ', 'B');
INSERT INTO `option` VALUES ('828', '224', '模块间的组成关系', '1', ' ', 'C');
INSERT INTO `option` VALUES ('829', '224', '模块的具体功能', '0', ' ', 'D');
INSERT INTO `option` VALUES ('830', '225', '数据流和事务流', '0', ' ', 'A');
INSERT INTO `option` VALUES ('831', '225', '变换流和数据流', '0', ' ', 'B');
INSERT INTO `option` VALUES ('832', '225', '变换流和事务流', '1', ' ', 'C');
INSERT INTO `option` VALUES ('833', '225', '控制流和事务流', '0', ' ', 'D');
INSERT INTO `option` VALUES ('834', '226', 'Singleton（单例）', '0', ' ', 'A');
INSERT INTO `option` VALUES ('835', '226', 'Bridge（桥接）', '1', ' ', 'B');
INSERT INTO `option` VALUES ('836', '226', 'Composite（组合）', '0', ' ', 'C');
INSERT INTO `option` VALUES ('837', '226', 'Facade（外观）', '0', ' ', 'D');
INSERT INTO `option` VALUES ('838', '227', '在工厂方法模式中，对于存在继承等级结构的产品树，产品的创建是通过相应等级结构的工厂创建的', '0', ' ', 'A');
INSERT INTO `option` VALUES ('839', '227', '不能形成静态工厂的继承结构', '0', ' ', 'B');
INSERT INTO `option` VALUES ('840', '227', '静态工厂对具体产品的创建类别和创建时机的判断是混和在一起的，这点在工厂方法中', '0', ' ', 'C');
INSERT INTO `option` VALUES ('841', '227', '二者都满足开闭原则：静态工厂以if else方式创建对象，增加需求的时候会修改源代码', '1', ' ', 'D');
INSERT INTO `option` VALUES ('842', '228', '贪心', '0', ' ', 'A');
INSERT INTO `option` VALUES ('843', '228', '回溯', '0', ' ', 'B');
INSERT INTO `option` VALUES ('844', '228', '穷举', '0', ' ', 'C');
INSERT INTO `option` VALUES ('845', '228', '分治', '0', ' ', 'D');
INSERT INTO `option` VALUES ('846', '228', '递归', '1', ' ', 'E');
INSERT INTO `option` VALUES ('847', '229', '14', '0', ' ', 'A');
INSERT INTO `option` VALUES ('848', '229', '18', '0', ' ', 'B');
INSERT INTO `option` VALUES ('849', '229', '20', '0', ' ', 'C');
INSERT INTO `option` VALUES ('850', '229', '24', '0', ' ', 'D');
INSERT INTO `option` VALUES ('851', '229', 'None of the above', '1', ' ', 'E');
INSERT INTO `option` VALUES ('852', '230', '改善数据访问方式以提升缓存命中率', '0', ' ', 'A');
INSERT INTO `option` VALUES ('853', '230', '使用多线程的方式提高 I/O 密集型操作的效率', '1', ' ', 'B');
INSERT INTO `option` VALUES ('854', '230', '利用数据库连接池替代直接的数据库访问', '0', ' ', 'C');
INSERT INTO `option` VALUES ('855', '230', '利用迭代替代递归', '0', ' ', 'D');
INSERT INTO `option` VALUES ('856', '230', '合并多个远程调用批量发送', '0', ' ', 'E');
INSERT INTO `option` VALUES ('857', '230', '共享冗余数据提高访问效率', '0', ' ', 'F');
INSERT INTO `option` VALUES ('858', '231', '8', '0', ' ', 'A');
INSERT INTO `option` VALUES ('859', '231', '9', '0', ' ', 'B');
INSERT INTO `option` VALUES ('860', '231', '16', '0', ' ', 'C');
INSERT INTO `option` VALUES ('861', '231', '18', '1', ' ', 'D');
INSERT INTO `option` VALUES ('862', '232', '(n-1)/2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('863', '232', 'n/2', '0', ' ', 'B');
INSERT INTO `option` VALUES ('864', '232', '(n+1)/2', '1', ' ', 'C');
INSERT INTO `option` VALUES ('865', '232', 'n', '0', ' ', 'D');
INSERT INTO `option` VALUES ('866', '233', '顺序存储的有序线性表', '1', ' ', 'A');
INSERT INTO `option` VALUES ('867', '233', '线性链表', '0', ' ', 'B');
INSERT INTO `option` VALUES ('868', '233', '二叉链表', '0', ' ', 'C');
INSERT INTO `option` VALUES ('869', '233', '有序线性链表', '0', ' ', 'D');
INSERT INTO `option` VALUES ('870', '234', '0,1,1,2,2,1,2,2,3', '0', ' ', 'A');
INSERT INTO `option` VALUES ('871', '234', '0,1,2,2,3,1,2,2,3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('872', '234', '0,1,1,2,3,1,2,2,3', '1', ' ', 'C');
INSERT INTO `option` VALUES ('873', '234', '0,1,1,2,3,1,1,2,3', '0', ' ', 'D');
INSERT INTO `option` VALUES ('874', '234', '0,1,2,2,3,1,1,2,3', '0', ' ', 'E');
INSERT INTO `option` VALUES ('875', '234', '0,1,2,2,2,1,1,2,3', '0', ' ', 'F');
INSERT INTO `option` VALUES ('876', '235', '[50,100]', '1', ' ', 'A');
INSERT INTO `option` VALUES ('877', '235', '[100.100]', '0', ' ', 'B');
INSERT INTO `option` VALUES ('878', '235', '[1275,2550]', '0', ' ', 'C');
INSERT INTO `option` VALUES ('879', '235', '[2550,2550]', '0', ' ', 'D');
INSERT INTO `option` VALUES ('880', '236', 'i和j', '1', ' ', 'A');
INSERT INTO `option` VALUES ('881', '236', 'i,j,k都需要', '0', ' ', 'B');
INSERT INTO `option` VALUES ('882', '236', 'i', '0', ' ', 'C');
INSERT INTO `option` VALUES ('883', '236', 'j和k', '0', ' ', 'D');
INSERT INTO `option` VALUES ('884', '237', '互斥条件', '1', ' ', 'A');
INSERT INTO `option` VALUES ('885', '237', '系统资源有限', '0', ' ', 'B');
INSERT INTO `option` VALUES ('886', '237', '进程调度不合理', '0', ' ', 'C');
INSERT INTO `option` VALUES ('887', '237', '环路等待条件', '1', ' ', 'D');
INSERT INTO `option` VALUES ('888', '238', '9', '1', ' ', 'A');
INSERT INTO `option` VALUES ('889', '238', '10', '1', ' ', 'B');
INSERT INTO `option` VALUES ('890', '238', '11', '1', ' ', 'C');
INSERT INTO `option` VALUES ('891', '238', '12', '0', ' ', 'D');
INSERT INTO `option` VALUES ('892', '239', '神经网络', '1', ' ', 'A');
INSERT INTO `option` VALUES ('893', '239', '遗传算法', '0', ' ', 'B');
INSERT INTO `option` VALUES ('894', '239', '模拟退火', '0', ' ', 'C');
INSERT INTO `option` VALUES ('895', '239', '穷举算法', '0', ' ', 'D');
INSERT INTO `option` VALUES ('896', '240', '二分类问题', '0', ' ', 'A');
INSERT INTO `option` VALUES ('897', '240', '多分类问题', '1', ' ', 'B');
INSERT INTO `option` VALUES ('898', '240', '层次聚类问题', '0', ' ', 'C');
INSERT INTO `option` VALUES ('899', '240', 'k-中心点聚类问题', '0', ' ', 'D');
INSERT INTO `option` VALUES ('900', '240', '回归问题', '0', ' ', 'E');
INSERT INTO `option` VALUES ('901', '240', '结构分析问题', '0', ' ', 'F');
INSERT INTO `option` VALUES ('902', '241', '伪逆法', '0', ' ', 'A');
INSERT INTO `option` VALUES ('903', '241', '感知器算法', '1', ' ', 'B');
INSERT INTO `option` VALUES ('904', '241', '基于二次准则的H-K算法', '0', ' ', 'C');
INSERT INTO `option` VALUES ('905', '241', '势函数法', '0', ' ', 'D');
INSERT INTO `option` VALUES ('906', '242', '准确率是检索出相关文档数与检索出的文档总数的比率，衡量的是检索系统的查准率', '0', ' ', 'A');
INSERT INTO `option` VALUES ('907', '242', '召回率是指检索出的相关文档数和文档库中所有的相关文档数的比率，衡量的是检索系统的查全率', '0', ' ', 'B');
INSERT INTO `option` VALUES ('908', '242', '正确率、召回率和 F 值取值都在0和1之间，数值越接近0，查准率或查全率就越高', '1', ' ', 'C');
INSERT INTO `option` VALUES ('909', '242', '为了解决准确率和召回率冲突问题，引入了F1分数', '0', ' ', 'D');
INSERT INTO `option` VALUES ('910', '243', '感知准则函数', '1', ' ', 'A');
INSERT INTO `option` VALUES ('911', '243', '贝叶斯分类', '0', ' ', 'B');
INSERT INTO `option` VALUES ('912', '243', '支持向量机', '1', ' ', 'C');
INSERT INTO `option` VALUES ('913', '243', 'Fisher准则', '1', ' ', 'D');
INSERT INTO `option` VALUES ('914', '244', '多项式核函数', '0', ' ', 'A');
INSERT INTO `option` VALUES ('915', '244', 'logistic核函数', '1', ' ', 'B');
INSERT INTO `option` VALUES ('916', '244', '径向基核函数', '0', ' ', 'C');
INSERT INTO `option` VALUES ('917', '244', 'Sigmoid核函数', '0', ' ', 'D');
INSERT INTO `option` VALUES ('918', '245', '7', '0', ' ', 'A');
INSERT INTO `option` VALUES ('919', '245', '9', '0', ' ', 'B');
INSERT INTO `option` VALUES ('920', '245', '11', '1', ' ', 'C');
INSERT INTO `option` VALUES ('921', '245', '13', '0', ' ', 'D');
INSERT INTO `option` VALUES ('922', '246', '互信息', '0', ' ', 'A');
INSERT INTO `option` VALUES ('923', '246', '最大熵', '1', ' ', 'B');
INSERT INTO `option` VALUES ('924', '246', '卡方检验', '0', ' ', 'C');
INSERT INTO `option` VALUES ('925', '246', '最大似然比', '0', ' ', 'D');
INSERT INTO `option` VALUES ('926', '247', '能自动识别类的个数,随即挑选初始点为中心点计算', '0', ' ', 'A');
INSERT INTO `option` VALUES ('927', '247', '能自动识别类的个数,不是随即挑选初始点为中心点计算', '0', ' ', 'B');
INSERT INTO `option` VALUES ('928', '247', '不能自动识别类的个数,随即挑选初始点为中心点计算', '1', ' ', 'C');
INSERT INTO `option` VALUES ('929', '247', '不能自动识别类的个数,不是随即挑选初始点为中心点计算', '0', ' ', 'D');
INSERT INTO `option` VALUES ('930', '248', '不能自动识别类的个数,随机挑选初始点为中心点计算', '1', ' ', 'A');
INSERT INTO `option` VALUES ('931', '248', '数据数量不多时,输入的数据的顺序不同会导致结果不同', '0', ' ', 'B');
INSERT INTO `option` VALUES ('932', '248', '不能自动识别类的个数,不是随机挑选初始点为中心点计算', '0', ' ', 'C');
INSERT INTO `option` VALUES ('933', '248', '初始聚类中心的选择对聚类结果的影响很大', '1', ' ', 'D');
INSERT INTO `option` VALUES ('934', '249', 'if (x == 0)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('935', '249', 'if (x &lt; 0.00001f)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('936', '249', 'if (fabs(x) &lt; 0.00001f)', '1', ' ', 'C');
INSERT INTO `option` VALUES ('937', '249', 'if (x &gt; -0.00001f)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('938', '250', 'category可以添加新的方法', '0', ' ', 'A');
INSERT INTO `option` VALUES ('939', '250', 'category可以删除修改之前的方法', '1', ' ', 'B');
INSERT INTO `option` VALUES ('940', '250', '将类的实现分散到多个不同文件或多个不同框架中', '0', ' ', 'C');
INSERT INTO `option` VALUES ('941', '250', '创建对私有方法的前向引用', '0', ' ', 'D');
INSERT INTO `option` VALUES ('942', '251', 'initWithContentsOfURL', '1', ' ', 'A');
INSERT INTO `option` VALUES ('943', '251', 'initWithData', '1', ' ', 'B');
INSERT INTO `option` VALUES ('944', '251', 'initWithStream', '1', ' ', 'C');
INSERT INTO `option` VALUES ('945', '251', 'initWithContentsOfFile', '0', ' ', 'D');
INSERT INTO `option` VALUES ('946', '252', 'connection:didReceiveData:', '1', ' ', 'A');
INSERT INTO `option` VALUES ('947', '252', 'connection:didFailWithError:', '1', ' ', 'B');
INSERT INTO `option` VALUES ('948', '252', 'initWithRequest:delegate:', '0', ' ', 'C');
INSERT INTO `option` VALUES ('949', '252', 'connectionDidFinishLoading:', '1', ' ', 'D');
INSERT INTO `option` VALUES ('950', '253', '平铺导航', '1', ' ', 'A');
INSERT INTO `option` VALUES ('951', '253', '标签导航', '1', ' ', 'B');
INSERT INTO `option` VALUES ('952', '253', '树形导航', '1', ' ', 'C');
INSERT INTO `option` VALUES ('953', '253', '模态视图导航', '0', ' ', 'D');
INSERT INTO `option` VALUES ('954', '254', '1/4', '0', ' ', 'A');
INSERT INTO `option` VALUES ('955', '254', '1/3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('956', '254', '2/5', '1', ' ', 'C');
INSERT INTO `option` VALUES ('957', '254', '1/2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('958', '254', '2/3', '0', ' ', 'E');
INSERT INTO `option` VALUES ('959', '254', '3/4', '0', ' ', 'F');
INSERT INTO `option` VALUES ('960', '255', '0', '0', ' ', 'A');
INSERT INTO `option` VALUES ('961', '255', '0.33', '0', ' ', 'B');
INSERT INTO `option` VALUES ('962', '255', '0.5', '1', ' ', 'C');
INSERT INTO `option` VALUES ('963', '255', '0.66', '0', ' ', 'D');
INSERT INTO `option` VALUES ('964', '255', '1', '0', ' ', 'E');
INSERT INTO `option` VALUES ('965', '256', '1/6', '0', ' ', 'A');
INSERT INTO `option` VALUES ('966', '256', '1/4', '0', ' ', 'B');
INSERT INTO `option` VALUES ('967', '256', '1/3', '0', ' ', 'C');
INSERT INTO `option` VALUES ('968', '256', '1/2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('969', '256', '2/3', '0', ' ', 'E');
INSERT INTO `option` VALUES ('970', '256', '3/4', '1', ' ', 'F');
INSERT INTO `option` VALUES ('971', '257', '颜色全相同', '0', ' ', 'A');
INSERT INTO `option` VALUES ('972', '257', '颜色不全相同', '1', ' ', 'B');
INSERT INTO `option` VALUES ('973', '257', '颜色全不同', '0', ' ', 'C');
INSERT INTO `option` VALUES ('974', '257', '颜色无红色', '0', ' ', 'D');
INSERT INTO `option` VALUES ('975', '258', '62.5%', '1', ' ', 'A');
INSERT INTO `option` VALUES ('976', '258', '25%', '0', ' ', 'B');
INSERT INTO `option` VALUES ('977', '258', '75%', '0', ' ', 'C');
INSERT INTO `option` VALUES ('978', '258', '77.5%', '0', ' ', 'D');
INSERT INTO `option` VALUES ('979', '258', '50%', '0', ' ', 'E');
INSERT INTO `option` VALUES ('980', '258', '70%', '0', ' ', 'F');
INSERT INTO `option` VALUES ('981', '259', '4', '1', ' ', 'A');
INSERT INTO `option` VALUES ('982', '259', '5', '0', ' ', 'B');
INSERT INTO `option` VALUES ('983', '259', '6', '0', ' ', 'C');
INSERT INTO `option` VALUES ('984', '259', '7', '0', ' ', 'D');
INSERT INTO `option` VALUES ('985', '260', '对数组a进行插入排序（升序）', '0', ' ', 'A');
INSERT INTO `option` VALUES ('986', '260', '对数组a进行插入排序（降序）', '1', ' ', 'B');
INSERT INTO `option` VALUES ('987', '260', '对数组a进行选择排序（升序）', '0', ' ', 'C');
INSERT INTO `option` VALUES ('988', '260', '对数组a进行选择排序（降序）', '0', ' ', 'D');
INSERT INTO `option` VALUES ('989', '261', '每次分区后,先处理较短的部分', '1', ' ', 'A');
INSERT INTO `option` VALUES ('990', '261', '每次分区后,先处理较长的部分', '0', ' ', 'B');
INSERT INTO `option` VALUES ('991', '261', '与算法每次分区后的处理顺序无关', '0', ' ', 'C');
INSERT INTO `option` VALUES ('992', '261', '以上三者都不对', '0', ' ', 'D');
INSERT INTO `option` VALUES ('993', '262', '1175', '1', ' ', 'A');
INSERT INTO `option` VALUES ('994', '262', '1180', '0', ' ', 'B');
INSERT INTO `option` VALUES ('995', '262', '1205', '0', ' ', 'C');
INSERT INTO `option` VALUES ('996', '262', '1210', '0', ' ', 'D');
INSERT INTO `option` VALUES ('997', '263', '二维以上的数组其实是一种特殊的广义表', '1', ' ', 'A');
INSERT INTO `option` VALUES ('998', '263', '数组一旦建立，结构的元素个数和元素间的关系就不再变化', '1', ' ', 'B');
INSERT INTO `option` VALUES ('999', '263', '数组是一种线性结构，因此只能用来存储线性表', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1000', '263', '数组采用顺序存储方式表示', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1001', '264', 'cross site script（跨站点脚本）', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1002', '264', 'cross site request（跨站点请求）', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1003', '264', 'ActiveX buffer overflow（控件缓冲溢出）', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1004', '264', 'sql injection（sql注入）', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1005', '265', 'DES', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1006', '265', 'RC5', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1007', '265', 'AES', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1008', '265', 'RSA', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1009', '266', 'MAC地址欺骗', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1010', '266', 'DNS劫持', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1011', '266', '伪造的DHCP服务器', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1012', '266', '使用https协议', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1013', '267', 'Vulnerability scan', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1014', '267', 'SQL Injection', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1015', '267', 'Drive-by downloading', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1016', '267', 'Brute force', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1017', '268', 'CreateRemoteThread + LoadLibraryA/W', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1018', '268', 'SetWindowsHook/SetWindowsHookEx', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1019', '268', 'OpenProcess + GetProcAddress', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1020', '268', 'QueueUserAPC + LoadLibraryA', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1021', '269', '预处理、汇编、编译和链接', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1022', '269', '编译、预处理、汇编和链接', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1023', '269', '预处理、编译、汇编和链接', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1024', '269', '预处理、编译、链接和汇编', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1025', '270', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1026', '270', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1027', '271', '文本区域', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1028', '271', '栈区域', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1029', '271', '堆区域', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1030', '271', '文件描述符', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1031', '272', 'CreateThread', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1032', '272', '_beginthreadex', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1033', '272', '一样', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1034', '272', '和具体机器配置相关', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1035', '273', '1，2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1036', '273', '1，3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1037', '273', '1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1038', '273', '以上都不正确', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1039', '274', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1040', '274', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1041', '275', '5', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1042', '275', '15', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1043', '275', '20', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1044', '275', '120', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1045', '276', 'We can create a binary tree from given inorder and preorder traversal sequences.', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1046', '276', 'We can create a binary tree from given preorder and postorder traversal sequences.', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1047', '276', 'For an almost sorted array, insertion sort can be more effective than Quicksort.', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1048', '276', 'Suppose T(n) is the runtime of resolving a problem with n elements, T(n) = Θ(1) if n = 1; T(n) = 2T(n/2) + Θ(n) if &gt; 1; so T(n) is Θ(n log n).', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1049', '276', 'None of the above.', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1050', '277', '二维数组和三维数组', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1051', '277', '三元组和散列', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1052', '277', '三元组和十字链表', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1053', '277', '散列和十字链表', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1054', '278', '有向图', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1055', '278', '带权有向图', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1056', '278', '有向图或无向图', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1057', '278', '无向图', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1058', '279', '深度优先遍历', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1059', '279', '拓扑排序', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1060', '279', '求最短路径', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1061', '279', '求关键路径', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1062', '280', '方法、属性、索引器和事件', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1063', '280', '方法、属性信息、属性', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1064', '280', '索引器和字段', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1065', '280', '事件和字段', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1066', '281', '值类型和调用类型', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1067', '281', '值类型和引用类型', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1068', '281', '引用类型和关系类型', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1069', '281', '关系类型和调用类型', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1070', '282', '9', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1071', '282', '6', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1072', '282', '2', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1073', '282', '溢出', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1074', '283', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1075', '283', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1076', '284', '&lt;HR&gt;', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1077', '284', '&lt;BR&gt;', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1078', '284', '&lt;TR&gt;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1079', '284', '&lt;T1&gt;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1080', '285', '依次弹出1，2，3，4', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1081', '285', '依次弹出0，1，2，3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1082', '285', '依次弹出3，3，3，3', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1083', '285', '依次弹出4，4，4，4', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1084', '286', '&lt;audio&gt; 标签定义声音，比如音乐或其他音频流', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1085', '286', '&lt;canvas&gt; 比如来自一个外部的新闻提供者的一篇新的文章，或者来自 blog 的文本，或者是来自论坛的文本。亦或是来自其他外部源内容', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1086', '286', '&lt;menu&gt; 标签定义菜单列表。当希望列出表单控件时使用该标签', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1087', '286', '&lt;command&gt; 标签定义命令按钮，比如单选按钮、复选框或按钮', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1088', '287', '应该将被包裹的元素放到navbar-collapse类中', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1089', '287', '表单应该放置于navbar-form内', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1090', '287', '可以使用navbar-left和navbar-right来对齐导航条', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1091', '287', '可以使用navbar-fixed-top和navbar-fixed-bottom来将导航条固定到顶部或底部', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1092', '288', '使用input-group来封装控件', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1093', '288', '使用input-group-addon来添加前置元素', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1094', '288', '使用input-group-tailon来添加后置元素', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1095', '288', '必须为input添加form-control类', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1096', '289', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1097', '289', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1098', '290', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1099', '290', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1100', '291', '4', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1101', '291', '5', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1102', '291', '6', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1103', '291', '7', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1104', '292', '（m+r-f）mod m', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1105', '292', 'r-f', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1106', '292', '(m-r+f) mod m', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1107', '292', '(m-r-f) mod m', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1108', '292', '(r-f) mod m', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1109', '292', '需要判断边界', '0', ' ', 'F');
INSERT INTO `option` VALUES ('1110', '293', '100   300   300   500', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1111', '293', '100    300     500', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1112', '293', '100    500', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1113', '293', '程序错误', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1114', '294', '*(*(a+i)+j)=1', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1115', '294', '*(a[i]+j)=1', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1116', '294', '**(a+i)[j]=1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1117', '294', '*((a+i)+j)=1', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1118', '295', '目标程序和相关文档', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1119', '295', '源程序、目标程序、数据及相关文档', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1120', '295', '目标程序、操作系统和平台软件', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1121', '295', '源程序和目标程序', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1122', '296', '需求测试、单元测试、集成测试、验证测试', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1123', '296', '单元测试、集成测试、确认测试、系统测试、验收测试', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1124', '296', '单元测试、集成测试、验证测试、确认测试、验收测试', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1125', '296', '调试、单元测试、集成测试、用户测试', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1126', '297', 'a=5，b=3，c=6;', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1127', '297', 'a=2，b=3，c=5;', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1128', '297', 'a=7，b=3，c=3;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1129', '297', 'a=2，b=6，c=3;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1130', '298', '构建的确认过程', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1131', '298', '系统集成测试测试组提交过程', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1132', '298', '测试用例设计过程', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1133', '298', 'Bug的报告过程', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1134', '299', '项目经理', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1135', '299', 'SQA 负责人', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1136', '299', '配置负责人', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1137', '299', '测试组', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1138', '300', '冒泡排序', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1139', '300', '基数排序', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1140', '300', '堆排序', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1141', '300', '快速排序', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1142', '301', '申请方式的不同，堆是系统自动分配，栈是自己申请', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1143', '301', '栈的大小是固定的，堆的大小受限于系统中有效的虚拟内存', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1144', '301', '栈的空间由系统决定何时释放，堆需要自己决定何时去释放', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1145', '301', '堆的使用容易产生碎片，但是用起来最方便', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1146', '302', 'auto', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1147', '302', 'extern', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1148', '302', 'static', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1149', '302', 'register', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1150', '303', '检查x和y是否相等', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1151', '303', '将y的值赋值给x', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1152', '303', '表示x除以y', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1153', '303', 'x和y互相排斥', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1154', '304', '(a&gt;0 )&amp;&amp;(b&gt;0)为真', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1155', '304', 'c==a 为真', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1156', '304', 'b的16进制为0xffffffe0', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1157', '304', '都不对', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1158', '305', '100', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1159', '305', '200', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1160', '305', '250', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1161', '305', '0', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1162', '306', 'a数组比b数组长度长', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1163', '306', 'a与b长度相同', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1164', '306', 'a与b数组完全相同', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1165', '306', 'a和b中都存放字符串', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1166', '307', '错', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1167', '307', '对', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1168', '308', '错', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1169', '308', '对', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1170', '309', '进程是在多程序并行环境中的完整的程序', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1171', '309', '进程可以由程序段、数据段和进程控制块描述', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1172', '309', '线程是一种特殊的进程', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1173', '309', '进程是程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1174', '310', '40ms', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1175', '310', '60ms', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1176', '310', '120ms', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1177', '310', '160ms', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1178', '311', '某一文件存放的数据信息', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1179', '311', '某一个文件的文件目录', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1180', '311', '该目录中所有数据文件目录', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1181', '311', '该目录中所有子目录文件和数据文件的目录', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1182', '312', 'Never.', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1183', '312', 'Each time a new object of type StaticTest is created.', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1184', '312', 'Once when the class is loaded into the Java virtual machine.', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1185', '312', 'Only when the main() method is executed.', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1186', '313', 'null null 42', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1187', '313', 'null 42 42', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1188', '313', '0 0 42', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1189', '313', '0 42 42', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1190', '313', 'An exception is thrown at runtime', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1191', '313', 'Compilation', '0', ' ', 'F');
INSERT INTO `option` VALUES ('1192', '314', '程序计数器是一个比较小的内存区域，用于指示当前线程所执行的字节码执行到了第几行，是线程隔离的', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1193', '314', 'Java方法执行内存模型，用于存储局部变量，操作数栈，动态链接，方法出口等信息，是线程隔离的', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1194', '314', '方法区用于存储JVM加载的类信息、常量、静态变量、即使编译器编译后的代码等数据，是线程隔离的', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1195', '314', '原则上讲，所有的对象都在堆区上分配内存，是线程之间共享的', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1196', '315', 'HashMap和Hashtable都实现了Map接口', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1197', '315', 'HashMap是非synchronized，而Hashtable是synchronized', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1198', '315', 'HashTable使用Enumeration，HashMap使用Iterator', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1199', '315', 'Hashtable直接使用对象的hashCode，HashMap重新计算hash值，而且用与代替求模', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1200', '316', 'catch部分捕捉到异常情况时，才会执行finally部分', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1201', '316', '当try区段的程序发生异常时，才会执行catch区段的程序', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1202', '316', '在try区段不论程序是否发生错误及捕获到异常错误，都会执行finally部分', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1203', '316', '以上都是', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1204', '317', 'useradd', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1205', '317', 'usermod', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1206', '317', 'groupadd', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1207', '317', 'userdel', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1208', '318', '元数据指用来描述一个文件的特征的系统数据，诸如访问权限、文件拥有者以及文件数据块的分布信息等等', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1209', '318', '我们可以使用stat命令来查看文件更多的元数据信息', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1210', '318', 'Unix/Linux系统允许，多个文件名指向同一个inode号码', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1211', '318', '文件A和文件B的inode号码虽然不一样，但是文件A的内容是文件B的路径。读取文件A时，系统会自动将访问者导向文件B，这是文件A就称为文件B的\"硬链接\"', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1212', '319', '/sbin/init', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1213', '319', '/bin/sh', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1214', '319', '/etc/sysvinit', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1215', '319', '/etc/inittab', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1216', '320', 'makefile文件保存了编译器和连接器的参数选项', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1217', '320', '主要包含了五个东西：显式规则、隐晦规则、变量定义、文件指示和注释', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1218', '320', '默认的情况下，make命令会在当前目录下按顺序找寻文件名为“GNUmakefile”、“makefile”、“Makefile”的文件， 找到了解释这个文件', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1219', '320', '在Makefile不可以使用include关键字把别的Makefile包含进来', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1220', '321', 'A(BC)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1221', '321', '(AB)C', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1222', '321', '(AC)B', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1223', '321', '所有效率都相同', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1224', '322', 'AprioriAll算法和GSP算法都属于Apriori类算法，都要产生大量的候选序列', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1225', '322', 'FreeSpan算法和PrefixSpan算法不生成大量的候选序列以及不需要反复扫描原数据库', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1226', '322', '在时空的执行效率上，FreeSpan比PrefixSpan更优', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1227', '322', '和AprioriAll相比，GSP的执行效率比较高', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1228', '323', '可以做特征选择,并在一定程度上防止过拟合', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1229', '323', '能解决维度灾难问题', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1230', '323', '能加快计算速度', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1231', '323', '可以获得更准确的结果', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1232', '324', 'Expectation Maximization', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1233', '324', 'Radlal Basis Function', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1234', '324', 'Linear Discrimimate Analysis', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1235', '324', 'Support Vector Machine', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1236', '325', 'SVM对噪声(如来自其他分布的噪声样本)鲁棒', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1237', '325', '在AdaBoost算法中,所有被分错的样本的权重更新比例相同', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1238', '325', 'Boosting和Bagging都是组合多个分类器投票的方法,二者都是根据单个分类器的正确率决定其权重', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1239', '325', '给定n个数据点,如果其中一半用于训练,一般用于测试,则训练误差和测试误差之间的差别会随着n的增加而减少', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1278', '347', '2%', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1279', '347', '10%', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1280', '347', '20%', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1281', '347', '50%', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1282', '348', '预处理阶段出错', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1283', '348', '编译阶段出错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1284', '348', '汇编阶段出错', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1285', '348', '链接阶段出错', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1286', '348', '运行阶段出错', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1287', '348', '程序运行正常', '1', ' ', 'F');
INSERT INTO `option` VALUES ('1288', '349', '多指令流单数据流', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1289', '349', '按地址访问并顺序执行指令', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1290', '349', '堆栈操作', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1291', '349', '存储器按内部选择地址', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1292', '350', '利用NFS共享Session数据', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1293', '350', '基于数据库的Session共享', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1294', '350', '基于Cookie的Session共享', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1295', '350', '使用类似BIG-IP的负载设备来实现资源共享', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1296', '351', '更好的磁盘吞吐量和更差的磁盘空间利用率', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1297', '351', '更好的磁盘吞吐量和更好的磁盘空间利用率', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1298', '351', '更差的磁盘吞吐量和更好的磁盘空间利用率', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1299', '351', '更差的磁盘吞吐量和更差的磁盘空间利用率', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1300', '352', '大于', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1301', '352', '等于', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1302', '352', '小于', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1303', '352', '不能确定', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1304', '353', '段式', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1305', '353', '页式', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1306', '353', '段页式', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1307', '353', '以上都不正确', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1308', '354', '进程是资源分配的基本单位', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1309', '354', '线程是资源分配的基本单位', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1310', '354', '进程是资源调度的基本单位', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1311', '354', '线程是资源调度的基本单位', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1312', '355', '采用\"按序分配\"策略可以破坏产生死锁的环路等待条件', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1313', '355', '银行家算法是最有代表性的死锁解除算法', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1314', '355', '在资源的动态分配过程中，防止系统进入安全状态，可避免发生死锁', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1315', '355', '产生死锁的现象是每个进程等待着某一个不能得到且不可释放的资源', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1316', '356', 'e3,e2,e5,e4,e1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1317', '356', 'e2,e3,e5,e4,e1', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1318', '356', 'e3,e2,e4,e5,e1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1319', '356', '以上都有可能', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1320', '357', 'cbad', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1321', '357', 'bdca', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1322', '357', 'adbc', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1323', '357', 'cdba', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1324', '358', '队列先进先出，栈后进先出', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1325', '358', '队列和栈都是先进先出', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1326', '358', '队列和栈都是后进先出', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1327', '358', '栈先进先出，队列后进先出', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1328', '359', '链表', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1329', '359', '树', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1330', '359', '队列', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1331', '359', '栈', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1332', '360', '前端mvc，极大降低前端开发的耦合', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1333', '360', '极大的丰富了dom操作', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1334', '360', '实现了数据双向绑定', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1335', '360', '实现了依赖注入', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1336', '361', 'bar\nbar\nbar\nbar', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1337', '361', 'bar\nbar\nbar\nundefined', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1338', '361', 'bar\nbar\nundefined\nbar', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1339', '361', 'undefined\nbar\nundefined\nbar', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1340', '362', 'Unfulfilled', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1341', '362', 'Rejected', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1342', '362', 'Resolved', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1343', '362', 'Pause', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1344', '363', 'innerText IE支持，FIREFOX不支持', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1345', '363', 'document.createElement FIREFOX支持，IE不支持', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1346', '363', 'setAttribute(\'class\'，\'styleClass\') FIREFOX支持，IE不支持', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1347', '363', '用setAttribute设置事件 FIREFOX不支持，IE支持', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1348', '364', 'null', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1349', '364', 'undefined', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1350', '364', '0', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1351', '364', '‘0\'', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1352', '365', '20%', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1353', '365', '45%', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1354', '365', '50%', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1355', '365', '70%', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1356', '366', '上下颠倒', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1357', '366', '放大', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1358', '366', '缩小', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1359', '366', '变色', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1360', '366', '左右互换位置', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1361', '367', '7', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1362', '367', '8', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1363', '367', '9', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1364', '367', '10', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1365', '368', '哈希函数构造的越复杂越好,因为这样随机性好,冲突小', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1366', '368', '除留余数法是所有哈希函数中最好的', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1367', '368', '不存在特别好与坏的哈希函数,要视情况而定', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1368', '368', '若需在哈希表中删去一个元素,不管用任何方法解决冲突都只要简单地将该元素删去即可', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1369', '369', '顺序存储方式', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1370', '369', '链式存储方式', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1371', '369', '散列存储方式', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1372', '369', '以上均可以', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1373', '370', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1374', '370', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1375', '371', '二叉排序树', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1376', '371', '队列', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1377', '371', '栈', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1378', '371', '哈希表', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1379', '372', '有序数组', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1380', '372', '有序链表', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1381', '372', 'AVL树', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1382', '372', 'Hash表', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1383', '373', '有关', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1384', '373', '无关', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1385', '374', '12', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1386', '374', '14', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1387', '374', '18', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1388', '374', '24', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1389', '375', '深度缓存算法并不需要开辟一个与图像大小相等的深度缓存数组', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1390', '375', '深度缓存算法不能用于处理对透明物体的消隐', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1391', '375', '深度缓存算法能并行实现', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1392', '375', '深度缓存算法中没有对多边形进行排序', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1393', '376', '内存总线的带宽', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1394', '376', '内存页面的访问特权级别', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1395', '376', 'CPU片内cache大小', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1396', '376', '程序读写内存的连续性', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1397', '377', '进程被调度程序选中', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1398', '377', '时间片到', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1399', '377', '等待某一事件', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1400', '377', '等待的事件发生', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1401', '378', 'CPU调度给优先级更高的线程', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1402', '378', '阻塞的线程获得资源或者信号', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1403', '378', '在时间片轮转的情况下，如果时间片到了', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1404', '378', '获得spinlock未果', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1405', '379', '优先权准则', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1406', '379', '响应时间快', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1407', '379', '截止时间的保证', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1408', '379', '周转时间短', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1409', '380', '磁盘文件区', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1410', '380', '磁盘对换区', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1411', '380', '后备作业区', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1412', '380', 'I/O缓冲区', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1413', '381', 'box-shadow', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1414', '381', 'border', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1415', '381', 'background', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1416', '381', 'display', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1417', '382', '&lt;title&gt;', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1418', '382', '&lt;meta&gt;', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1419', '382', '&lt;body&gt;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1420', '382', '&lt;link&gt;', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1421', '383', '&lt;h1&gt;最大', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1422', '383', '&lt;h6&gt;最大', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1423', '383', '&lt;small&gt;用法错误', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1424', '383', '&lt;small&gt;表示副标题', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1425', '384', 'bg-primary', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1426', '384', 'bg-success', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1427', '384', 'bg-info', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1428', '384', 'bg-warning', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1429', '385', '与第三方域名下的页面共享cookie', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1430', '385', '上传图片，避免当前页刷新', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1431', '385', '左边固定右边自适应的布局', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1432', '385', '资源加载', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1433', '386', '32', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1434', '386', '28', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1435', '386', '26', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1436', '386', '24', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1437', '387', 'A', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1438', '387', 'B', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1439', '387', 'C', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1440', '387', 'D', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1441', '387', 'E', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1442', '387', 'F', '0', ' ', 'F');
INSERT INTO `option` VALUES ('1443', '387', 'G', '0', ' ', 'G');
INSERT INTO `option` VALUES ('1444', '387', 'H', '1', ' ', 'H');
INSERT INTO `option` VALUES ('1445', '388', '英国    德国    韩国    法国', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1446', '388', '法国    英国    德国    韩国', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1447', '388', '德国    英国    法国    韩国', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1448', '388', '德国    英国    韩国    法国', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1449', '389', '10', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1450', '389', '16', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1451', '389', '20', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1452', '389', '26', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1453', '390', '100', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1454', '390', '198', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1455', '390', '200', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1456', '390', '500', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1457', '390', '2500', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1458', '390', '5000', '1', ' ', 'F');
INSERT INTO `option` VALUES ('1459', '391', 'null', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1460', '391', 'undefined', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1461', '391', 'true', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1462', '391', 'false', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1463', '391', '以上答案都不正确', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1464', '392', 'text()', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1465', '392', 'contains()', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1466', '392', 'input()', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1467', '392', 'attr(name)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1468', '393', 'if (x) {  function foo() {}}', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1469', '393', 'if (x) {  var foo = function() {}}', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1470', '393', 'if (x) {  foo = function() {}}', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1471', '393', 'ECMAScript明确的规范了块内函数，javascript实现了这个规范', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1472', '394', '一般使用var key=val的形式赋值', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1473', '394', '由于javascript的动态特性，常常直接采取key= val的形式赋值', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1474', '394', '若声明而未对变量赋值，该变量的值为undefined', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1475', '394', 'var carname=\"Volvo\";var carname;顺序执行后，caranme的值依然为Volvo', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1476', '395', '(\"Hello World\")', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1477', '395', '\"Hello World\"', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1478', '395', 'response.write(\"Hello World\")', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1479', '395', 'document.write(\"Hello World\")', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1480', '396', 'android:capitalize', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1481', '396', 'android:hint', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1482', '396', 'android:singleLine', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1483', '396', 'android:text', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1484', '397', 'bindService()方法执行成功后', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1485', '397', 'bindService()方法执行成功同时onBind()方法返回非空IBinder对象', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1486', '397', 'Service的onCreate()方法和onBind()方法执行成功后', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1487', '397', 'Service的onCreate()和onStartCommand()方法启动成功后', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1488', '398', 'onPause()', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1489', '398', 'onCreate()', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1490', '398', 'onResume()', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1491', '398', 'onStart()', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1492', '399', 'ButtonGroup', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1493', '399', 'RadioButtons', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1494', '399', 'CheckBox', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1495', '399', 'RadioGroup', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1496', '400', '管理一个surface，这个surface就是一块特殊的内存，能直接排版到android的视图view上。', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1497', '400', '管理一个EGL display，它能让opengl把内容渲染到上述的surface上。', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1498', '400', '让渲染器在独立的线程里运作，和UI线程分离。', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1499', '400', '可以直接从内存或者DMA等硬件接口取得图像数据', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1500', '401', '在where子句关键字之前', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1501', '401', '在where子句之后', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1502', '401', '在from关键字之前', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1503', '401', '在order by子句之后', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1504', '402', '左联接', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1505', '402', '右联接', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1506', '402', '内联接', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1507', '402', '全联接', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1508', '403', '在order by的子句中使用表的别名', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1509', '403', '在where子句中去掉表的别名', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1510', '403', '在where子句中用表名代替表的别名&lt;br&gt;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1511', '403', '在order by子句中去掉表名，只要字段名称即可', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1512', '404', '资源分配不当', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1513', '404', '进程运行推进的顺序不合适', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1514', '404', '系统资源不足', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1515', '404', '进程过多', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1516', '405', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1517', '405', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1518', '406', '2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1519', '406', '3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1520', '406', '4', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1521', '406', '5', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1522', '407', 'O(1)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1523', '407', 'O(N)', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1524', '407', 'O(logN)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1525', '407', 'O(N*logN)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1526', '408', '算法的效率只与问题的规模有关,而与数据的存储无关', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1527', '408', '算法的时间复杂度是指执行算法所需要的计算工作量', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1528', '408', '数据的逻辑结构与存储结构是一一对应的', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1529', '408', '算法的时间复杂度与空间复杂度一定相关', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1530', '409', 'O(logn)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1531', '409', 'O(n*logn)', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1532', '409', 'O(n)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1533', '409', 'O(n^2)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1534', '410', '3.1', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1535', '410', '4', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1536', '410', '2.5', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1537', '410', '5', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1538', '411', 'f,c,b', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1539', '411', 'f,d,b', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1540', '411', 'g,c,b', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1541', '411', 'g,d,b', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1542', '412', 'O（N）', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1543', '412', 'O（M+N）', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1544', '412', 'O（M+LOGM）', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1545', '412', 'O（N+LOGM）', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1546', '413', '1/20', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1547', '413', '15/16', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1548', '413', '3/5', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1549', '413', '19/20', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1550', '414', '0.5', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1551', '414', '0.4', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1552', '414', '0.25', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1553', '414', '0.15', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1554', '415', '1/6', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1555', '415', '1/4', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1556', '415', '1/3', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1557', '415', '1/2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1558', '415', '2/3', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1559', '415', '3/4', '1', ' ', 'F');
INSERT INTO `option` VALUES ('1560', '416', '0.67', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1561', '416', '0.33', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1562', '416', '0.91', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1563', '416', '0.8', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1564', '417', '如果他迟到，乘火车来的概率是0.5。', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1565', '417', '如果他准点，坐轮船或汽车的概率等于坐火车的概率。', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1566', '417', '如果他准点，那么乘飞机的概率大于等于0.5。', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1567', '417', '坐陆路（火车、汽车）交通工具准点机会比坐水路（轮船）要低。', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1568', '418', '动态链接库可以共享：多个应用程序可以使用同一个动态库，启动多个应用程序的时候，只需要将动态库加载到内存一次即可', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1569', '418', '动态链接库可以解决引用计数等问题', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1570', '418', '静态库，代码的装载速度快', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1571', '418', '静态库，如果多个应用程序使用的话，会被装载多次，浪费内存。', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1572', '419', 'CreateThread', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1573', '419', 'GetCurrentProcess', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1574', '419', 'OpenProcess', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1575', '419', 'CreateFile', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1576', '420', '擦除一个矩形区域', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1577', '420', '删除一个矩形', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1578', '420', '使一个矩形区域变为无效,从而释放部分GDI资源', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1579', '420', '使一个矩形区域变为无效,从而可以重绘', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1580', '421', '事件', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1581', '421', '临界区', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1582', '421', '互斥量', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1583', '421', '共享内存', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1584', '422', '注册窗口类-&gt;创建窗口-&gt;更新窗口-&gt;显示窗口-&gt;消息循环', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1585', '422', '创建窗口-&gt;注册窗口类-&gt;显示窗口-&gt;更新窗口-&gt;消息循环', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1586', '422', '注册窗口类-&gt;创建窗口-&gt;显示窗口-&gt;更新窗口-&gt;消息循环', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1587', '422', '创建窗口-&gt;注册窗口类-&gt;更新窗口-&gt;显示窗口-&gt;消息循环', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1588', '423', '构造函数', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1589', '423', '析构函数', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1590', '423', '友元函数', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1591', '423', '拷贝初始化构造函数', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1592', '424', '在采用补码的计算机的系统中，无符号整数和有符号整数很容易区分开', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1593', '424', '在32位系统中计算8位加法会比32位加法快', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1594', '424', '作整数运算时应尽量避免溢出，因为溢出会占用额外的内存，影响系统性能。', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1595', '424', '常见计算机系统中整数除法比乘法慢。', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1596', '425', '被调用函数式无参函数', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1597', '425', '被调用函数式无返回值的函数', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1598', '425', '函数的定义在调用处之前', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1599', '425', '函数的定义在别的程序文件中', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1600', '426', '依赖注入能够独立开发各组件，然后根据组件间关系进行组装', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1601', '426', '依赖注入使组件之间相互依赖，相互制约', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1602', '426', '依赖注入提供使用接口编程', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1603', '426', '依赖注入指对象在使用时动态注入', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1604', '427', 'vector&lt;&gt;中插入元素(动态数组)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1605', '427', 'set中查找元素', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1606', '427', 'hasp_map中查找元素', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1607', '427', 'deque尾部删除元素', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1608', '428', '55', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1609', '428', '45', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1610', '428', '36', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1611', '428', '16', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1612', '429', '32', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1613', '429', '31', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1614', '429', '21', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1615', '429', '22', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1616', '430', '405', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1617', '430', '455', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1618', '430', '495', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1619', '430', '505', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1620', '431', '265', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1621', '431', '266', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1622', '431', '267', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1623', '431', '268', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1624', '432', '单台虚拟机的故障率高于单台物理机的故障率', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1625', '432', '这 100 台虚拟机发生故障是彼此独立的', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1626', '432', '这100台虚拟机单位时间内出现故障的个数高于100台物理机单位时间内出现故障的个数', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1627', '432', '无法判断这 100 台虚拟机和 100 台物理机哪个更可靠', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1628', '432', '如果随机选出 5 台虚拟机组成集群， 那么这个集群的可靠性和 5 台物\n理机的可靠性相同', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1629', '432', '可能有一段时间只有 1 台虚拟机发生故障', '0', ' ', 'F');
INSERT INTO `option` VALUES ('1630', '433', 'RSI', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1631', '433', 'MACD', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1632', '433', 'ARMA', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1633', '433', 'KDJ', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1634', '434', '正向最大匹配法', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1635', '434', '逆向最大匹配法', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1636', '434', '最少切分', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1637', '434', '条件随机场', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1638', '435', 'int', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1639', '435', 'char*', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1640', '435', 'PWSTR', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1641', '435', 'HINSTANCE', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1642', '436', 'WM_MOUSEMOVE', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1643', '436', 'WM_TIMER', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1644', '436', 'WM_CHAR', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1645', '436', 'WM_WINDOWPOSCHANGED', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1646', '437', 'htons', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1647', '437', 'ntohs', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1648', '437', 'htonl', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1649', '437', 'ntohl', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1650', '437', 'WSAntohs', '1', ' ', 'E');
INSERT INTO `option` VALUES ('1651', '438', 'EXE和DLL文件都是PE文件', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1652', '438', 'EXE不能有导出函数，DLL可以有导出函数', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1653', '438', 'EXE有x86和x64之分，则DLL没有', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1654', '438', 'EXE可以单独运行，DLL则不行', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1655', '439', '9', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1656', '439', '10', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1657', '439', '11', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1658', '439', '12', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1659', '440', '并发计算是一种程序计算的形式，在系统中，至少有两个以上的计算在同时运作，计算结果可能同时发生', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1660', '440', '并行计算指许多指令得以同时进行的计算模式。在同时进行的前提下，可以将计算的过程分解成小部份，之后以并发方式来加以解决', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1661', '440', '并行是同时发生的多个并发事件，并发事件之间一定要同一时刻发生', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1662', '440', '并发是逻辑上的同时发生（simultaneous），而并行是物理上的同时发生', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1663', '441', 's3，s4不可并发执行', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1664', '441', 's2，s3可并发执行', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1665', '441', 's1，s4可并发执行', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1666', '441', 's1，s2不可并发执行', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1667', '442', '页面置换', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1668', '442', '内存分配', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1669', '442', '页面换出', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1670', '442', '页面调入', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1671', '443', '进程是程序的一次执行,而线程可以理解为程序中运行的一个片段', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1672', '443', '由于线程没有独立的地址空间,因此同一个进程的一组线程可以访问该进程资源,这些线程之间的通信也很高效', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1673', '443', '线程之间的通信简单(共享内存即可,但须注意互斥访问的问题),而不同进程之间的通信更为复发,通常需要调用内核实现', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1674', '443', '线程有独立的虚拟地址空间,但是拥有的资源相对进程来说,只有运行所必须的堆栈,寄存器等', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1675', '444', 'CPU', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1676', '444', '内存', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1677', '444', '磁盘', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1678', '444', '磁带机', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1679', '445', '管道', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1680', '445', '消息队列', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1681', '445', '内存共享', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1682', '445', '套接字', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1683', '446', '防火墙技术', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1684', '446', '访问控制技术', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1685', '446', '入侵检测技术', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1686', '446', '差错控制技术', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1687', '447', 'MD5', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1688', '447', 'RSA', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1689', '447', 'RC4', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1690', '447', 'DES', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1691', '448', 'MD5', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1692', '448', 'RSA', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1693', '448', 'RC4', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1694', '448', 'DES', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1695', '449', 'CSRF则通过伪装来自受信任用户的请求来利用受信任的网站', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1696', '449', 'xss是实现csrf的诸多途径中的一条', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1697', '449', '在客户端页面增加伪随机数可以阻挡csrf', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1698', '449', '过滤用户输入的内容也可以阻挡csrf', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1699', '450', '1.5', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1700', '450', '1.7', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1701', '450', '2.0', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1702', '450', '2.3', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1703', '451', '红黑树插入操作的平均时间复杂度为O(logn)，最坏时间复杂度为O(logn)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1704', '451', 'B+树插入操作的平均时间复杂度为O(logn)，最坏时间复杂度为O(logn)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1705', '451', 'Hash表插入操作的平均时间复杂度为O(logn)，最坏时间复杂度为O(n)', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1706', '451', '排序链表插入操作的平均时间复杂度为O(n)，最坏时间复杂度为O(n)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1707', '452', '线性探测', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1708', '452', '单旋转法', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1709', '452', '二次探测', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1710', '452', '拉链法', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1711', '452', '双重散列', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1712', '452', '多重散列', '0', ' ', 'F');
INSERT INTO `option` VALUES ('1713', '453', '1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1714', '453', '2', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1715', '453', '3', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1716', '453', '4', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1717', '454', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1718', '454', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1719', '455', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1720', '455', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1721', '456', '1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1722', '456', '2', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1723', '456', '3', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1724', '456', '4', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1725', '457', '插入排序某些情况下复杂度为O（n）', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1726', '457', '排序二叉树元素查找的复杂度可能为O（n）', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1727', '457', '对于有序列表的排序最快的是快速排序', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1728', '457', '在有序列表中通过二分查找的复杂度一定是O（log2n）', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1729', '458', '5', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1730', '458', '2', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1731', '458', '3', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1732', '458', '4', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1733', '459', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1734', '459', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1735', '460', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1736', '460', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1737', '461', '错', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1738', '461', '对', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1739', '462', '+ sendSynchronousRequest:returningResponse:error:', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1740', '462', '– initWithRequest:delegate:', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1741', '462', '– initWithRequest:delegate:startImmediately:', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1742', '463', '将数据类型的确定由编译时，推迟到了运行时', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1743', '463', '运行时机制使我们直到运行时才去决定一个对象的类别，以及调用该类别对象指定方法。', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1744', '463', '驾驶A继承了B类，那么在编译时就已经生成了A的实例', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1745', '463', '多态是指不同对象以自己的方式响应相同的消息的能力', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1746', '464', '拥有者可读写执行，同组用户可写可执行，其他用户可读可执行', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1747', '464', '拥有者可读写执行，同组用户可读写，其他用户可读可执行', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1748', '464', '拥有者可读写执行，同组用户可读可执行，其他用户可写可执行', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1749', '464', '拥有者可读写执行，同组用户可读可执行，其他用户可读写', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1750', '465', '-pthread', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1751', '465', '-fthis-is-varialble', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1752', '465', 'fcond-mismatch', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1753', '465', '-MMD', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1754', '466', 'bt', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1755', '466', 'info thread', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1756', '466', 'set scheduler-locking off', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1757', '466', 'info break', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1758', '467', '-v', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1759', '467', '-x', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1760', '467', '-c', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1761', '467', '-f', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1762', '468', '握手需要3次通信', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1763', '468', '分手需要进行4次通信', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1764', '468', 'FIN和ACK 在同一包里', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1765', '468', 'ACK 和SYN 在同一包里', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1766', '469', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1767', '469', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1768', '470', '12', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1769', '470', '13', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1770', '470', '16', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1771', '470', '以上都不对', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1772', '471', 'n+1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1773', '471', 'n^2', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1774', '471', 'n(n+1)/2+1', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1775', '471', '2^n-1', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1776', '471', 'n!', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1777', '472', '通过String s1=new String(\"abc\")和String s2=\"abc\"，则s1==s2为true。', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1778', '472', '\"abc\"+\"def\"则会创建三个字符串对象，第三个是\"abcdef\"。也就是说，在Java中对字符串的一切操作，都会产生一个新的字符串对象。', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1779', '472', 'StringBuffer是线程安全的，它比String快。', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1780', '472', 'StringBuilder是线程安全的，它比String快', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1781', '473', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1782', '473', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1783', '474', '不确定', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1784', '474', '0', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1785', '474', '1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1786', '474', '2', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1787', '475', '7', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1788', '475', '6', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1789', '475', '4', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1790', '475', '5', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1791', '476', '二叉树中至少有一个节点的度为2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1792', '476', '一个具有1025个节点的二叉树，其高度范围在11到1025之间', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1793', '476', '对于n个节点的二叉树，其高度为nlogn', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1794', '476', '二叉树的先序遍历是EFHIGJK,中序遍历为HFIEJKG,该二叉树的右子树的根为G', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1795', '477', 'Father', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1796', '477', 'Dang', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1797', '477', 'Exception', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1798', '477', 'Object', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1799', '478', '0', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1800', '478', '1', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1801', '478', '2', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1802', '478', '3', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1803', '479', 'Semaphore', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1804', '479', 'ReentrantLock', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1805', '479', 'Future', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1806', '479', 'CountDownLatch', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1807', '480', '构造函数可以声明返回类型', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1808', '480', '构造函数不可以用private修饰', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1809', '480', '构造函数必须与类名相同', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1810', '480', '构造函数不能带参数', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1811', '481', 'Java不支持指针，C/C++支持', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1812', '481', 'Java程序不需要显式地关心内存释放，而C/C++需要', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1813', '481', 'Java和C++一样，是纯编译型语言，因此它们的class都是在编译时静态联编(static binding)的', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1814', '481', 'Java数组、字符串不可能溢出，C/C++数组、字符串则有可能溢出边界', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1815', '482', 'Runloop并不是由系统自动控制的', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1816', '482', '有3类对象可以被run loop监控：sources，timers，observers', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1817', '482', '线程是默认启动run loop的', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1818', '482', 'NSTimer可手动添加到新建的NSRunLoop中', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1819', '483', 'ABAddressBook', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1820', '483', 'ABPerson', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1821', '483', 'ABGroup', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1822', '483', 'ABRecord', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1823', '484', 'UIViewController', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1824', '484', 'UINavigationController', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1825', '484', 'UITabBarController', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1826', '484', 'UITableViewController', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1827', '485', 'UITableViewCellAccessoryNone', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1828', '485', 'UITableViewCellAccessoryDisclosureIndicator', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1829', '485', 'UITableViewCellAccessoryDetailDisclosureButton', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1830', '485', 'UITableViewCellAccessoryCheckmark', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1831', '486', 'AR模型', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1832', '486', 'MA模型', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1833', '486', 'ARMA模型', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1834', '486', 'GARCH模型', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1835', '487', '估算', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1836', '487', '整例删除', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1837', '487', '变量删除', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1838', '487', '成对删除', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1839', '488', '计算量小', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1840', '488', '可以判别问题是否线性可分', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1841', '488', '其解完全适用于非线性可分的情况', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1842', '488', '其解的适应性更好', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1843', '489', 'LASSO', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1844', '489', '主成分分析法', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1845', '489', '聚类分析', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1846', '489', '小波分析法', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1847', '489', '线性判别法', '1', ' ', 'E');
INSERT INTO `option` VALUES ('1848', '489', '拉普拉斯特征映射', '1', ' ', 'F');
INSERT INTO `option` VALUES ('1849', '490', '主要用于多线程并发处理', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1850', '490', '它是一个队列，有严格的先进先出', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1851', '490', '它不会遵守严格的先进先出', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1852', '490', 'NSOperationQueue可以通过调整权重来调整队列的执行顺序', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1853', '491', 'UITableView', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1854', '491', 'UITableViewController', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1855', '491', 'UITableViewDelegate', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1856', '491', 'UITableViewDataSource', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1857', '492', '(K-1)/2', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1858', '492', 'K/2', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1859', '492', '(K+1)/2', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1860', '492', '都不对', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1861', '493', '[3，2，5，7，4，6，8]', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1862', '493', '[2，3，5，7，4，6，8]', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1863', '493', '[2，3，4，5，7，8，6]', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1864', '493', '[2，3，4，5，6，7，8]', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1865', '494', '123456', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1866', '494', '1', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1867', '494', '6', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1868', '494', '21', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1869', '495', '801005   810005', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1870', '495', '801010   810014', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1871', '495', '801005   810014', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1872', '495', '801010  810015', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1873', '496', 'false false false', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1874', '496', 'true false false', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1875', '496', 'true true true', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1876', '496', 'true true false', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1877', '497', '20', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1878', '497', '21', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1879', '497', '22', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1880', '497', '23', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1881', '497', '24', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1882', '497', '非以上选项', '0', ' ', 'F');
INSERT INTO `option` VALUES ('1883', '498', '11', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1884', '498', '12', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1885', '498', '13', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1886', '498', '14', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1887', '499', '以顺序方式存储', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1888', '499', '以顺序方式存储,且数据元素有序', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1889', '499', '以链接方式存储', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1890', '499', '以链接方式存储,且数据元素有序', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1891', '500', '3', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1892', '500', '4', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1893', '500', '5', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1894', '500', '6', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1895', '501', 'o(logn)', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1896', '501', 'o(n)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1897', '501', 'o(n二次方)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1898', '501', 'o(1)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1899', '502', '2', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1900', '502', '3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1901', '502', '4', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1902', '502', '5', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1903', '503', '17', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1904', '503', '18', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1905', '503', '19', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1906', '503', '20', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1907', '504', '以太网', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1908', '504', '光钎网', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1909', '504', '令牌环网', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1910', '504', 'FDDI网', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1911', '505', 'FDMA', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1912', '505', 'TDMA', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1913', '505', 'CDMA', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1914', '505', 'FDMA-TDMA混合技术', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1915', '506', '同轴电缆(coaxial)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1916', '506', '双绞线(twisted pair)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1917', '506', '光纤(twisted pair)', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1918', '506', '同步线(synchronous)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1919', '507', 'isolated', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1920', '507', 'promiscuous', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1921', '507', 'community', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1922', '507', 'primary', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1923', '507', 'trunk', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1924', '508', 'Socket用于描述IP地址和端口，是一个通信链的句柄', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1925', '508', 'Socket通信必须建立连结', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1926', '508', 'Socket客户端的端口是不固定的', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1927', '508', 'Socket服务端的端口是固定的', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1928', '509', '向规则链增加一条规则，规则匹配的对象是IP为192.168.3.112，tos等于0x10的包，使用路由表2，优先选择1500的端口', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1929', '509', '向规则链增加一条规则，规则匹配的对象是IP为192.168.3.112，tos等于0x10的包，使用路由表2，这条规则的优先级是1500', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1930', '509', '向规则链增加一条规则，规则匹配的对象是IP为192.168.3.112，tos等于0x10的包，不使用路由表2，优先选择1500的端口', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1931', '509', '命令语法不正确', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1932', '510', '指定了主机所属的网络', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1933', '510', '指定了网络上主机的标识', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1934', '510', '指定了设备能够进行通信的网络', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1935', '510', '指定被寻址的网中的某个节点', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1936', '511', '路由', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1937', '511', '路由器优先级', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1938', '511', '路由权', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1939', '511', '包转发率', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1940', '512', '256.1.3.4', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1941', '512', '197.3.11.0', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1942', '512', '199.5.89', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1943', '512', '11.15.33.235', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1944', '513', '端局分区', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1945', '513', '端局全覆盖', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1946', '513', '汇接局全覆盖', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1947', '513', '汇接局分区', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1948', '514', '-a+b*c/d', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1949', '514', '-a+b*cd/e', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1950', '514', '-+*abc/de', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1951', '514', 'abcd/+e*-', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1952', '515', '（10010101）2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1953', '515', '（227）8', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1954', '515', '（96）16', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1955', '515', '（143）10', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1956', '516', 'JPEG 是与平台无关的格式，JPEG 广泛支持 Internet 标准', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1957', '516', 'BMP 支持 1 位到 24 位颜色深度。BMP 格式与现有 Windows 程序（尤其是较旧的程序）广泛兼容', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1958', '516', 'GIF可以做透明图片，让透明的地方显示背景', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1959', '516', 'PNG 图片以任何颜色深度存储单个光栅图像，支持最高级别的压缩，不过，这种压缩是有损耗的', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1960', '517', 'AB', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1961', '517', 'EF', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1962', '517', '8B', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1963', '517', '9D', '1', ' ', 'D');
INSERT INTO `option` VALUES ('1964', '518', '12', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1965', '518', '33', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1966', '518', '36', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1967', '518', '84', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1968', '518', '96', '0', ' ', 'E');
INSERT INTO `option` VALUES ('1969', '519', '5^4*5!*15!/20!', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1970', '519', '4^5*5!*15!/20!', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1971', '519', '5^4*4!*16!/20!', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1972', '519', '4^5*4!*16!/20!', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1973', '520', '左偏', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1974', '520', '右偏', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1975', '520', '钟型', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1976', '520', '对称', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1977', '521', '从中抽取的500名学生的身高', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1978', '521', '上海市全部小学生的身高', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1979', '521', '从中抽取的500名小学生', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1980', '521', '上海市全部小学生', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1981', '522', '错', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1982', '522', '对', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1983', '523', '小于6min', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1984', '523', '大于6min', '1', ' ', 'B');
INSERT INTO `option` VALUES ('1985', '523', '小于等于60min', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1986', '523', '大于60min', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1987', '524', 'inode和文件是一一对应的', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1988', '524', 'inode能描述文件占用的块数', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1989', '524', 'inode描述了文件大小和指向数据块的指针', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1990', '524', '通过inode实现文件的逻辑结构和物理结构的转换', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1991', '525', '集中空闲区', '1', ' ', 'A');
INSERT INTO `option` VALUES ('1992', '525', '增加主存容量', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1993', '525', '缩短访问时间', '0', ' ', 'C');
INSERT INTO `option` VALUES ('1994', '525', '加速地址转换', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1995', '526', '100KB', '0', ' ', 'A');
INSERT INTO `option` VALUES ('1996', '526', '190KB', '0', ' ', 'B');
INSERT INTO `option` VALUES ('1997', '526', '330KB', '1', ' ', 'C');
INSERT INTO `option` VALUES ('1998', '526', '410KB', '0', ' ', 'D');
INSERT INTO `option` VALUES ('1999', '527', '丢掉该分组', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2000', '527', '将该分组分片', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2001', '527', '转发该分组', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2002', '527', '将分组转发或分片', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2003', '527', '将分组保留存储', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2004', '527', '以上都有可能', '0', ' ', 'F');
INSERT INTO `option` VALUES ('2005', '528', '160.2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2006', '528', '160', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2007', '528', '63.160', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2008', '528', '130.63.160', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2009', '529', '3KB', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2010', '529', '4KB', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2011', '529', '15KB', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2012', '529', '16KB', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2013', '530', '10KB', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2014', '530', '12KB', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2015', '530', '14KB', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2016', '530', '15KB', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2017', '531', 'post请求一般用于修改服务器上的资源，对发送的消息数据量没有限制，通过表单方式提交', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2018', '531', 'HTTP返回码302表示永久重定向，需要重新URI', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2019', '531', '可以通过206返回码实现断点续传', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2020', '531', 'HTTP1.1实现了持久连接和管线化操作以及主动通知功能，相比http1.0有大福性能提升', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2021', '532', '栈只能在一端进行入栈和出栈操作', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2022', '532', '队列在一端进行入队操作，另一端进行出队操作', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2023', '532', '栈和队列都是“先进后出”', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2024', '532', '链表的各个元素在内存中的保持位置可以是不连续的', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2025', '533', '线性表的顺序存储结构', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2026', '533', '队列', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2027', '533', '线性表的链式存储结构', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2028', '533', '栈', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2029', '534', 'Top-&gt;next=p;', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2030', '534', 'p-&gt;next=Top-&gt;next;Top-&gt;next=p;', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2031', '534', 'p-&gt;next=Top;Top=p-&gt;next;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2032', '534', 'p-&gt;next=Top;Top=Top-&gt;next;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2033', '535', 'e3，e2，e5，e4，e1', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2034', '535', 'e2，e4，e1，e3，e5', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2035', '535', 'e3，e2，e4，e5，e1', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2036', '535', '以上皆不可能', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2037', '536', '100，60，70，50，32，65', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2038', '536', '60，70，65，50，32，100', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2039', '536', '65，100，70，32，50，60', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2040', '536', '70，65，100，32，50，60', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2041', '536', '32，50，100，70，65，60', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2042', '536', '50，100，70，65，60，32', '0', ' ', 'F');
INSERT INTO `option` VALUES ('2043', '537', '100，60，70，50，32，65', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2044', '537', '60，70，65，50，32，100', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2045', '537', '65，100，70，32，50，60', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2046', '537', '70，65，100，32，50，60', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2047', '537', '32，50，100，70，65，60', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2048', '537', '50，100，70，65，60，32', '0', ' ', 'F');
INSERT INTO `option` VALUES ('2049', '538', 'submit', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2050', '538', 'onsubmit', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2051', '538', 'onupload', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2052', '538', 'onresize', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2053', '539', 'e.preventDefault()', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2054', '539', 'e.cancelBubble=true', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2055', '539', 'e.stopPropagation()', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2056', '539', 'e.stopImmediatePropagation()', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2057', '540', 'word-break', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2058', '540', 'letter-spacing', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2059', '540', 'white-space', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2060', '540', 'word-spacing', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2061', '541', 'mark用于显示变粗的文字', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2062', '541', '&lt;del&gt;用于显示删除的文本', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2063', '541', '&lt;ins&gt;的文字会带下划线', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2064', '541', '&lt;strong&gt;用于强调文本', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2065', '542', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2066', '542', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2067', '543', '三元组', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2068', '543', '队列', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2069', '543', '二叉树', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2070', '543', '栈', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2071', '544', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2072', '544', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2073', '545', '栈是先进先出的数据结构', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2074', '545', '队列是先进先出的数据结构', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2075', '545', '栈内元素可以随机访问', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2076', '545', '队列内的元素可以随机访问', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2077', '546', 'f=f+1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2078', '546', 'f=(f+1)%m', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2079', '546', 'r=(r+1)%m', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2080', '546', 'f=(f+1)%(m+1)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2081', '547', 'CPU已满负荷地运转', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2082', '547', 'CPU 的运行效率为30%', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2083', '547', 'CPU的运行效率为50%', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2084', '547', 'CPU 的运行效率为80%', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2085', '548', 'The Xsession file', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2086', '548', 'The Xsetup_0 file', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2087', '548', 'The Xstart_up file', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2088', '548', 'The GiveConsole file', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2089', '549', '进程管理系统', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2090', '549', '内存管理系统', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2091', '549', 'I/O管理系统', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2092', '549', '硬件管理系统', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2093', '550', '64MB', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2094', '550', '128MB', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2095', '550', '256MB', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2096', '550', '512MB', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2097', '551', 'find . -name \"*.txt\"', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2098', '551', 'ls *.txt', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2099', '551', 'find . \".txt\"', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2100', '551', 'ls -d.txt', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2101', '552', 'Do not host a database server on the same server as your web server', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2102', '552', 'Do not host a database server on a server based system', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2103', '552', 'Do not use blank password for SA account', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2104', '552', 'Employ a centralized administration model', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2105', '553', 'hosts文件篡改', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2106', '553', 'syn flood攻击', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2107', '553', '本机DNS服务器IP地址篡改', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2108', '553', 'DNS通讯包篡改', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2109', '554', '域', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2110', '554', '关系', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2111', '554', '元组', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2112', '554', '属性', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2113', '555', '索引可以提升查询，分组和排序的性能', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2114', '555', '索引不会影响表的更新、插入和删除操作的效率', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2115', '555', '全表扫描不一定比使用索引的执行效率低', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2116', '555', '对于只有很少数据值的列，不应该创建索引', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2117', '556', '一般而言，PreparedStatement比Statement执行效率更高', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2118', '556', 'PreparedStatement会预编译SQL语句', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2119', '556', 'Statement每次都会解析/编译SQL，确立并优化数据获取路径', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2120', '556', 'Statement执行扫描的结果集比PreparedStatement大', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2121', '557', 'SELECT * FROM book b WHERE b.book_num &lt; 200 OR b.book_num &gt;= 300', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2122', '557', 'SELECT * FROM book b WHERE b.book_num &lt;= 200 OR b.book_num &gt; 300', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2123', '557', 'SELECT * FROM book b WHERE b.book_num &lt;= 200 OR b.book_num &gt;= 300', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2124', '557', 'SELECT * FROM book b WHERE b.book_num &lt; 200 OR b.book_num &gt; 300', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2125', '558', '内部事务回滚会导致外部事务回滚', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2126', '558', '内部事务回滚了，外部事务仍然可以提交', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2127', '558', '外部事务回滚了，内部事务也跟着回滚', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2128', '558', '外部事务回滚了，内部事务仍然可以提交', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2129', '559', '#将传入的数据都当成一个字符串，会对自动传入的数据加一个双引号', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2130', '559', '$方式能够很大程度防止sql注入。', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2131', '559', '$方式一般用于传入数据库对象，例如传入表名', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2132', '559', '$将传入的数据直接显示生成在sql中', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2133', '560', 'SELECT S#，SUM(GRADE)FROM SC WHERE GRADE＞=60 GROUP BY S# ORDER BY 2 DESC HAVING COUNT(*)＞＝4 WHERE C#=“C2” AND GRADE ＞=(SELECT GRADE FORM SC WHERE C#=“C2”)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2134', '560', 'SELECT S# FORM SC WHERE C#=“C2” AND GRADE IN (SELECT GRADE FORM SC WHERE C#=“C2”)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2135', '560', 'SELECT S# FORM SC WHERE C#=“C2” AND GRADE NOT IN (SELECT GRADE FORM SC WHERE C#=“C2”)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2136', '560', 'SELECT S# FORM SC WHERE C#=“C2” AND GRADE＞＝ALL (SELECT GRADE FORM SC WHERE C#=“C2”', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2137', '561', 'desc user;', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2138', '561', 'show create table user;', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2139', '561', 'show columns for user;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2140', '561', 'describe user;', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2141', '562', 'select *from user where A=1 and B=1', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2142', '562', 'select *from user where 1=1 and A=1 and B=1', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2143', '562', 'select *from user where B=1 and C=1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2144', '562', 'select *from user where A=1 and C=1', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2145', '563', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2146', '563', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2147', '564', 'ping', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2148', '564', 'route', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2149', '564', 'traceroute', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2150', '564', 'ifconfig', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2151', '565', 'mysqldump -h ip -u -p DBNAME &gt;bck.sql', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2152', '565', 'mysqldump -Pip -hDBNAME&gt;bck.sql', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2153', '565', 'mysqldump -uip -P DBNAME&gt;bck.sql', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2154', '565', 'mysqldump -h ip -uDBNAME&gt;bck.sql', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2155', '566', '-m', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2156', '566', '-d', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2157', '566', '-f', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2158', '566', '-p', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2159', '567', 'grep -i example ./*.cpp', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2160', '567', 'grep -v example ./*.cpp', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2161', '567', 'grep -i -v example ./*.cpp', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2162', '567', 'grep -i -r example ./*.cpp', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2163', '568', 'chmod apache-R/ftproot', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2164', '568', 'chmod apache/ftproot', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2165', '568', 'chgrp apache/ftproot', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2166', '568', 'chown apache/ftproot', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2167', '569', 'They should override the service()method in most cases;', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2168', '569', 'They should call the service()method from doGet()or doPost();', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2169', '569', 'They should call the service()method from the init()method;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2170', '569', 'They should override at least one doXXX()method(such as doPost())', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2171', '570', 'The encodeURL method of the HttpServletRequest interface.', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2172', '570', 'The encodeURL method of the HttpServletResponse interface.', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2173', '570', 'The rewriteURL method of the HttpServletRequest interface.', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2174', '570', 'The rewriteURL method of the HttpServletResponse interface.', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2175', '571', 'spring事务可以分为编程式事务和声明式事务', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2176', '571', 'spring提供了一个事务的接口 PaltformTractionManager接口，针对不同的事务，spring进行了不同的实现', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2177', '571', '声明式事务最大的优点就是不需要通过编程的方式管理事务，这样就不需要在业务逻辑代码中掺杂事务管理的代码', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2178', '571', '如果你的应用中存在大量事务操作，那么编程式事务管理通常是值得的', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2179', '572', '&lt;filter&gt;', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2180', '572', '&lt;filter-mapping&gt;', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2181', '572', '&lt;servlet-filter&gt;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2182', '572', '&lt;filter-config&gt;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2183', '573', 'doGet方法', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2184', '573', 'doPost方法', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2185', '573', 'init方法', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2186', '573', 'forward方法', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2187', '574', 'JQuery', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2188', '574', 'Node.js', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2189', '574', 'Prototype', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2190', '574', 'CommonJS', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2191', '575', 'x in list if(query(x))', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2192', '575', 'x in list | filter:query', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2193', '575', 'x in list ? filter:query', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2194', '575', 'x in list if filter:query', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2195', '576', 'typeof(arr)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2196', '576', 'arr instanceof Array', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2197', '576', 'arr.toString===\'[object Array]\';', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2198', '576', 'Object.prototype.toString.call(arr) === \'[object Array]\';', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2199', '577', '&lt;div ng-show=\"val\"&gt;&lt;/div&gt;', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2200', '577', '&lt;div  ng-class=\"{true: \'\', false: \'hedden\'}[value]\"&gt;&lt;/div&gt;', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2201', '577', '&lt;div ng-if=\"val\"&gt;&lt;/div&gt;', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2202', '577', '&lt;div ng-app=\"myApp\"&gt;&lt;/div&gt;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2203', '578', 'document.getElementById(\'button1\').style.backgroundColor=\"red\";', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2204', '578', 'document.getElementById(\'button1\').style.backgroundcolor=\"red\";', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2205', '578', 'document.getElementById(\'button1\').style.backGroundColor=\"red\";', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2206', '578', 'document.getElementById(\'button1\').style.bgcolor=\"red\";', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2207', '579', 'A.F    B.F    A.G   B.G', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2208', '579', 'A.F    B.F    B.G   B.G', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2209', '579', 'A.F    A.F    B.G   B.G', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2210', '579', 'B.F    B.F    B.G   B.G', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2211', '580', '值类型和调用类型', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2212', '580', '值类型和引用类型', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2213', '580', '引用类型和关系类型', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2214', '580', '关系类型和调用类型', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2215', '581', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2216', '581', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2217', '582', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2218', '582', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2219', '583', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2220', '583', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2221', '584', '伙伴算法是按2的幂次方大小进行分配内存块', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2222', '584', '1）两个块大小相同；2）两个块地址连续；3）两个块必须是同一个大块中分离出来的。满足以上三个条件的叫做伙伴', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2223', '584', '对于小内存的请求，伙伴算法更好的解决了内碎片问题', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2224', '584', 'buddy算法中，位图扮演了重要的角色', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2225', '585', 'O(n)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2226', '585', 'O(n+c)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2227', '585', 'O(n*n)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2228', '585', 'O(n*n*n)', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2229', '586', '线性表的逻辑顺序与物理顺序总是一致的。', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2230', '586', '线性表的顺序存储表示优于链式存储表示。', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2231', '586', '线性表若采用链式存储表示时所有结点之间的存储单元地址可连续可不连续。', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2232', '586', '二维数组是其数组元素为线性表的线性表。', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2233', '587', '能', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2234', '587', '不能', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2235', '588', '发送短信,无需配置权限', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2236', '588', 'permission.SMS', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2237', '588', 'android.permission.RECEIVE_SMS', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2238', '588', 'android.permission.SEND_SMS', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2239', '589', '都是', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2240', '589', '声明要求的最低API级别', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2241', '589', '声明要求的用户权限的级别', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2242', '589', '记录程序中使用的Activity等资源', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2243', '590', '5', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2244', '590', '2', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2245', '590', '4', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2246', '590', '3', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2247', '591', '广播接收器只能在配置文件中注册', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2248', '591', '广播接收器注册后不能注销', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2249', '591', '广播接收器只能接收自定义的广播消息', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2250', '591', '广播接收器可以在Activity中单独注册与注销', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2251', '592', 'NSAssert1', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2252', '592', 'NSAssert2', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2253', '592', 'NSAssert3', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2254', '592', 'NSAssert4', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2255', '593', '属性列表文件', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2256', '593', '对象归档', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2257', '593', 'SQLite数据库', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2258', '593', 'CoreData', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2259', '594', 'presentViewController:animated:completion:', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2260', '594', 'dismissViewControllerAnimated:completion:', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2261', '594', 'addChildViewController:', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2262', '594', 'removeFromParentViewController', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2263', '595', '(a%)^7*(C(5,5)*C(4,2) + C(5,2)*C(4,3) + C(5,2)*C(4,4))', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2264', '595', '(a%)^7*(C(5,4)*C(4,3) + C(5,3)*C(4,4) + C(5,3)*C(4,4))', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2265', '595', '(a%)^7*(C(5,5)*C(4,2) + C(5,4)*C(4,3) + C(5,3)*C(4,4))', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2266', '595', '(a%)^7*(C(5,2)*C(4,4) + C(5,3)*C(4,4) + C(5,4)*C(4,3))', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2267', '596', '63.16%', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2268', '596', '99.9875%', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2269', '596', '36.84%', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2270', '596', '以上都不正确', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2271', '597', '0.9991', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2272', '597', '0.9989', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2273', '597', '0.9855', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2274', '597', '0.96', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2275', '598', '估计100盆中至少有75盆高度在60到80cm之间', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2276', '598', '有较高把握估测这100盆的平均高度在69到72cm之间', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2277', '598', '估计100盘中至少有70盆高度在65到75cm之间', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2278', '599', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2279', '599', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2280', '600', '32', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2281', '600', '31', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2282', '600', '30', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2283', '600', '29', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2284', '601', 'n-1', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2285', '601', 'n', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2286', '601', 'n+1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2287', '601', 'n(n+1)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2288', '601', 'n(n+1)/2', '1', ' ', 'E');
INSERT INTO `option` VALUES ('2289', '601', '1+n(n+1)/2', '0', ' ', 'F');
INSERT INTO `option` VALUES ('2290', '602', '平方取中法:先通过求关键字的平方值扩大相近数的差别，然后根据表长度取中间的几位数作为散列函数值。', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2291', '602', '除余法:它是以表长m来除关键字，取其余数作为散列地址，即 h(key)=key％m', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2292', '602', '相乘取整法:首先用关键字key乘上某个常数A(0&lt;A&lt;1)，并抽取出key.A的小数部分；然后用m乘以该小数后取整', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2293', '602', '随机数法:选择一个随机函数，取关键字的随机函数值为它的散列地址', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2294', '603', '原型法', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2295', '603', '瀑布模型', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2296', '603', 'V-模型', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2297', '603', '螺旋模型', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2298', '604', '装饰模式', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2299', '604', '合成模式', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2300', '604', '桥接模式', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2301', '604', '适配器', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2302', '605', '模块(module)-视图(view)-组件(component)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2303', '605', '模型(model)-视图(view)-组件(component)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2304', '605', '模块(module)-视图(view)-控制器(controller)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2305', '605', '模型(model)-视图(view)-控制器(controller)', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2306', '606', '可理解性与可测试性', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2307', '606', '效率与可修改性', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2308', '606', '可修改性和可理解性', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2309', '606', '可理解性与可读性', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2310', '607', 'Aadapter', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2311', '607', 'factory method', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2312', '607', 'proxy', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2313', '607', 'decorator', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2314', '607', 'composite', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2315', '608', 'T', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2316', '608', 'F', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2317', '609', '可以', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2318', '609', '不可以', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2319', '610', '/data/data/shared_prefs/                 *.txt', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2320', '610', '/data/data/package name/shared_prefs/   *.xml', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2321', '610', '/mnt/sdcard/指定文件夹                  指定扩展名', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2322', '610', '任意路径                                 指定扩展名', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2323', '611', 'Serializable', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2324', '611', 'File', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2325', '611', 'Parcelable', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2326', '611', 'Thread', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2327', '612', '在内存中缓存多个Bitmap对象是一种数据持久化方法', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2328', '612', 'SQLite数据库文件可以保存在SD卡中', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2329', '612', 'ContentProvider的主要目的是为了将Android应用的数据持久化', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2330', '612', '数据持久化就是将内存的数据保存到外存', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2331', '613', '实时调度算法', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2332', '613', '短任务优先算法', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2333', '613', '时间片轮转算法', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2334', '613', '先来先服务算法', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2335', '614', '通用寄存器给出的地址，是段内偏移地址，相应段寄存器地址*10H+通用寄存器内地址，就得到了真正要访问的地址。', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2336', '614', '段寄存器给出的地址，是段内偏移地址，相应通用寄存器地址*10H+段用寄存器内地址，就得到了真正要访问的地址。', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2337', '614', '不需要特殊的变换', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2338', '614', '以上答案都不正确', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2339', '615', '1 4', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2340', '615', '1 3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2341', '615', '4 1', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2342', '615', '3 1', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2343', '615', '4 4', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2344', '615', '1 1', '0', ' ', 'F');
INSERT INTO `option` VALUES ('2345', '616', '400us,103us,20us', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2346', '616', '400us,103us,80us', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2347', '616', '400us,104us,80us', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2348', '616', '400us,104us,40us', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2349', '617', '130', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2350', '617', '85', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2351', '617', '140', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2352', '617', '115', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2353', '618', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2354', '618', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2355', '619', '只有Ⅰ', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2356', '619', '只有Ⅱ', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2357', '619', 'Ⅰ和Ⅱ', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2358', '619', 'Ⅰ和Ⅲ', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2359', '620', '4,5', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2360', '620', '4,10', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2361', '620', '5,6', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2362', '620', '5,8', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2363', '621', '(1)(2)(3)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2364', '621', '(1)', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2365', '621', '(1)(3)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2366', '621', '(2)(3)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2367', '622', '2', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2368', '622', '3', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2369', '622', '4', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2370', '622', '5', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2371', '622', '6', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2372', '622', '7', '0', ' ', 'F');
INSERT INTO `option` VALUES ('2373', '623', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2374', '623', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2375', '624', '单一职责原则（Single-Resposibility Principle）', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2376', '624', '开放封闭原则（Open-Closed principle）', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2377', '624', '抽象类原则（Abstract-Class principle）', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2378', '624', '依赖倒置原则（Dependecy-Inversion Principle）', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2379', '624', '接口隔离原则（Interface-Segregation Principle）', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2380', '625', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2381', '625', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2382', '626', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2383', '626', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2384', '627', '堆排序算法', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2385', '627', '归并排序算法', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2386', '627', '快速排序算法', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2387', '627', '以上答案都不对', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2388', '628', '希尔', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2389', '628', '冒泡', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2390', '628', '快速', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2391', '628', '插入', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2392', '629', '快速排序', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2393', '629', '希尔排序', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2394', '629', '冒泡排序', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2395', '629', '堆排序', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2396', '630', 'nn的二次方', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2397', '630', 'n的二次方/2', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2398', '630', 'n(n-1)/2', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2399', '630', 'n(n+1)/2', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2400', '631', '(100,85,98,77,80,60,82,40,20,10,66)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2401', '631', '(100,98,85,82,80,77,66,60,40,20,10)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2402', '631', '(10,20,40,60,66,77,80,82,85,98,100)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2403', '631', '(100,85,40,77,80,60,66,98,82,10,20)', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2404', '632', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2405', '632', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2406', '633', '9', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2407', '633', '12', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2408', '633', '18', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2409', '633', '24', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2410', '634', '&lt;div class=\"container\"&gt;&lt;br&gt;   &lt;div class=\"row\"&gt;', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2411', '634', '&lt;div class=\"row\"&gt;&lt;br&gt;   &lt;div class=\"col-md-1\"&gt;', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2412', '634', '&lt;div class=\"row\"&gt;&lt;br&gt;   &lt;div class=\"container\"&gt;', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2413', '634', '&lt;div class=\"col-md-1\"&gt;&lt;br&gt;&lt;div class= \"row\"&gt;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2414', '635', 'col-md-8 col-xs-12', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2415', '635', 'col-lg-8 col-sm-12', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2416', '635', 'col-md-8 col-sm-12', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2417', '635', 'col-lg-8 col-xs-12', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2418', '636', 'canvas是HTML5的一部分，允许脚本动态渲染位图像', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2419', '636', 'canvas是作为Flash的替代技术出现', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2420', '636', 'canvas拥有多种绘制路径、矩形、圆形、字符及添加图像的方法', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2421', '636', 'Internet Explorer自Internet Explorer9起已经可以支持canvas', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2422', '637', '&lt;meta&gt;', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2423', '637', '&lt;pre&gt;', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2424', '637', '&lt;mark&gt;', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2425', '637', '&lt;small&gt;', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2426', '638', '在页面的第二个文本框中输入内容后，当鼠标离开第二个文本框时，第一个文本框的内容不变', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2427', '638', '在页面的第一个文本框中输入内容后，当鼠标离开第一个文本框时，将在第二个文本框中复制第一个文本框的内容', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2428', '638', '在页面的第二个文本框中输入内容后，当鼠标离开第二个文本框时，将在第一个文本框中复制第二个文本框的内容', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2429', '638', '在页面的第一个文本框中输入内容后，当鼠标离开第一个文本框时，第二个文本框的内容不变', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2430', '639', '希尔排序', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2431', '639', '堆排序', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2432', '639', '起泡排序', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2433', '639', '快速排序', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2434', '640', '直接插入排序', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2435', '640', '冒泡排序', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2436', '640', '简单选择排序', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2437', '640', '快速排序', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2438', '641', '数据有多个相同数值', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2439', '641', '数据基本有序', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2440', '641', '数据基本无序', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2441', '641', '数据无任何相同数值', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2442', '642', '2-6-3-5-4-1-7', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2443', '642', '6-2-3-5-4-1-7', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2444', '642', '6-5-3-2-4-1-7', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2445', '642', '1-5-3-2-4-6-7', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2446', '642', '5-4-3-2-1-6-7', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2447', '642', '5-1-3-2-4-6-7', '0', ' ', 'F');
INSERT INTO `option` VALUES ('2448', '643', '散列', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2449', '643', '顺序', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2450', '643', '链式', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2451', '643', '索引', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2452', '644', '否', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2453', '644', '是', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2454', '644', '至今尚无定论', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2455', '645', 'WM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONDOWN，WM_LBUTTONUP', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2456', '645', 'WM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONUP，WM_LBUTTONDBLCLK', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2457', '645', 'WM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONDOWN，WM_LBUTTONDBLCLK', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2458', '645', 'WM_LBUTTONDOWN，WM_LBUTTONUP，WM_LBUTTONDBLCLK，WM_LBUTTONUP', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2459', '646', 'CreatePen', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2460', '646', 'CreateEvent', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2461', '646', 'CreateFile', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2462', '646', 'CreateSemaphore', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2463', '647', 'T', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2464', '647', 'F', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2465', '648', '负载测试', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2466', '648', '易用性测试', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2467', '648', '强度测试', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2468', '648', '安全测试', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2469', '649', '正式验收测试', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2470', '649', '白盒测试', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2471', '649', 'alpha测试', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2472', '649', 'beta测试', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2473', '650', 'j=r[j].next', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2474', '650', 'j=j+1', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2475', '650', 'j=j-&gt;next', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2476', '650', 'j=r[j]-&gt;next', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2477', '651', 'O(n<sup>2</sup>)', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2478', '651', 'O(n)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2479', '651', 'O(nlogn)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2480', '651', 'O(logn)', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2481', '652', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2482', '652', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2483', '653', '有向图和无向图都可以进行遍历操作', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2484', '653', '基本遍历算法两种：深度遍历和广度遍历', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2485', '653', '图的遍历必须用递归实现', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2486', '653', '图的遍历算法可以执行在有回路的图中', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2487', '654', 'O(n)', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2488', '654', 'O(n log n)', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2489', '654', 'O(n^2)', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2490', '654', 'O(n^3)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2491', '654', 'O(logn)', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2492', '654', '不确定', '0', ' ', 'F');
INSERT INTO `option` VALUES ('2493', '655', '任意两个实体的关键字的组合', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2494', '655', '任意一个实体的关键字', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2495', '655', '各实体的关键字的组合', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2496', '655', '某实体的其它属性', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2497', '656', 'B/S属于C/S，浏览器只是特殊的客户端；', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2498', '656', 'C/S可以使用任何通信协议，而B/S这个特殊的C/S架构规定必须实现HTTP协议；', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2499', '656', 'C/S架构的劣势还有高昂的维护成本且投资大', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2500', '656', 'C/S架构维护和升级方式简单', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2501', '657', '需求分析', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2502', '657', '概要设计', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2503', '657', '详细设计', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2504', '657', '编码', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2505', '658', '对', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2506', '658', '错', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2507', '659', 'DECBA', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2508', '659', 'DCEBA', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2509', '659', 'ECDBA', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2510', '659', 'ABCDE', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2511', '660', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2512', '660', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2513', '661', '都是先进后出', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2514', '661', '都是先进先出', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2515', '661', '没有共同点', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2516', '661', '只允许在端点处插入和删除元素', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2517', '662', '顺序存储结构和链表存储结构', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2518', '662', '散列方式和索引方式', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2519', '662', '链表存储结构和数组', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2520', '662', '线性存储结构和非线性存储结构', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2521', '663', '对', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2522', '663', '错', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2523', '664', 'ABPersonCreate', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2524', '664', 'ABRecordSetValue', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2525', '664', 'ABAddressBookGetPersonWithRecordID', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2526', '664', 'ABAddressBookRemoveRecord', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2527', '665', '+ requestWithURL:', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2528', '665', '– initWithURL:', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2529', '665', '+ requestWithURL:cachePolicy:timeoutInterval:', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2530', '665', '– initWithURL:cachePolicy:timeoutInterval:', '1', ' ', 'D');
INSERT INTO `option` VALUES ('2531', '666', '正态分布具有集中性和对称性', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2532', '666', '正态分布的均值和方差能够决定正态分布的位置和形态', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2533', '666', '正态分布的偏度为0，峰度为1', '1', ' ', 'C');
INSERT INTO `option` VALUES ('2534', '666', '标准正态分布的均值为0，方差为1', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2535', '667', '特征灵活', '0', ' ', 'A');
INSERT INTO `option` VALUES ('2536', '667', '速度快', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2537', '667', '可容纳较多上下文信息', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2538', '667', '全局最优', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2539', '668', 'PDF描述的是连续型随机变量在特定取值区间的概率', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2540', '668', 'CDF是PDF在特定区间上的积分', '0', ' ', 'B');
INSERT INTO `option` VALUES ('2541', '668', 'PMF描述的是离散型随机变量在特定取值点的概率', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2542', '668', '有一个分布的CDF函数H(x),则H(a)等于P(X&lt;=a)', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2543', '669', 'index+match', '1', ' ', 'A');
INSERT INTO `option` VALUES ('2544', '669', 'vlookup', '1', ' ', 'B');
INSERT INTO `option` VALUES ('2545', '669', 'hlookup', '0', ' ', 'C');
INSERT INTO `option` VALUES ('2546', '669', 'find', '0', ' ', 'D');
INSERT INTO `option` VALUES ('2547', '669', 'if', '0', ' ', 'E');
INSERT INTO `option` VALUES ('2548', '669', 'like', '0', ' ', 'F');

-- ----------------------------
-- Table structure for question
-- ----------------------------
DROP TABLE IF EXISTS `question`;
CREATE TABLE `question` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `face` varchar(2048) NOT NULL,
  `answer` varchar(255) DEFAULT NULL,
  `tid` int(11) NOT NULL,
  `level` int(11) NOT NULL,
  `isRadio` int(11) DEFAULT NULL,
  `uid` int(11) DEFAULT NULL,
  `isPublic` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_type` (`tid`),
  KEY `uid` (`uid`),
  CONSTRAINT `question_ibfk_1` FOREIGN KEY (`uid`) REFERENCES `user` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=672 DEFAULT CHARSET=gb2312;

-- ----------------------------
-- Records of question
-- ----------------------------
INSERT INTO `question` VALUES ('18', '图的BFS生成树的树高比DFS生成树的树高() \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('19', '设某种二叉树有如下特点：每个结点要么是叶子结点，要么有2棵子树。假如一棵这样的二叉树中有m（m&gt;0）个叶子结点，那么该二叉树上的结点总数为（ ）。 \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('20', '一棵具有n个结点的完全二叉树的树高(深度)是() \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('21', '任何二叉树的后序线索树进行后序遍历时都必须用栈() \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('22', '依次把结点的关键字的值为50,30,20,150,130,40,80,70,85,15的记录插入到初始化为空的平衡二叉排序树中,在插入过程中平衡树条件如被破坏,则进行必要的调整,得到的平衡二叉排序树的深度为() \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('24', '堆肯定是一棵平衡二叉树() \n', null, '586', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('25', '在用堆排序算法排序时,如果要进行增序排序,则需要采用\"大根堆\"() \n', null, '586', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('26', '下述二叉树中,哪一种满足性质:从任一结点出发到根的路径上所经过的结点序列按其关键字有序() \n', null, '586', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('27', '下列数据中,()是非线性数据结构 \n', null, '586', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('28', '对于根元素为最小值的二叉堆，下面说法正确的是 \n', null, '586', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('29', '队列在程序调用时必不可少,因此递归离不开队列() \n', null, '582', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('30', '下列哪些不是线性表？ \n', null, '582', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('31', '<p> 若有以下程序 </p> \n<pre class=\"prettyprint\">#include&lt;stdio.h&gt;\nmain(&nbsp;)\n{&nbsp;\n    int&nbsp;a=-2,b=0;\n&nbsp;   while(a++)&nbsp;++b;\n&nbsp;   printf(\"%d,%d\\n\",a,b);\n}</pre> \n<p> 则程序的输出结果是? </p> \n', null, '569', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('32', '在小端序的机器中,如果 \n<br> \n<pre class=\"prettyprint lang-cpp\">union X{\n	int x;\n	char y[4]; \n};</pre> 如果:\n<br> X a;\n<br> a.x=0x11223344;//16 进制 则:______\n<br> \n', null, '569', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('33', '<div>\n  某函数申明如下： \n</div> \n<pre class=\"prettyprint lang-cpp\">void Func(int &amp;nVal1);</pre> \n<div>\n  有int a,下面使用正确的为： \n</div> \n', null, '569', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('34', '下列哪一个关键码序列不符合堆的定义？ \n', null, '586', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('35', '对n个记录的文件进行堆排序,最坏情况下的执行时间是多少?() \n', null, '586', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('36', '初始序列为1&nbsp;8&nbsp;6&nbsp;2&nbsp;5&nbsp;4&nbsp;7&nbsp;3一组数采用堆排序，当建堆（小根堆）完毕时，堆所对应的二叉树中序遍历序列为：（） \n', null, '586', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('37', '一组记录排序码为(5 11 7 2 3 17),则利用堆排序方法建立的初始堆为 \n', null, '586', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('38', '线程调用了sleep（）方法后，该线程将进入（ ）状态。 \n', null, '607', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('39', '下列各种操作的时间中，哪一个不属于活动头硬盘的存取访问时间？ \n', null, '607', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('40', '任何无向图都存在生成树() \n', null, '583', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('41', '对二叉树的结点从1开始进行连续编号,要求每个结点的编号大于其左、右孩子的编号,在同一结点的左、右孩子中,其左孩子的编号小于其右孩子的编号,可采用()次序的遍历实现编号 \n', null, '583', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('42', '一个有n个结点的连通图的生成树是原图的最小连通子图，且包含原图中所有n个结点，并且有保持图联通的最少的边。最大生成树就是权和最大生成树，现在给出一个无向带权图的邻接矩阵，权为0表示没有边。｛{0，4，5，0，3}，{4，0，4，2，3}，{5，4，0，2，0}，{0，2，2，0，1}，{3，3，0，1，0}｝，求这个图的最大生成树的权和。 \n', null, '583', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('43', '关键路径是AOE网中() \n', null, '598', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('44', '下列关于线性表，二叉平衡树，哈希表存储数据的优劣描述错误的是？ \n', null, '598', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('45', '一棵哈夫曼树共有215个结点,对其进行哈夫曼编码,共能得到()个不同的码字 \n', null, '598', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('46', '某段文本中各个字母出现的频率分别是{a:4，b:3，o:12，h:7，i:10}，使用哈夫曼编码，则哪种是可能的编码：（） \n', null, '598', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('47', '下述编码中哪一个不是前缀码() \n', null, '598', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('48', '一棵哈夫曼树的带权路径长度等于其中所有分支结点的权值之和() \n', null, '598', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('49', '哈夫曼树无左右子树之分() \n', null, '598', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('50', '以链接方式存储的线性表（X1、X2、...、Xn），当访问第i个元素的时间复杂度为（） \n', null, '598', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('51', '()的遍历仍需要栈的支持 \n', null, '598', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('52', '下面有关P问题，NP问题和NPC问题，说法错误的是 \n', null, '598', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('53', '_______意味着一个操作在不同的类中可以有不同的实现方式。 \n', null, '570', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('54', '<div>\n  下列 java 程序输出结果为______。 \n</div> \n<pre class=\"prettyprint lang-java\">int i=0;\nInteger j = new Integer(0);\nSystem.out.println(i==j);\nSystem.out.println(j.equals(i));</pre> \n', null, '570', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('55', '下面有关SPRING的事务传播特性，说法错误的是？ \n', null, '570', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('56', 'ng-style是做什么用的？ \n', null, '571', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('57', 'anglularjs中指令中的link参数是什么时候运行的？ \n', null, '571', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('58', 'angularjs1指令中compile主要是做什么用的？ \n', null, '571', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('59', '(101,88,46,70,34,39,45,58,66,10)是堆() \n', null, '586', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('60', '最坏情况下 insert sort, quick sort ,merge sort 的复杂度分别是多少？ \n', null, '586', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('61', '有一组数据(15,9,7,8,20,-1,7,4),用堆排序的筛选方法建立的初始堆为() \n', null, '586', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('62', '下标从1开始,在含有n个关键字的小根堆(堆顶元素最小)中,关键字最大的记录有可能存储在()位置上 \n', null, '586', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('63', '输入若已经是排好序的，下列排序算法最快的是（） \n', null, '597', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('64', '麦秋时节，庄园主雇了个力大无穷的农民来帮他收割田里的麦子。收获的劳动量很大，农民必须在七天之内收割完。庄园主答应每天给他一块金块作工钱。但是这七块相等的金子是连在一起的，然而工钱是必须每天结清的。农民不愿意庄园主欠帐，而庄园主也不肯预付一天工钱。请问最少掰金子几次可以完成上述任务？\n<br> \n', null, '597', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('65', '模态视图是在导航过程中，有的时候需要放弃主要任务转而做其他次要任务，完成次要任务之后要再回到主要任务，这个“次要任务”就是在“模态视图”中完成的。 \n', null, '616', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('66', 'NSURLConnectionDelegate协议中的 connection:didFailWithError:是加载数据出现异常。\n<br> \n', null, '616', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('67', 'NSURL的构造函数有？\n<br> \n', null, '616', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('68', 'AddressBookUI框架中的视图控制器？\n<br> \n', null, '616', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('69', 'iOS单元测试框架有哪些？ \n', null, '616', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('70', '平面内有11个点，由它们连成48条不同的直线，由这些点可连成多少个三角形？ \n', null, '600', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('71', 'How many rectangles you can find from 3*4 grid?\n<br> \n', null, '600', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('72', '有10颗糖，如果每天至少吃一颗（多不限），吃完为止，问有多少种不同的吃法？（） \n', null, '600', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('73', '由数字5,6,7,9可以组成多少个没有重复数字的三位数? \n', null, '600', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('74', '<div>\n  在如下8*6的矩阵中，请计算从A移动到B一共有____种走法。要求每次只能向上或向右移动一格，并且不能经过P。 \n</div> \n<div> \n <img alt=\"\" src=\"http://uploadfiles.nowcoder.com/images/20150824/59_1440346791982_E4E8153C7705D39530150A8FECB923AE\"> \n <br> \n</div> \n', null, '600', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('75', '对于Linux说法，下列说法正确的是（） \n', null, '618', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('76', '下面选项关于linux下查看cpu,内存,swap,硬盘信息的命令描述错误的是？ \n', null, '618', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('77', 'Linux命令行下如何查找列出/usr/local这个目录下所有包含字符mrtg的文件? \n', null, '618', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('78', '定义bash环境的用户文件是？ \n', null, '618', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('79', '下述是Linux下多线程编程常用的pthread库提供的函数名和意义，说法正确的有？ \n', null, '618', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('80', 'To speed up data access , we build cache system. In one system , The L1 cache access time is 5 ns , the L2 cache access time is 50 ns and the memory access time is 400 ns. The L1 cache miss rate is 50% , the L2 cache miss rate is 10%. The average data access time of this system is: \n', null, '610', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('81', '<div>\n  三个程序a,b,c,它们使用同一个设备进行I/O操作，并按a,b,c的优先级执行(a优先级最高，c最低).这三个程序的计算和I/O时间如下图所示。假设调度的时间可忽略。则在单道程序环境和多道程序环境下(假设内存中可同时装入这三个程序，系统采用不可抢占的调度策略).运行总时间分别为()&nbsp; \n</div> \n<div> \n <div>\n   计算 I/O 计算 \n </div> \n <div>\n   a &nbsp; 30 &nbsp; 40 &nbsp;10 \n </div> \n <div>\n   b &nbsp; 60 &nbsp; 30 &nbsp;10 \n </div> \n <div>\n   c &nbsp; 20 &nbsp; 40 &nbsp;20 \n </div> \n</div> \n', null, '610', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('82', '32位/33MHzPCI总线的峰值带宽是多少? \n', null, '610', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('83', '如果计算机内存大小为32M，按字节编码，则表示该内存地址至少需要()位? \n', null, '610', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('84', '<div>\n  32位机器上定义如下结构体： \n</div> struct xx\n<br> {\n<br> &nbsp; &nbsp; long long _x1;\n<br> &nbsp; &nbsp; char _x2;\n<br> &nbsp; &nbsp; int _x3;\n<br> &nbsp; &nbsp; char _x4[2];\n<br> &nbsp; &nbsp; static int _x5;\n<br> };\n<br> int xx::_x5;\n<br> \n<br> \n<pre class=\"prettyprint\">请问sizeof(xx)的大小是()</pre> \n<br> \n', null, '610', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('85', '关闭linux系统（不重新启动）可使用命令。 \n', null, '618', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('86', '在使用mkdir命令创建新的目录时，在其父目录不存在时先创建父目录的选项是 。\n<br> \n', null, '618', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('87', '下面有关孤儿进程和僵尸进程的描述，说法错误的是？ \n', null, '618', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('88', '在Linux中,file.sh文件的权限为-rw-r--r-x,其对应权限用数值形式表示为() \n', null, '618', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('89', '运行在多核处理器上的Linux环境中,若临界区非常短,且不允许线程上下文切换的情况下,使用下列哪种机制满足上述需求并且性能最好? \n', null, '618', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('90', '（）不能用于Linux中的进程通信 \n', null, '618', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('91', '在UNIX系统中，目录结构采用（ ） \n', null, '618', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('92', '在linux系统中,有一个文件夹里面有若干文件,通常用哪个命令可以获取这个文件夹的大小: \n', null, '618', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('93', '以下属于网络操作系统的是？ \n', null, '618', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('94', '下面有关bash配置文件，说法正确的是？&nbsp; \n', null, '618', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('95', '接口中的成员不可以有访问域修饰符，但可以有其它修饰符。 \n', null, '572', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('96', '在C#中，接口可以被多重继承而类不能。 \n', null, '572', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('97', '<div>\n  对下述代码错误描述正确的是( ) \n</div> \n<pre class=\"prettyprint lang-cs\">NSTimer *myTimer = [NSTimer timerWithTimeInterval:1.0 target:self selector:@selector(doSomeThing:) userInfo:nil repeats:YES];&nbsp;\n[myTimer fire]</pre> \n', null, '572', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('98', '在C#中利用Socket进行网络通信编程的一般步骤是：建立Socket侦听、（ ）、利用Socket接收和发送数据。 \n', null, '572', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('99', '面向对象的三个基本元素是什么？ \n', null, '572', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('100', '有一个元素，需要在打印时隐藏，使用的类是 \n', null, '574', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('101', '网页开发中，一般需判断浏览器类型，需通过userAgent中获取浏览器内核来判断，下列说法错误的是？ \n', null, '574', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('102', 'img标签中src属性表示 \n', null, '574', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('103', '用于预格式化文本的标签是 \n', null, '574', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('104', 'head标签中必不少的是 \n', null, '574', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('105', '若希望当A的值为奇数时，表达式的值为“真”，A的值为偶数 表达式的值为“假”。则以下不能满足要求的表达式是： \n', null, '609', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('106', '以下选项中循环结构合法的是: \n', null, '609', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('107', '<div>\n  如下代码输出结果是什么？ \n</div> \n<pre class=\"prettyprint\">#include&lt;stdio.h&gt;\nchar *myString()\n{\n&nbsp; &nbsp; char buffer[6] = {0};\n&nbsp; &nbsp; char *s = \"Hello World!\";\n&nbsp; &nbsp; for (int i = 0; i &lt; sizeof(buffer) - 1; i++)\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; buffer[i] = *(s + i);\n&nbsp; &nbsp; }\n&nbsp; &nbsp; return buffer;\n}\nint main(int argc, char **argv)\n{\n&nbsp; &nbsp; printf(\"%s\\n\", myString());\n&nbsp; &nbsp; return 0;\n}</pre> \n', null, '609', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('108', '<div>\n  在目标识别中，假定类型1为敌方目标，类型2为诱饵（假目标），已知先验概率P(1)=0.2和P(2)=0.8，类概率密度函数如下：则总错误概率为P(e)为 \n</div> \n<div> \n <img alt=\"\" src=\"http://uploadfiles.nowcoder.com/images/20151102/59_1446429647505_0E1319F4F053FD820D16C728F6E0C029\"> \n <br> \n</div> \n', null, '609', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('109', '在小端序的机器中，如果\n<br> \n<pre class=\"prettyprint\">union X\n{\n&nbsp; &nbsp; int x;\n&nbsp; &nbsp; char y[4];\n};\n</pre> 如果\n<br> X a;\n<br> a.x=0x11223344;//16进制\n<br> 则：（）\n<br> \n', null, '609', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('110', '若以{4,5,6,7,8}作为叶子结点的权值构造哈夫曼树，则其带权路径长度是（）。 \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('111', '（）二叉排序树可以得到一个从小到大的有序序列。 \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('112', '一个二叉树,前序遍历结果是:a b d g c e f h;中序遍历结果是:d g b a e c f h 求后序遍历结果是: \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('113', '在深度为6的满二叉树中，共有多少个结点（） \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('114', '在深度为5的满二叉树中，结点的个数为多少个？ \n', null, '583', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('115', '有如下一段代码:\n<br> \n<pre class=\"prettyprint\">#define ADD(x,y) x+y\nint m=3;\nm+=m*ADD(m,m);&nbsp;</pre> 则m的值为: \n<br> \n', null, '609', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('116', '一个8位的二进制整数，采用补码表示，且由3个“1”和5个“0”组成，则最小值为多少？ \n', null, '609', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('117', '在网络传输数据时，经常需要将二进制数据转换为一个可打印字符串。一般用到的可打印字符集合包含64个字符，因此又称为Base64表示法。现有一个char数组长度为12，要将它表示为Base64字符串，请问Base64字符串最少需要____个char；如果char数组长度为20，则需要____个char。 \n', null, '609', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('118', '根据数据结构中各数据元素之间前后关系的复杂程度，一般将数据结构分为哪些？ \n', null, '609', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('119', '下面哪项不是链表优于数组的特点? \n', null, '578', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('120', '取顺序表的第i个元素的时间同i的大小有关() \n', null, '578', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('121', '广义表的取表尾运算,其结果通常是个表,但有时也可是个单元素值() \n', null, '578', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('122', '数组不适合作为任何二叉树的存储结构() \n', null, '578', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('123', '下面描述中正确的为? \n', null, '578', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('124', '原生类中的数据类型均可任意转换。 \n', null, '570', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('125', '下列哪个选项是正确计算42度（角度）的余弦值？\n<br> \n', null, '570', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('126', '<div>\n  假设有以下代码 \n</div> \n<pre class=\"prettyprint\">&nbsp; &nbsp; String s = \"hello\";\n&nbsp; &nbsp; String t = \"hello\";\n&nbsp; &nbsp; char c[] = {\'h\', \'e\', \'l\', \'l\', \'o\'};\n</pre> \n<div>\n  下列选项中返回false的语句是： \n</div> \n', null, '570', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('127', 'java中，StringBuilder和StringBuffer的区别，下面说法错误的是？ \n', null, '570', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('128', 'String str = new String(“abc”)，“abc”在内存中是怎么分配的？ \n', null, '570', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('129', '以下关于多线程的叙述错误的是： \n', null, '636', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('130', '<div>\n  假设如下代码中，若t1线程在t2线程启动之前已经完成启动。代码的输出是（） \n</div> \n<pre class=\"prettyprint\">public static void main(String[]args)throws Exception {\n&nbsp; &nbsp; final Object obj = new Object();\n&nbsp; &nbsp; Thread t1 = new Thread() {\n&nbsp; &nbsp; &nbsp; &nbsp; public void run() {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; synchronized (obj) {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; obj.wait();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(\"Thread 1 wake up.\");\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (interruptedException e) {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; };\n&nbsp; &nbsp; t1.start();\n&nbsp; &nbsp; Thread.sleep(1000);//We assume thread 1 must start up within 1 sec.\n&nbsp; &nbsp; Thread t2 = new Thread() {\n&nbsp; &nbsp; &nbsp; &nbsp; public void run() {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; synchronized (obj) {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; obj.notifyAll();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(\"Thread 2 sent notify.\");\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; };\n&nbsp; &nbsp; t2.start();\n}\n</pre> \n<br> \n', null, '636', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('131', '若系统中有五台绘图仪，有多个进程均需要使用两台，规定每个进程一次仅允许申请一台，则至多允许（ ）个进程参于竞争，而不会发生死锁。 \n', null, '636', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('132', '产生系统死锁的原因是由于（） \n', null, '636', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('133', 'java中HashTable, Vector, TreeSet, LinkedList哪些线程是安全的？ \n', null, '636', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('134', '位于用户和操作系统之间的一层数据管理软件指的是？ \n', null, '609', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('135', '13*16=244 在使用（ ）进制时成立 \n', null, '609', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('136', '程序出错在什么阶段（）?\n<br> \n<pre class=\"prettyprint\">int main(void)\n{\n&nbsp; &nbsp; http://www.taobao.com\n&nbsp; &nbsp; cout &lt;&lt; \"welcome to taobao\" &lt;&lt; endl;\n    return 0;\n}\n</pre> \n<br> \n', null, '609', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('137', '有四个整数a、b、c、d，且c &gt; d，则“a &gt; b”是“a - c &gt; b - d”的：（） \n', null, '609', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('138', '给定下列程序，那么执行printf(\"%d\\n\", foo(20, 13));的输出结果是________。\n<br> \n<pre class=\"prettyprint lang-js\">int foo(int x, int y){\n    if (x &lt;= 0 || y &lt;= 0) \n        return 1; \n    return 3 * foo( x-6, y/2 ); \n}</pre> \n<p> <br> </p> \n', null, '609', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('139', '有关二叉树下列说法正确的是() \n', null, '583', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('140', '引入二叉线索树的目的是() \n', null, '583', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('141', '完全二叉树共有700结点，该二叉树有多少个叶子结点？ \n', null, '583', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('142', 'n个结点的线索二叉树上含有的线索数为() \n', null, '583', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('143', '设X是树T中的一个非根结点,B是T所对应的二叉树,在B中,X是其双亲的右孩子,下列结论正确的是() \n', null, '583', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('144', '<p class=\"p1\"> 下面哪一项对<span class=\"s1\">Servlet</span>描述错误？ </p> \n', null, '637', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('145', '下面有关spring框架模块的描述，说法错误的是？ \n', null, '637', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('146', '下面关于\n<span style=\"color: rgb(51,51,51);\">spring mvc</span> 和struts2的描述，错误的是？ \n', null, '637', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('147', '<span>Spring框架中的核心思想包括什么？</span> \n', null, '637', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('148', '带权的连通无向图的最小代价生成树是唯一的() \n', null, '584', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('149', '一个n个顶点的连通无向图，其边的个数至少为___。 \n', null, '584', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('150', 'G是一个邻接表，以V1为起点，深度优先遍历序列V1-V2-V3-V6-V5-V4，从V1开始的广度优先遍历序列是()\n<br> \n<img alt=\"\" src=\"http://uploadfiles.nowcoder.com/files/20141010/787_1412935757110_12.bmp\"> \n', null, '584', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('151', '<div>\n  设图G的相邻矩阵如下图：则G的顶点数和边数分别为： \n</div> \n<blockquote> \n <div>\n   0 1 1 1 1 \n </div> \n <div>\n   1 0 1 0 0 \n </div> \n <div>\n   1 1 0 1 1 \n </div> \n <div>\n   1 0 1 0 1 \n </div> \n <div>\n   1 0 1 1 0 \n </div> \n</blockquote> \n', null, '584', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('152', '设有6个结点的无向图，该图至少应有（）条边，才能确保是一个连通图？ \n', null, '584', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('153', '书架上有编号为1-19的19本书，从中拿5本，问5本编号都不相邻的拿法有多少种？ \n', null, '600', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('154', '假设把整数关键字K Hash到有N个槽的散列表，以下哪些散列函数比较合适（） \n', null, '600', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('155', '每份考卷都有一个8位二进制序列号。当且仅当一个序列号含有偶数个1时，它才是有效的。例如，00000000、01010011都是有效的序列号，而11111110不是。那么，有效的序列号共有（） 个 \n', null, '600', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('156', '村长带着4对父子参加爸爸去哪儿第三季第二站某村庄的拍摄。村里为了保护小孩不被拐走有个前年的规矩，那就是吃饭时候小孩左右只能是其他小孩或自己的父母，那么4对父子在圆桌上共有多少种坐法。(旋转一下，每个人面对方向变更后算是一种新的坐法) \n', null, '600', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('157', '设A、B、C为任意集合，下面的命题为真的是____ \n', null, '600', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('158', '下列哪个不属于CRF模型对于HMM和MEMM模型的优势（ ） \n', null, '631', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('159', '下列哪个不属于常用的文本分类的特征选择算法？ \n', null, '631', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('160', '<div>\n  以下几种模型方法属于判别式模型的有 \n</div> \n<blockquote> \n <div>\n   1)混合高斯模型 \n </div> \n <div>\n   2)条件随机场模型 \n </div> \n <div>\n   3)区分度训练 \n </div> \n <div>\n   4)隐马尔科夫模型 \n </div> \n</blockquote> \n', null, '631', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('161', '在()情况下,用分支定界法做特征选择计算量相对较少? \n', null, '631', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('162', '在统计模式识分类问题中，当先验概率未知时，可以使用()? \n', null, '631', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('163', '<div>\n  经过强制类型转换以后，变量a，b的值分别为多少？ \n</div> \n<pre class=\"prettyprint\">short a =128；\nbyte b =(byte) a；</pre> \n<br> \n', null, '570', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('164', '<span style=\"color:#444444;font-family:宋体;font-size:16px;line-height:24px;background-color:#FFFFFF;\">多个线程可同时操作一个数据，为了保证该数据的准确性，可将操作该数据的部分改为</span>\n<span style=\"background-color:#FFFFFF;\">()</span> \n', null, '570', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('165', '<pre class=\"prettyprint\">void waitForSignal()\n{\n&nbsp; &nbsp; Object obj = new Object();\n&nbsp; &nbsp; synchronized(Thread.currentThread())\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; obj.wait();\n&nbsp; &nbsp; &nbsp; &nbsp; obj.notify();\n&nbsp; &nbsp; }\n}\n</pre> \n<div>\n  Which&nbsp;statement&nbsp;is&nbsp;true? \n</div> \n<br> \n', null, '570', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('166', 'JAVA反射机制主要提供了以下哪些功能？\n<br> \n', null, '570', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('167', '2个空瓶换1瓶水，1元钱买1瓶水，20元钱一共能够喝多少瓶水？（可以朝老板借水或者瓶子） \n', null, '602', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('168', '有人养了一些兔子。别人问他有多少只雌兔？多少只雄兔？他答，在他所养的兔子中，每一只雄兔的雌性同伴比它的雄性同伴少一只；而一只雌兔的雄性同伴比它的雌性同伴的两倍少两只。\n<span class=\"apple-converted-space\"></span> \n<br> 根据上述回答，可以判断它养了多少只雌兔？多少只雄兔？（&nbsp;&nbsp;&nbsp;&nbsp;） \n', null, '602', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('169', '-1,2,7,28,,126请问28和126中间那个数是什么？ \n', null, '602', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('170', '有一种玻璃球，需要测试它的强度，方法是通过高空坠落的方式进行（大于承载高度玻璃球会摔碎）。假设玻璃球的强度在（1,100）的楼层之间，给你2个小球，请问至少（）次才能测量准确，这种情况下优先尝试的楼层是第（）层？ \n', null, '602', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('171', '<div>\n  如下图所示，8个边长分别为1、2、3单位的小等边三角形覆盖了边长为5单位的大等边三角形的一部分，那么，大三角形中深灰色部分的面积和小三角形中浅灰色部分的面积哪个大？ \n</div> \n<div> \n <img src=\"http://uploadfiles.nowcoder.com/images/20141024/104_1414153755209_图片3.png\" alt=\"\">\n <br> \n</div> \n', null, '602', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('172', '将线性表中的结点信息组织成平衡的二叉树,其优点之一是总能保证任意检索长度均为log\n<sub>2</sub>n量级(n为线性表中的结点数目)() \n', null, '589', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('173', '对有序数组{2、11、15、19、30、32、61、72、88、90、96}进行二分查找，则成功找到15需比较（）次 \n', null, '589', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('174', '在ASC算法team日常开发中，常常面临一些数据结构的抉择，令人纠结。目前大家在策划一个FBI项目（Fast Binary Indexing），其中用到的词汇有6200条，词汇长度在10-15之间，词汇字符是英文字母，区分大小写。请在下面几个数据结构中选择一个使检索速度最快的： \n', null, '589', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('175', '关于红黑树和AVL树，以下哪种说法不正确？ \n', null, '589', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('176', '<div>\n  下面是折半查找的实现，data是按升序排列的数据，x是查找下标，y是查找的上标， \n</div> \n<div>\n  v是查找的数值，返回v在data的索引，若没找到返回-1。代码不正确是____。 \n</div> \n<pre class=\"prettyprint lang-cpp\">public int bsearch(int[] data, int x, int y, int v) {\n&nbsp; &nbsp; int m;\n&nbsp; &nbsp; while(x&lt;y){ //1\n&nbsp; &nbsp; &nbsp; &nbsp; m = x + (y-x)/2; //2\n&nbsp; &nbsp; &nbsp; &nbsp; if(data[m] == v) return m; //3\n&nbsp; &nbsp; &nbsp; &nbsp; else if(data[m] &gt; v) y = m; //4\n&nbsp; &nbsp; &nbsp; &nbsp; else x = m; //5\n&nbsp; &nbsp; }\n&nbsp; &nbsp; return -1; //6\n}</pre> \n', null, '589', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('177', '对于一个头指针为head的带头结点的单链表,判定该表为空表的条件是() \n', null, '580', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('178', '以下属于逻辑结构的是() \n', null, '580', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('179', '广义表的同级元素(直属于同一个表中的各元素)具有线性关系() \n', null, '580', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('180', '以下数据结构属于非线性数据结构的是 \n', null, '580', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('181', '用链表(llink-rlink)存储包含n个结点的二叉树,结点的2n个指针区域中有n-1个空指针() \n', null, '580', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('182', '如果在一个建立了TCP连接的socket上调用recv函数，返回值为0，则表示（） \n', null, '604', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('183', '有关路由器和二层交换机的区别，下述错误的是？ \n', null, '604', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('184', 'N个节点完全互联的网型网需要的传输电路数为。 \n', null, '604', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('185', '下面哪个协议被用来找到本地设备的硬件地址（） \n', null, '604', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('186', 'time_wait是什么，什么情况会发生，有什么好处和坏处，选则下列描述正确的是？ \n', null, '604', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('187', '下列哪一种图的邻接矩阵是对称矩阵?() \n', null, '584', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('188', '对一个AOV网,从源点到终点的路径最长的路径称作关键路径() \n', null, '584', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('189', 'n个顶点的无向图的邻接表最多有()个边表结点 \n', null, '584', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('190', '已知有向图G=(V,E),其中V={V\n<sub>1</sub>,V\n<sub>2</sub>,V\n<sub>3</sub>,V\n<sub>4</sub>,V\n<sub>5</sub>,V\n<sub>6</sub>,V\n<sub>7</sub>},E={(V\n<sub>1</sub>,V\n<sub>2</sub>),(V\n<sub>1</sub>,V\n<sub>3</sub>),(V\n<sub>1</sub>,V\n<sub>4</sub>),(V\n<sub>2</sub>,V\n<sub>5</sub>),(V\n<sub>3</sub>,V\n<sub>5</sub>),(V\n<sub>3</sub>,V\n<sub>6</sub>),(V\n<sub>4</sub>,V\n<sub>6</sub>),(V\n<sub>5</sub>,V\n<sub>7</sub>),(V\n<sub>6</sub>,V\n<sub>7</sub>)},G的拓扑序列是() \n', null, '584', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('191', '在工程网络计划中，工作 M 的最早开始时间为第 16 天，其持续时间为 5 天。该工作有三项紧后工作，他们的最早开始时间分别为第 25 天、第 27 天和第 30 天，最迟开始时间分别为第 28 天、第 29 天和第 30 天。则工作 M 的总时差为（）天。 \n', null, '584', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('192', '一个递归算法必须包括() \n', null, '591', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('193', '以下程序是用来计算两个非负数之间的最大公约数： \n<pre class=\"prettyprint lang-js\">long long gcd(long long x, long long y) { \n    if (y == 0) \n        return x; \n    else \n        return gcd(y, x % y); \n}</pre> 我们假设x,y中最大的那个数的长度为n，基本运算时间复杂度为O(1)，那么该程序的时间复杂度为()： \n', null, '591', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('194', 'int main(){fork()||fork();}共创建几个进程：_____ \n', null, '591', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('195', '采用递归方式对顺序表进行快速排序，下列关于递归次数的叙述中，正确的是（） \n', null, '591', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('196', '下列有关图的说法错误的是() \n', null, '598', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('197', '下列关于AOE网的叙述中,不正确的是() \n', null, '598', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('198', '事务的持续性是指？ \n', null, '606', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('199', 'SQL语言的关键字包括SELECT、INSERT、UPDATE、DELETE等。其中最重要的，也是使用最频繁的关键字是（） 。 \n', null, '606', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('200', '下面有关数据ACID性质说法正确的是？ \n', null, '606', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('201', '下面有关事务隔离级别说法正确的是？ \n', null, '606', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('202', '分布式事务处理的特性包括哪些() \n', null, '606', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('203', '甲盒中有 200 个螺杆，其中有 160 个 A 型螺杆；乙盒中有 240 个螺母，其中有 180 个 A 型的。现从甲乙两盒中各任取一个，则能配成 A 型螺栓的概率为多少? \n', null, '601', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('204', '在一条高速公路上，20分钟内见到车通过的概率是84%。问10分钟内见到车通过的概率是多少。 \n', null, '601', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('205', '所有人口中，某癌症的患病率为0.008。对有癌症的病人，医院的化验测试有2%的可能错判其无癌症。对无癌症的病人，有3%的可能错判其有癌症。问：现有一新病人，化验测试表明其有癌症，该病人实际患有癌症的概率是多少？（计算过程四舍五入保留4位小数） \n', null, '601', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('206', '假设x1和x2是两个以0为均值,1为标准差的正态分布,那么x1+x2的概率密度分布是()? \n', null, '601', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('207', '若AB为任意两个随机事件，则（） \n', null, '601', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('209', '关于HashMap与HashTbale，以下说法错误的是（） \n', null, '570', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('210', '以下哪项不属于java类加载过程？ \n', null, '570', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('211', '<div>\n  下面代码运行结果是（） \n</div> \n<pre class=\"prettyprint lang-java\">public class Test{	\n&nbsp;&nbsp;&nbsp;&nbsp;public int add(int a,int b){	\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {	\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a+b;		\n         }&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch (Exception e) {	\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"catch语句块\");	\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}	\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;finally{	\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"finally语句块\");	\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}	\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;	\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public static void main(String argv[]){&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Test test =new Test();&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"和是：\"+test.add(9, 34));&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n}</pre> \n<br> \n', null, '570', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('212', '类B从类A派生，则类B可以访问类A中的（ ）成员？\n<br> \n', null, '570', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('213', '关于ThreadLocal以下说法正确的是 \n', null, '570', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('214', '单元测试能发现约80%的软件缺陷。请判断这句话的正确与否。 \n', null, '613', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('215', '如果我们可以通过覆盖率检测来判断我们是否对所有的路径都进行了测试，但是仍然可能存在未被检测出来的缺陷，原因是（） \n', null, '613', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('216', '有关\"测试驱动开发\"，下列说法正确的有？ \n', null, '613', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('217', '下面哪些测试属于黑盒测试方法（） \n', null, '613', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('218', '下列关于alpha 测试的描述中正确的是哪些？ \n', null, '613', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('219', '<pre class=\"prettyprint lang-cpp\">判断下述语句的对错：MFC中CString是类型安全的类。</pre> \n<br> \n', null, '579', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('220', '字符串通常采用的两种存储方式是？ \n', null, '579', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('221', '下列数据结构不是多型数据类型的是（） \n', null, '579', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('222', '字符串′ababaabab′的nextval为() \n', null, '579', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('223', '有如下语句序列：\n<br> char str[10]；cin&gt;&gt;str；\n<br> 当从键盘输入”I love this game”时，str中的字符串是\n<br> \n<!--[if !supportLineBreakNewLine]-->\n<br> \n<!--[endif]--> \n', null, '579', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('224', '软件设计的主要任务是设计软件的结构、过程和模块，其中软件结构设计的主要任务是要确定什么？ \n', null, '612', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('225', '在面向数据流的设计方法中，一般把数据流图中的数据划分为以下哪两种。 \n', null, '612', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('226', '（）设计模式将抽象部分与它的实现部分相分离。 \n', null, '612', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('227', '下列关于静态工厂和工厂方法表述错误的是：（） \n', null, '612', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('228', '从前有座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是……描述的是() \n', null, '591', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('229', 'How many times is f() called when calculating f(10)? \n<pre class=\"prettyprint lang-js\">int f(int x) { \n    if(x &lt;= 2) \n        return 1; \n    return f(x - 2) + f(x - 4) + 1; \n}</pre> \n', null, '591', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('230', '下列方法中，____不可以用来程序调优？ \n', null, '591', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('231', '设有递归算法如下，\n<br> \n<pre class=\"prettyprint\">int x(int n)\n{\n if(n&lt;=3)\n     return 1;\n else\n     return x(n-2)+x(n-4)+1;\n}</pre> 试问计算x(x(8))时需要计算（）次x函数。\n<br> \n', null, '591', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('232', '若查找每个记录的概率均等,则在具有n个记录的连续顺序文件中采用顺序查找法查找一个记录,其平均查找长度ASL为() \n', null, '589', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('233', '能用二分法进行查找的是 \n', null, '589', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('234', '使用KMP算法在文本串S中找模式串P是一种常见的方法。假设S=P={xyxyyxxyx}，亦即将S对自己进行匹配，匹配过程中正确的next数组是____。 \n', null, '589', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('235', '<div>\n  一个全局变量tally,两个线程并发执行(代码段都是ThreadProc),问两个线程都\n <span>结束后,tally取值范围为_______</span> \n</div> \n<pre class=\"prettyprint lang-cpp\">int tally=0;//全局变量\n&nbsp; void ThreadProc(){\n&nbsp; &nbsp; &nbsp;for(int i=1;i&lt;=50;i++)\n&nbsp; tally+=1;\n}</pre> \n', null, '636', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('236', '<div>\n  假设下面的函数foo会被多线程调用，那么让i、j、k三个变量哪些因为线程间共享访问需要加锁保护.() \n</div> \n<pre class=\"prettyprint lang-cpp\">int i = 0;\nvoid foo()\n{\n	static int j = 0;\n	int k = 0;\n	i++; j++; k++;\n}</pre> \n', null, '636', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('237', '操作系统死锁的必要条件（多选题）：（） \n', null, '636', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('238', '竞选条件(race condition)的情况下，两线程执行如下代码段，其中count为共享变量，线程1执行代码段A，线程2指向代码段B，那么变量count的值可能为\n<br> int count = 10;\n<br> 代码段A：\n<br> \n<pre class=\"prettyprint\">Thread_1()\n{\n&nbsp; &nbsp; //do something\n&nbsp; &nbsp; count++;\n}\n</pre> 代码段B：\n<br> \n<pre class=\"prettyprint\">Thread_2()\n{\n&nbsp; &nbsp; //do something\n&nbsp; &nbsp; count--;\n}\n</pre> \n<br> \n', null, '636', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('239', '印度电影《宝莱坞机器人之恋》中的机器人七弟采用的智能算法最有可能是以下哪一种() \n', null, '631', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('240', '一监狱人脸识别准入系统用来识别待进入人员的身份，此系统一共包括识别4种不同的人员：狱警，小偷，送餐员，其他。下面哪种学习方法最适合此种应用需求：（）。 \n', null, '631', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('241', '类域界面方程法中，不能求线性不可分情况下分类问题近似或精确解的方法是？ \n', null, '631', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('242', '下面有关分类算法的准确率，召回率，F1 值的描述，错误的是？ \n', null, '631', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('243', '以下()属于线性分类器最佳准则? \n', null, '631', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('244', '下列不是SVM核函数的是： \n', null, '630', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('245', '已知中国人的血型分布约为A型：30%，B型：20%，O型：40%，AB型：10%，则任选一批中国人作为用户调研对象，希望他们中至少有一个是B型血的可能性不低于90%，那么最少需要选多少人? \n', null, '630', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('246', '在大规模的语料中，挖掘词的相关性是一个重要的问题。以下哪一个信息不能用于确定两个词的相关性。 \n', null, '630', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('247', '以下对k-means聚类算法解释正确的是 \n', null, '630', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('248', '下列有关k-mean算法说法正确的是() \n', null, '630', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('249', 'float x 与“零值”比较的if语句为？ \n', null, '616', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('250', '下面对category描述不正确的是（） \n', null, '616', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('251', 'NSXMLParser构造方法有哪些？ \n', null, '616', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('252', 'NSURLConnectionDelegate协议中的方法有哪些？ \n', null, '616', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('253', 'iOS中导航设计模式有几种？ \n', null, '616', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('254', '有4副相同的牌,每副牌有4张不同的牌.先从这16张牌中,随机选4张出来.然后,在这4张牌中随机选择一张牌,然后把抽出的一张放回3张中,再随机选择一张牌.与上次选出的牌一样的概率是() \n', null, '601', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('255', '有3个包，每个包里各放了两个球。包A里的球都是白球。包B里的球都是黑球。包C里的球一黑一白。现随机取一个球。发现该球是白色的。那么这个包里剩下的球也是白色的概率是____________。 \n', null, '601', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('256', '硬币游戏：连续扔硬币，直到某一人获胜。A获胜条件是先正后反，B获胜是出现连续两次反面，问AB游戏时A获胜概率是（）？ \n', null, '601', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('257', '袋中有红球、黄球、白球各1个，每次任取一个又放回，如此连续抽取3次，则下列事件中概率是8/9的是？ \n', null, '601', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('258', '两个市区C1和C2，其人口比率是1:3，从今年的患病统计来说，C1市区由于污染严重，患癌的概率是0.1%，而C2市的患癌概率是0.02%，现在医院接收到一位患癌病人，他是C1市区来的概率是____。 \n', null, '601', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('259', '<div>\n  32系统，函数 \n</div> \n<pre class=\"prettyprint\"><span>void Func(char str[100]){}</span></pre> \n<div>\n  中sizeof(str)= \n</div> \n', null, '578', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('260', '<p> 若有以下程序段： </p> \n<p> …… </p> \n<p> int&nbsp;a[]={4,0,2,3,1},i,j,t; </p> \n<p> for(i=1;i&lt;5;i++) </p> \n<p> { </p> \n<p style=\"text-indent: 21.0pt;\"> t=a[i]; </p> \n<p style=\"text-indent: 21.0pt;\"> j=i-1; </p> \n<p style=\"text-indent: 21.0pt;\"> while(j&gt;=0&amp;&amp;t&gt;a[j]) </p> \n<p style=\"text-indent: 21.0pt;\"> { </p> \n<p style=\"margin-left: 21.0pt;text-indent: 21.0pt;\"> a[j+1]=a[j]; </p> \n<p style=\"margin-left: 21.0pt;text-indent: 21.0pt;\"> --j; </p> \n<p style=\"margin-left: 21.0pt;text-indent: 21.0pt;\"> } </p> \n<p style=\"text-indent: 21.0pt;\"> a[j+1]=t; </p> \n<p> } </p> \n<p> …… </p> \n<p> 则该程序段的功能是：&nbsp; &nbsp; &nbsp;&nbsp; </p> \n', null, '578', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('261', '对n个记录的线性表进行快速排序为减少算法的递归深度,以下叙述正确的是() \n', null, '578', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('262', '数组A[0..5,0..6]的每个元素占5个字节,将其按列优先次序存储在起始地址为1000的内存单元中,则元素A[5,5]的地址是() \n', null, '578', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('263', '下列说法正确的是（） \n', null, '578', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('264', '下列攻击方式中，哪种不是针对客户端的？ \n', null, '608', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('265', '以下哪个算法不是对称加密算法() \n', null, '608', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('266', '流量劫持是网络安全中常见的安全威胁，下列哪些情况可能会造成流量劫持?() \n', null, '608', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('267', 'Which of the following can be referred to as attack method(s)? Select all that apply \n', null, '608', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('268', '下面哪些方法可以在应用层中简单的跨进程DLL注入。 \n', null, '608', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('269', '从c++文件到生成exe文件经过哪些步骤？ \n', null, '620', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('270', '判断对错。Windows内存管理和大多数现代操作系统一样，Windows实现按需调页的虚拟内存机制。在32位的Windows计算机上，进程具有4GB的虚拟内存地址空间。 \n', null, '620', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('271', '两个进程加载同一个动态链接库时(windows钟的dll文件或linux中的.so文件),动态链接库的以下哪个资源是两个进程共享的? \n', null, '620', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('272', '如果要实现一个多线程(非MFC)程序, 选择多线程CRT, 创建线程的时候应该用CreateThread还是_beginthreadex()？ \n', null, '620', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('273', '<div>\n  以下关于线程以下描述正确的是（） \n</div> \n<div> \n <div>\n   1.windows线程创建时，默认绑定在1个特定的CPU上 \n </div> \n <div>\n   2.可采用SetThreadAffinityMask接口设置线程与某个cpu绑定 \n </div> \n <div>\n   3._beginthreadex比CreateThread创建线程安全是因为使用_beginthreadex会创建一个_tiddata,在调用一些诸如strtok函数时会将需要保护的数据存入_tiddata \n </div> \n <div>\n   4.使用_beginthread创建线程时，线程执行函数必须为_cdecl约束规范，而_beginthreadex指定的线程执行函数必须为_stdcall \n </div> \n</div> \n', null, '620', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('274', '只有那种使用了局部变量的递归过程在转换成非递归过程时才必须使用栈() \n', null, '591', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('275', '<div>\n  有函数int func(int i)的实现为 \n</div> \n<pre class=\"prettyprint\">int func(int i)\n{\n&nbsp; &nbsp; if (i &gt; 1)\n&nbsp; &nbsp; &nbsp; &nbsp; return i * func(i - 1);\n&nbsp; &nbsp; else\n&nbsp; &nbsp; &nbsp; &nbsp; return 1;\n}\n\n <div>\n	\n\n </div>\n</pre> 请问函数调用func(5)的返回值是多少（） \n', null, '591', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('276', 'Which of the following statements are true? \n', null, '591', '1', '0', '1', '1');
INSERT INTO `question` VALUES ('277', '稀疏矩阵一般的压缩存储方法有两种,即() \n', null, '584', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('278', '邻接矩阵一定为对称矩阵的图是？ \n', null, '584', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('279', '下面哪一方法可以判断出一个有向图是否有环(回路)() \n', null, '584', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('280', '接口是一种引用类型，在接口中可以声明（ ），但不可以声明公有的域或私有的成员变量。 \n', null, '572', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('281', 'C#的数据类型有？\n<br> \n', null, '572', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('282', 'C# 或是 Java 程序段的结果： int[][] array = new int[3][]{ new int[3]{5,6,2}, new int[5]{6,9,7,8,3}, new int[2]{3,2} }; array[2][2] 返回（） \n', null, '572', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('283', '在C#中，int[][]是定义一个int型的二维数组。 \n', null, '572', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('284', '下面哪一个标符可以产生一个水平线？ \n', null, '574', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('285', '现有如下html结构\n<br> \n<pre class=\"prettyprint\">&lt;ul&gt;\n &lt;li&gt;click me&lt;/li&gt;\n &lt;li&gt;click me&lt;/li&gt;\n &lt;li&gt;click me&lt;/li&gt;\n &lt;li&gt;click me&lt;/li&gt;\n&lt;/ul&gt;</pre> 运行如下代码：\n<br> \n<pre class=\"prettyprint\">&nbsp; &nbsp; var elements=document.getElementsByTagName(\'li\');\n &nbsp;&nbsp;&nbsp;var length=elements.length;\n &nbsp;&nbsp;&nbsp;for(var i=0;i&lt;length;i++){\n &nbsp;&nbsp;&nbsp;    elements[i].onclick=function(){\n &nbsp;&nbsp;&nbsp;    alert(i);\n &nbsp;&nbsp;&nbsp;}\n }</pre> 依次点击4个li标签，哪一个选项是正确的运行结果（）?\n<br> \n', null, '574', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('286', '下面有关html5标签说法错误的有？ \n', null, '574', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('287', '在\n<span style=\"color: rgb(51,51,51);\">bootstrap中，</span> 关于导航条，下列说法正确的是? \n', null, '574', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('288', '为了在input两侧添加额外元素，以下说法正确的是\n<br> \n', null, '574', '5', '0', '1', '1');
INSERT INTO `question` VALUES ('289', '采用二叉链表作为存储结构,树的前序遍历和其相应的二叉树的前序遍历的结果是一样的() \n', null, '598', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('290', '集合与线性表的区别在于是否按关键字排序() \n', null, '578', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('291', 'char str[]=”Hello”,sizeof(str)=（） \n', null, '578', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('292', '有一个用数组C[1..m]表示的环形队列，m为数组的长度。假设f为队头元素在数组中的位置，r为队尾元素的后一位置（按顺时针方向）。若队列非空，则计算队列中元素个数的公式应为？ \n', null, '578', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('293', '下列代码的输出为：\n<br> \n<pre class=\"prettyprint lang-js\">#include \"iostream\" &nbsp;\n#include \"vector\" &nbsp;\nusing namespace std; &nbsp;\n&nbsp;&nbsp;\nint main(void) &nbsp;\n{ &nbsp;\n&nbsp; &nbsp; vector&lt;int&gt;array; &nbsp;\n&nbsp; &nbsp; array.push_back(100); &nbsp;\n&nbsp; &nbsp; array.push_back(300); &nbsp;\n&nbsp; &nbsp; array.push_back(300); &nbsp;\n&nbsp; &nbsp; array.push_back(500); &nbsp;\n&nbsp; &nbsp; vector&lt;int&gt;::iterator itor; &nbsp;\n&nbsp; &nbsp; for(itor=array.begin();itor!=array.end();itor++) &nbsp;\n&nbsp; &nbsp; { &nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; if(*itor==300) &nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; { &nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itor = array.erase(itor); &nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; } &nbsp;\n&nbsp; &nbsp; } &nbsp;\n&nbsp; &nbsp; for(itor=array.begin();itor!=array.end();itor++) &nbsp;\n&nbsp; &nbsp; { &nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; cout&lt;&lt;*itor&lt;&lt;\" \"; &nbsp;\n&nbsp; &nbsp; } &nbsp;\n&nbsp; &nbsp; return 0; &nbsp;\n} &nbsp;\n\n</pre> \n', null, '578', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('294', '<div>\n  选项代码中能正确操作数组元素的是() \n</div> \n<pre class=\"prettyprint lang-cpp\">int main(){\n&nbsp; int a[N][N]={{0,0},{0,0}};\n&nbsp; for(int i=0;i&lt;N;i++){\n&nbsp; &nbsp; &nbsp;for(int j=0;j&lt;N;j++){\n&nbsp; &nbsp; &nbsp; &nbsp;//访问二维数组a的值\n&nbsp; &nbsp; &nbsp; &nbsp;//选项代码\n&nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; }\n}</pre> \n', null, '578', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('295', '软件测试的对象包括（ ） \n', null, '613', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('296', '软件测试类型按开发阶段划分是？ \n', null, '613', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('297', '计算一个任意三角形的面积，S=√(p(p-a)(p-b)(p-c)),p=(a+b+c)/2,以下等价类测试用例中，不属于无效等价类的是（） \n', null, '613', '3', '1', '1', '1');
INSERT INTO `question` VALUES ('298', '集成测试的过程包括有以下哪些？ \n', null, '613', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('299', '软件测试计划评审会需要哪些人员参加？ \n', null, '613', '3', '0', '1', '1');
INSERT INTO `question` VALUES ('300', '有 1000 个无序的整数，希望使用最快的方式找出前 50 个最大的，最佳的选择是（ ） \n', null, '586', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('301', '<div>\n  下列关于堆和栈的区别描述错误的有？ \n</div> \n', null, '586', '5', '1', '1', '1');
INSERT INTO `question` VALUES ('302', '在c++程序中，如果一个整型变量频繁使用，最好将他定义为（） \n', null, '569', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('303', '<div>\n  在下列语句中会执行什么操作？ \n</div> \n<div>\n  x == y; \n</div> \n', null, '569', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('304', '<pre class=\"prettyprint lang-cpp\">signed char a=0xe0;\nunsigned int b=a;\nunsigned char c=a;</pre> 下面说法正确的是： \n', null, '569', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('305', '<pre class=\"prettyprint\">int func(int a){\n&nbsp; int b;\n&nbsp; switch(a){\n&nbsp; case 1:b=100;\n&nbsp; case 2:b=200;\n&nbsp; case 3:b=250;\n&nbsp; default:b=0; }\n&nbsp; return b;\n}</pre> func(1)的值是多少？ \n', null, '569', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('306', '<div>\n  对两个字符a和b进行初始化:char a[]=\"ABCDEF\";char b[]={\'A\',\'B\',\'C\',\'D\',\'E\',\'F\'};则以下叙述正确的是： \n</div> \n', null, '569', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('307', '操作系统采用缓冲技术主要是通过硬件来实现的。 \n', null, '607', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('308', '批处理系统不允许用户随时干涉自己程序的运行。 \n', null, '607', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('309', '下列几种关于进程的叙述，()最不符合操作系统地进程的理解？ \n', null, '607', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('310', '数据存储在磁盘上的排列方式会影响I/O服务的总时间。假设每磁道划分成10个物理块，每块存放1个逻辑记录。逻辑记录R1,R2,…,R10存放在同一个磁道上。假定磁盘的旋转速度为20ms/周，磁头当前处在R1的开始处。若系统顺序处理这些记录，使用单缓冲区，每个记录处理时间为4ms，对信息存储进行优化分布后，处理10个记录的最少时间为多少？ \n', null, '607', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('311', '目录文件所存放的信息是（）。 \n', null, '607', '1', '1', '1', '1');
INSERT INTO `question` VALUES ('312', '<div>\n  When is the text “Hi there”displayed? \n</div> \n<pre class=\"prettyprint\">public class StaticTest\n{\n&nbsp; &nbsp; static\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(“Hi there”);\n&nbsp; &nbsp; }\n\n&nbsp; &nbsp; public void print()\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(“Hello”);\n&nbsp; &nbsp; }\n\n&nbsp; &nbsp; public static void main(String args[])\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; StaticTest st1 = new StaticTest();\n&nbsp; &nbsp; &nbsp; &nbsp; st1.print();\n&nbsp; &nbsp; &nbsp; &nbsp; StaticTest st2 = new StaticTest();\n&nbsp; &nbsp; &nbsp; &nbsp; st2.print();\n&nbsp; &nbsp; }\n}\n</pre> \n<br> \n', null, '570', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('313', '<div style=\"color:#333333;font-family:Arial, Verdana;font-size:14px;font-style:normal;font-weight:normal;text-align:justify;\">\n  给出以下代码,请给出结果. \n</div> \n<pre class=\"prettyprint\">class Two{\n    Byte x;\n}\nclass PassO{\n    public static void main(String[] args){\n        PassO p=new PassO();\n        p.start();\n    }\n    void start(){\n        Two t=new Two();\n        System.out.print(t.x+””);\n        Two t2=fix(t);\n        System.out.print(t.x+” ” +t2.x);\n    }\n    Two fix(Two tt){\n        tt.x=42;\n        return tt;\n    }\n}\n</pre> \n<br> \n', null, '570', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('314', '下面有关JVM内存，说法错误的是？ \n', null, '570', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('315', '有关hashMap跟hashTable的区别，说法正确的是？ \n', null, '570', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('316', 'java关于异常处理机制的叙述哪些正确 \n', null, '570', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('317', '增加一个用户的命令是什么 \n', null, '618', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('318', '下面有关文件系统元数据的描述，说法错误的是？ \n', null, '618', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('319', 'init启动进程需要读取()配置文件 \n', null, '618', '2', '1', '1', '1');
INSERT INTO `question` VALUES ('320', '下列关于makefile描述正确的有？ \n', null, '618', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('321', '<div>\n  深度学习是当前很热门的机器学习算法。在深度学习中，涉及到大量矩阵相乘，现在需要计算三个稠密矩阵A,B,C的乘积ABC，假设三个矩阵的尺寸分别\n <span>为m*n,n*p,p*q,且m&lt;n&lt;p&lt;q，以下计算顺序效率最高的是：（）&nbsp;</span> \n</div> \n', null, '631', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('322', '下面有关序列模式挖掘算法的描述，错误的是？ \n', null, '631', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('323', '在Logistic Regression 中,如果同时加入L1和L2范数,会产生什么效果() \n', null, '631', '4', '1', '1', '1');
INSERT INTO `question` VALUES ('324', '下面哪些是基于核的机器学习算法?() \n', null, '631', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('325', '以下说法中正确的是() \n', null, '631', '4', '0', '1', '1');
INSERT INTO `question` VALUES ('326', '若AB为任意两个随机事件，则（）', null, '569', '2', '0', '1', '1');
INSERT INTO `question` VALUES ('347', '假设某就绪队列中有10个进程，以时间片轮流方式进行进程调度，如果系统时间片为100ms，CPU进行进程切换需要20ms，则系统开销所占的比率约为（） \n', null, '610', '3', '1', null, '1');
INSERT INTO `question` VALUES ('348', '<div>\n  程序出错在什么阶段__？ \n</div> \n<div> \n <pre class=\"prettyprint\">int main(void) {\n    http://www.taobao.com\n    cout &lt;&lt; \"welcome to taobao\" &lt;&lt; endl;&nbsp;\n}</pre> \n <br> \n</div> \n<p> <br> </p> \n', null, '610', '3', '1', null, '1');
INSERT INTO `question` VALUES ('349', '冯诺依曼工作方式的基本特点是____ \n', null, '610', '3', '1', null, '1');
INSERT INTO `question` VALUES ('350', '下面哪种方式可以用于服务器共享session？ \n', null, '610', '3', '0', null, '1');
INSERT INTO `question` VALUES ('351', '如果将固定块大小的文件系统中的块大小设置大一些，会造成（）。 \n', null, '607', '4', '1', null, '1');
INSERT INTO `question` VALUES ('352', '假设就绪队列中有10个进程，以时间片轮转方式进行进程调度，时间片大小为300ms，CPU进行进程切换需要花费10ms，则系统开销所占比率和进程数目增加到30个，其余条件不变时系统开销所占的比率相比，其结果是（）。 \n', null, '607', '4', '1', null, '1');
INSERT INTO `question` VALUES ('353', '常用的内存管理方法有哪几种？ \n', null, '607', '4', '0', null, '1');
INSERT INTO `question` VALUES ('354', '下列关于操作系统进程与线程的区别正确的是： \n', null, '607', '4', '0', null, '1');
INSERT INTO `question` VALUES ('355', '下列选项中，有关死锁说法正确的是() \n', null, '607', '4', '0', null, '1');
INSERT INTO `question` VALUES ('356', '如果进栈序列为e1,e2,e3,e4,e5,则可能的出栈序列是： \n', null, '581', '1', '1', null, '1');
INSERT INTO `question` VALUES ('357', '若进栈序列为 a,b,c,d，进栈过程中可以出栈，那么()是不可能的出栈序列 \n', null, '581', '1', '1', null, '1');
INSERT INTO `question` VALUES ('358', '队列和栈有什么区别？ \n', null, '581', '1', '1', null, '1');
INSERT INTO `question` VALUES ('359', '解析XML时，需要校验节点是否闭合，如必须有与之对应，用（）数据结构实现比较好（） \n', null, '581', '1', '1', null, '1');
INSERT INTO `question` VALUES ('360', '关于angularjs1说法，错误的是 \n', null, '571', '4', '1', null, '1');
INSERT INTO `question` VALUES ('361', '<pre class=\"prettyprint\">var myObject = {\n&nbsp; &nbsp; foo: \"bar\",\n&nbsp; &nbsp; func: function() {\n&nbsp; &nbsp; &nbsp; &nbsp; var self = this;\n&nbsp; &nbsp; &nbsp; &nbsp; console.log(this.foo); &nbsp; \n&nbsp; &nbsp; &nbsp; &nbsp; console.log(self.foo); &nbsp; \n&nbsp; &nbsp; &nbsp; &nbsp; (function() {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(this.foo); &nbsp; \n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(self.foo); &nbsp; \n&nbsp; &nbsp; &nbsp; &nbsp; }());\n&nbsp; &nbsp; }\n};\nmyObject.func();\n</pre> 程序的输出是什么？ \n', null, '571', '4', '1', null, '1');
INSERT INTO `question` VALUES ('362', '下面哪个不属于Promise的状态？ \n', null, '571', '4', '1', null, '1');
INSERT INTO `question` VALUES ('363', '下面关于IE、FF下面脚本的区别描述错误的是？ \n', null, '571', '4', '0', null, '1');
INSERT INTO `question` VALUES ('364', '下列哪些会返回false？ \n', null, '571', '4', '0', null, '1');
INSERT INTO `question` VALUES ('365', '甲和乙打算一起去某地参加活动，预先越好在某路口汇合，假定两人最终都会在下午两点到三点之间到达该路口（具体何时到达，服从均匀分布），且先到的一方会待在路口等待另一方，但最多不超过十五分钟，那么他们最终能一起出发去参加活动的概率最接近下面哪个数值。 \n', null, '602', '4', '1', null, '1');
INSERT INTO `question` VALUES ('366', '<div>\n  如图所示的逻辑推理中，不同的字母代表不同的加工方式。 \n</div> \n<div> \n <img src=\"http://uploadfiles.nowcoder.com/images/20141024/104_1414153211997_图片6.png\" alt=\"\">\n <br> \n</div> \n<div>\n  请问F的加工过程是？ \n</div> \n', null, '602', '4', '1', null, '1');
INSERT INTO `question` VALUES ('367', '对一批编号为1～100，全部开关朝上(开)的灯进行以下操作：凡是1的倍数反方向拨一次开关；2的倍数反方向又拨一次开关；3的倍数反方向又拨一次开关……\n<span style=\"color: rgb(51,51,51);\">100的倍数反方向又拨一次开关</span> ,问：最后为关熄状态的灯有几个。 \n', null, '602', '4', '1', null, '1');
INSERT INTO `question` VALUES ('368', '下面关于哈希(Hash,杂凑)查找的说法正确的是() \n', null, '585', '5', '1', null, '1');
INSERT INTO `question` VALUES ('369', '对于一个线性表既要求能够进行较快速地的插入和删除,又要求存储结构能反映数据之间的逻辑关系,则应该用() \n', null, '585', '5', '1', null, '1');
INSERT INTO `question` VALUES ('370', '哈希函数越复杂越好,因为这样随机性好,冲突概率小() \n', null, '585', '5', '1', null, '1');
INSERT INTO `question` VALUES ('371', '以下那种结构，平均来讲获取任意一个指定值最快？() \n', null, '585', '5', '1', null, '1');
INSERT INTO `question` VALUES ('372', '下列哪两个数据结构，同时具有较高的查找和删除性能？（） \n', null, '585', '5', '0', null, '1');
INSERT INTO `question` VALUES ('373', '采用败者树进行K路平衡归并时,总的(包括访外)归并效率与K() \n', null, '598', '3', '1', null, '1');
INSERT INTO `question` VALUES ('374', '用二进制来编码字符串“abcdabaa”，需要能够根据编码，解码回原来的字符串，最少需要()长的二进制字符串？ \n', null, '598', '3', '1', null, '1');
INSERT INTO `question` VALUES ('375', '下面关于Z-Buffer算法的论断哪一条不正确？（） \n', null, '598', '3', '1', null, '1');
INSERT INTO `question` VALUES ('376', '程序访问内存的性能与下列哪个方面无关？ \n', null, '607', '3', '1', null, '1');
INSERT INTO `question` VALUES ('377', '当()时，进程从执行状态转变为就绪状态。 \n', null, '607', '3', '1', null, '1');
INSERT INTO `question` VALUES ('378', '进程进入等待状态有哪几种方式？ \n', null, '607', '3', '1', null, '1');
INSERT INTO `question` VALUES ('379', '下面列出的是选择调度方式和算法的四个面向用户的准则。其中不完全适用于实时系统的准则是（）。 \n', null, '607', '3', '1', null, '1');
INSERT INTO `question` VALUES ('380', '在请求分页管理中，已修改过的页面再次装入时应来自（）。 \n', null, '607', '3', '1', null, '1');
INSERT INTO `question` VALUES ('381', 'CSS3支持下列哪一个\n<span style=\"color: rgb(51,51,51);\">属性</span> ? \n', null, '574', '4', '1', null, '1');
INSERT INTO `question` VALUES ('382', '可以包含在HTML网页head标签中的有 \n', null, '574', '4', '0', null, '1');
INSERT INTO `question` VALUES ('383', '关于h标签\n<br> \n<pre class=\"prettyprint\">&lt;h1&gt;h1. Bootstrap heading &lt;small&gt;Secondary text&lt;/small&gt;&lt;/h1&gt;</pre> \n<div>\n  以下说法正确的是 \n</div> \n', null, '574', '4', '0', null, '1');
INSERT INTO `question` VALUES ('384', '哪些可以给文字加上背景？ \n', null, '574', '4', '0', null, '1');
INSERT INTO `question` VALUES ('385', 'iframe的使用场景有？ \n', null, '574', '4', '0', null, '1');
INSERT INTO `question` VALUES ('386', '三兄弟中，每两人的平均年龄加另一人的年龄之和分别是58，69，70，那么这三兄弟中年龄最大的与最小的相差几岁？ \n', null, '602', '3', '1', null, '1');
INSERT INTO `question` VALUES ('387', '在?处答案为() \n<img src=\"http://uploadfiles.nowcoder.com/probs/iq/6.png\"> \n', null, '602', '3', '1', null, '1');
INSERT INTO `question` VALUES ('388', '在同一侧的房号为1、2、3、4的四间房里，分别住着来自韩国、法国、英国和德国的四位专家。有一位记者前来采访他们\n<br> 韩国人说：“我的房号大于德国人，且我不会说外语，也无法和邻居交流”；\n<br> 法国人说：“我会说德语，但我却无法和我的邻居交流”；\n<br> 英国人说：“我会说韩语，但我只可以和我的一个邻居交流”；\n<br> 德国人说：“我会说我们这四个国家的语言。”&nbsp;\n<br> 那么，按照房号从小往大排，房间里住的人的国籍依次是( &nbsp; &nbsp;)。\n<br> \n', null, '602', '3', '1', null, '1');
INSERT INTO `question` VALUES ('389', '某无聊的程序员在玩Windows上的记事本程序，不用鼠标，每次可以按以下键或组合之一：字母A、Ctrl+A（全选）、Ctrl+C（拷贝）、Ctrl+V（粘贴），那么在10次按键之后可以制造的最长文本长度为多少？假设\n<span style=\"color: rgb(102,102,102);\">在复制后内存中是保留副本的。</span> \n', null, '602', '3', '1', null, '1');
INSERT INTO `question` VALUES ('390', '将1,2,3,......,99,100任意排列成一个圈，相邻两数的差的绝对值求和最多为____。 \n', null, '602', '3', '1', null, '1');
INSERT INTO `question` VALUES ('391', '<div>\n  请问在javascript程序中,alert(undefined==null)的输出结果是 \n</div> \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('392', '如果需要匹配包含文本的元素，用下面哪种来实现？ \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('393', '下面关于块内函数的做法哪些是正确的？ \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('394', '关于对变量的说法，错误的是？ \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('395', '<span style=\"color: rgb(51,51,51);\">在文档上输出</span> &nbsp;\"Hello World\" 的正确 Javascript 语法是？ \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('396', '在一个布局文件中,对一个EditText进行设置,以下哪项设置能实现输入框默认提示内容的效果( ). \n', null, '617', '3', '1', null, '1');
INSERT INTO `question` VALUES ('397', '关于ServiceConnection接口的onServiceConnected()方法的触发条件描述正确的是？ \n', null, '617', '3', '1', null, '1');
INSERT INTO `question` VALUES ('398', '对一些资源以及状态的操作保存，最好是保存在生命周期的哪个函数中进行？ \n', null, '617', '3', '1', null, '1');
INSERT INTO `question` VALUES ('399', '在android中使用RadioButton时，要想实现互斥的选择需要用的组件是 \n', null, '617', '3', '1', null, '1');
INSERT INTO `question` VALUES ('400', '下面是属于GLSurFaceView特性的是? \n', null, '617', '3', '0', null, '1');
INSERT INTO `question` VALUES ('401', '一条SQL语句中，group by子句应位于什么位置 \n', null, '606', '1', '1', null, '1');
INSERT INTO `question` VALUES ('402', 'Mysql查询时，只有满足联接条件的记录才包含在查询结果，这种联接是（）。 \n', null, '606', '1', '1', null, '1');
INSERT INTO `question` VALUES ('403', '<div>\n  如下语句： \n</div> \n<pre class=\"prettyprint\">SELECT i.id_number,m.id_number FROM inventory i,manufacturer m WHERE \ni.manufacturer_id = m.id_number Order by inventory.description</pre> \n<div>\n  执行时是错误的，请问以下措施哪个能够改正这个错误? \n</div> \n', null, '606', '1', '1', null, '1');
INSERT INTO `question` VALUES ('404', '数据库以及线程发生死锁的原理是什么？ \n', null, '606', '1', '0', null, '1');
INSERT INTO `question` VALUES ('405', '在顺序存储结构中,有时也存储数据结构中元素之间的关系() \n', null, '597', '1', '1', null, '1');
INSERT INTO `question` VALUES ('406', '在顺序表（3,6,8,10,12,15,16,18,21,25,30）中，用二分法查找关键码值11，所需的关键码比较次数为 \n', null, '597', '1', '1', null, '1');
INSERT INTO `question` VALUES ('407', '在有序双向链表中定位删除一个元素的平均时间复杂度为 \n', null, '597', '1', '1', null, '1');
INSERT INTO `question` VALUES ('408', '下列叙述中正确的是 \n', null, '597', '1', '1', null, '1');
INSERT INTO `question` VALUES ('409', '假设某算法的计算时间可用递推关系式T(n)=2T(n/2)+n表示，则该算法的时间复杂度为（） \n', null, '597', '1', '1', null, '1');
INSERT INTO `question` VALUES ('410', '具有12个关键字的有序表,折半查找的平均查找长度() \n', null, '589', '4', '1', null, '1');
INSERT INTO `question` VALUES ('411', '若有序表的关键字序列为（b,c,d,e,f,g,q,r,s,t），则在二分查找关键字b的过程中，先后进行的关键字依次为： \n', null, '589', '4', '1', null, '1');
INSERT INTO `question` VALUES ('412', 'KMP算法下，长为n的字符串中匹配长度为m的子串的复杂度为（） \n', null, '589', '4', '1', null, '1');
INSERT INTO `question` VALUES ('413', '甲盒中有200个螺杆，其中有160个A型的，乙盒中有240个螺母，其中有180个A形的，现从甲乙两盒中各任取一个，则能配成A型的螺栓的概率为？ \n', null, '601', '2', '1', null, '1');
INSERT INTO `question` VALUES ('414', '一个汽车公司的产品，甲厂占40%，乙厂占60%，甲的次品率是1%，乙的次品率是2%，现在抽出一件汽车时次品，问是甲生产的可能性？ \n', null, '601', '2', '1', null, '1');
INSERT INTO `question` VALUES ('415', '硬币游戏：连续扔硬币，\n<span style=\"color: rgb(51,51,51);\">直到</span> 某一人获胜，A获胜条件是先正后反，B获胜是出现连续两次反面，问AB游戏时A获胜概率是？ \n', null, '601', '2', '1', null, '1');
INSERT INTO `question` VALUES ('416', '设某公路上经过的货车与客车的数量之比为2:1,货车中途停车修理的概率为0.02,客车为0.01,今有一辆汽车中途停车修理,求该汽车是货车的概率() \n', null, '601', '2', '1', null, '1');
INSERT INTO `question` VALUES ('417', '有朋自远方来，他乘火车，轮船，汽车，飞机来的概率分别是0.3，0.2，0.1，0.4，从各交通工具迟到的概率分别是1/4，1/3，1/12，0，下列语句中正确的？ \n', null, '601', '2', '0', null, '1');
INSERT INTO `question` VALUES ('418', '下列关于动态链接库和静态链接库的优缺点描述错误的有？ \n', null, '620', '5', '1', null, '1');
INSERT INTO `question` VALUES ('419', '下面()哪个函数返回的有效句柄用完后不需要CloseHandle \n', null, '620', '5', '1', null, '1');
INSERT INTO `question` VALUES ('420', 'invalidateRect的作用是() \n', null, '620', '5', '1', null, '1');
INSERT INTO `question` VALUES ('421', '以下哪些对象可用于Windows进程间通信？ \n', null, '620', '5', '1', null, '1');
INSERT INTO `question` VALUES ('422', '典型的创建Windows窗口过程的流程为:() \n', null, '620', '5', '1', null, '1');
INSERT INTO `question` VALUES ('423', '下列的各类函数中，不是类的成员函数的是（） \n', null, '609', '1', '1', null, '1');
INSERT INTO `question` VALUES ('424', '下列关于整数的说法中哪个是正确的？ \n', null, '609', '1', '1', null, '1');
INSERT INTO `question` VALUES ('425', '对于某个函数调用，可以不给出被调用函数的原形的情况是（）。 \n', null, '609', '1', '1', null, '1');
INSERT INTO `question` VALUES ('426', '关于依赖注入，下列选项中说法错误的是() \n', null, '609', '1', '1', null, '1');
INSERT INTO `question` VALUES ('427', '<p> 关于下列操作哪个复杂度为<span>O(1)?</span> </p> \n', null, '609', '1', '0', null, '1');
INSERT INTO `question` VALUES ('428', '数组A[0..4,-1..-3,5..7]中含有元素的个数() \n', null, '600', '3', '1', null, '1');
INSERT INTO `question` VALUES ('429', '若串str=\"xunlei\",其子串的数目是() \n', null, '600', '3', '1', null, '1');
INSERT INTO `question` VALUES ('430', '美团有个传统，就是公司各部门每月都要组织员工进行一次团建互动(team building，简称TB)，每个员工都可以带家属参加。活动内容出了吃喝玩之外，还要做一些互动的游戏，需要从员工中随机选出几名组成一队来完成游戏。一次TB活动，一共有20个人(含员工和家属)参加。已知如果随机选取3位员工以及该3位员工的家属，一共有220组合。问如果每次随机选取4个员工及该4位员工的家属，会有多少组合? \n', null, '600', '3', '1', null, '1');
INSERT INTO `question` VALUES ('431', '6支笔，其笔身和笔帽颜色相同：但6支笔颜色各不相同，求全部笔身都戴错笔帽的可能性有多少种？ \n', null, '600', '3', '1', null, '1');
INSERT INTO `question` VALUES ('432', '每台物理计算机可以虚拟出 20 台虚拟机，假设一台虚拟机发生故障当且仅当它所宿主的物理机发生故障。通过 5 台物理机虚拟出100 台虚拟机，那么关于这 100 台虚拟机的故障的说法正确的是：____? \n', null, '630', '1', '1', null, '1');
INSERT INTO `question` VALUES ('433', '以下哪个是常见的时间序列算法模型 \n', null, '630', '1', '1', null, '1');
INSERT INTO `question` VALUES ('434', '基于统计的分词方法为（） \n', null, '630', '1', '1', null, '1');
INSERT INTO `question` VALUES ('435', '常用的windows进入点函数wWinMain共有四个参数，其中不包括以下哪种类型的参数（） \n', null, '620', '1', '1', null, '1');
INSERT INTO `question` VALUES ('436', '下列windows消息中，优先级相对较低的是哪一个（） \n', null, '620', '1', '1', null, '1');
INSERT INTO `question` VALUES ('437', 'Windows socket编程中经常需要进行字节序列的转换，下列哪几个函数是将网络字节序列转换为主机字节序列? \n', null, '620', '1', '0', null, '1');
INSERT INTO `question` VALUES ('438', '下列有关windows系统的EXE和DLL文件说法错误的是？ \n', null, '620', '1', '0', null, '1');
INSERT INTO `question` VALUES ('439', '某系统中有3个并发进程，都需要同类资源4 个，试问该系统不会发生死锁的最少资源数是： \n', null, '636', '4', '1', null, '1');
INSERT INTO `question` VALUES ('440', '下面关于并行和并发的区别，说法错误的是？ \n', null, '636', '4', '1', null, '1');
INSERT INTO `question` VALUES ('441', '假设有4条语句s1:a＝5x;s2:b=5+y;s3:c=a+b;s4:d=c+y;根据bernstein条件，下面说法正确的是？ \n', null, '636', '4', '1', null, '1');
INSERT INTO `question` VALUES ('442', '在请求分页系统中，页表中的访问位是供（）参考的。 \n', null, '607', '4', '1', null, '1');
INSERT INTO `question` VALUES ('443', '进程和线程是操作系统中最基本的概念,下列有关描述错误的是: \n', null, '607', '4', '1', null, '1');
INSERT INTO `question` VALUES ('444', '下面列出的选项中，属于可剥夺性资源的有（）。 \n', null, '607', '4', '0', null, '1');
INSERT INTO `question` VALUES ('445', '下面属于进程间通信的有？ \n', null, '607', '4', '0', null, '1');
INSERT INTO `question` VALUES ('446', '以下不属于网络安全控制技术的是（）。 \n', null, '608', '2', '1', null, '1');
INSERT INTO `question` VALUES ('447', '以下算法不能用于文本加密的是： \n', null, '608', '2', '1', null, '1');
INSERT INTO `question` VALUES ('448', 'Which of the following method(s) CANNOT be used for Text-encryption: \n', null, '608', '2', '1', null, '1');
INSERT INTO `question` VALUES ('449', '下面有关csrf的描述，说法错误的是？ \n', null, '608', '2', '1', null, '1');
INSERT INTO `question` VALUES ('450', '已知有一个关键字序列：（19，14,23,1,68,20,84,27,55,11,10,79）散列存储在一个哈希表中，若散列函数为H（key）=key%7，并采用链地址法来解决冲突，则在等概率情况下查找成功的平均查找长度为（）。 \n', null, '585', '3', '1', null, '1');
INSERT INTO `question` VALUES ('451', '以下数据结构说法，错误的是___? \n', null, '585', '3', '1', null, '1');
INSERT INTO `question` VALUES ('452', '下列不属于hash碰撞解决方法是? \n', null, '585', '3', '1', null, '1');
INSERT INTO `question` VALUES ('453', '对于线性表（7，34，55，25，64，46，20，10）进行散列存储时，若使用H（K)=K%9作为散列函数，则散列地址为1的元素有（）个 \n', null, '585', '3', '1', null, '1');
INSERT INTO `question` VALUES ('454', '在索引顺序表中,实现分块查找,在等概率查找情况下,其平均查找长度不仅与表中元素个数有关,而且与每块中元素个数有关() \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('455', '采用深度优先搜索或拓扑排序算法可以判断出一个有向图中是否有环(回路)() \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('456', '在有序表(12,24,36,48,60,72,84)中二分查找关键字72时所需进行的关键字比较次数是多少？ \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('457', '下列说法中错误的是：（） \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('458', '已知一个有序表为（12，18，24，35，47，50，62，83，90，115，134），当折半查找值为90的元素时，经过（）次比较后查找成功。 \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('459', '哈夫曼树是带权路径长度最短的树,路径上权值较大的结点离根较近() \n', null, '598', '2', '1', null, '1');
INSERT INTO `question` VALUES ('460', '本地化目录en-US.lproj中en是语言代号，US是国家代号。 \n', null, '616', '1', '1', null, '1');
INSERT INTO `question` VALUES ('461', '树形结构导航模式是在内容是有层次的，从上到下细分或者分类包含等关系，例如黑龙江省与哈尔滨的关系，黑龙江省包含了哈尔滨，哈尔滨又包含了道里区、道外区等。 \n', null, '616', '1', '1', null, '1');
INSERT INTO `question` VALUES ('462', 'NSURLConnection类的同步请求方法是？\n<br> \n', null, '616', '1', '1', null, '1');
INSERT INTO `question` VALUES ('463', '为什么说Object-C是runtime language? \n', null, '616', '1', '0', null, '1');
INSERT INTO `question` VALUES ('464', '在unix系统下执行chmod(“/usr/test/sample”,0753)之后该文件sample的访问权限为 \n', null, '618', '5', '1', null, '1');
INSERT INTO `question` VALUES ('465', '使用pthread库的多线程程序编译时需要加什么连接参数? \n', null, '618', '5', '1', null, '1');
INSERT INTO `question` VALUES ('466', '写出完成以下功能的gdb命令。gdb查看线程信息。 \n', null, '618', '5', '1', null, '1');
INSERT INTO `question` VALUES ('467', 'tar命令用于解压的参数是？ \n', null, '618', '5', '1', null, '1');
INSERT INTO `question` VALUES ('468', 'TCP的握手与分手，可能出现的情形有（）。 \n', null, '618', '5', '0', null, '1');
INSERT INTO `question` VALUES ('469', '串长度是指串中不同字符的个数() \n', null, '579', '5', '1', null, '1');
INSERT INTO `question` VALUES ('470', '<div>\n  以下程序段的输出结果是 \n</div> \n<pre class=\"prettyprint\">char s[]=\"\\\\123456\\123456\\t\";\nprintf(\"%d\\n\",strlen(s));\n</pre> \n<br> \n', null, '579', '5', '1', null, '1');
INSERT INTO `question` VALUES ('471', 'Given a string with n characters, suppose all the characters are different from each other, how many different substrings do we have?\n<br> \n', null, '579', '5', '1', null, '1');
INSERT INTO `question` VALUES ('472', '下面关于字符串的描述正确的是：【多选】（ ） \n', null, '579', '5', '0', null, '1');
INSERT INTO `question` VALUES ('473', '最小生成树问题是构造连通网的最小代价生成树() \n', null, '583', '4', '1', null, '1');
INSERT INTO `question` VALUES ('474', '一棵左子树为空的二叉树在前序线索化后,其中空的链域的个数是() \n', null, '583', '4', '1', null, '1');
INSERT INTO `question` VALUES ('475', '已知数据元素为(34,76,45,18,26,54,92,65),按照依次插入节点的方法生成一棵二叉排序树，则该树的深度为() \n', null, '583', '4', '1', null, '1');
INSERT INTO `question` VALUES ('476', '关于二叉树，下面说法正确的是() \n', null, '583', '4', '0', null, '1');
INSERT INTO `question` VALUES ('477', 'Java中所有类的父类是（ ）。 \n', null, '570', '5', '1', null, '1');
INSERT INTO `question` VALUES ('478', '<span style=\"font-size: 14.0px;\">在如下所示的类Test中，共有（）个构造方法。</span> \n<br> \n<pre class=\"prettyprint\">public class Test\n{\n&nbsp; &nbsp; private int x;\n&nbsp; &nbsp; public Test()\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; x = 35;\n&nbsp; &nbsp; }\n\n&nbsp; &nbsp; public void Test(double f)\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; this.x = (int)f;\n&nbsp; &nbsp; }\n\n&nbsp; &nbsp; public Test(double f)\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; this.x = (int)f;\n&nbsp; &nbsp; }\n\n&nbsp; &nbsp; public Test(String s) {}\n}\n\n <div>\n	\n\n </div>\n</pre> \n<br> \n', null, '570', '5', '1', null, '1');
INSERT INTO `question` VALUES ('479', '以下是java concurrent包下的4个类，选出差别最大的一个 \n', null, '570', '5', '1', null, '1');
INSERT INTO `question` VALUES ('480', '<span style=\"color:#333333;font-family:Arial, Verdana;line-height:25px;\">下列关于构造函数的描述正确的是?</span> \n', null, '570', '5', '1', null, '1');
INSERT INTO `question` VALUES ('481', '关于Java和C/C++的比较，下列哪个描述是错误的？ \n', null, '570', '5', '0', null, '1');
INSERT INTO `question` VALUES ('482', 'NSRunLoop的以下描述错误的是（） \n', null, '616', '2', '1', null, '1');
INSERT INTO `question` VALUES ('483', 'AddressBook框架中常用类？ \n', null, '616', '2', '0', null, '1');
INSERT INTO `question` VALUES ('484', '下面与导航相关的视图控制器有哪些？ \n', null, '616', '2', '0', null, '1');
INSERT INTO `question` VALUES ('485', '下面属于表视图内置的扩展视图常量如下？ \n', null, '616', '2', '0', null, '1');
INSERT INTO `question` VALUES ('486', '下列时间序列模型中,哪一个模型可以较好地拟合波动性的分析和预测 \n', null, '631', '2', '1', null, '1');
INSERT INTO `question` VALUES ('487', '数据清理中，处理缺失值的方法是? \n', null, '631', '2', '0', null, '1');
INSERT INTO `question` VALUES ('488', '基于二次准则函数的H-K算法较之于感知器算法的优点是()? \n', null, '631', '2', '0', null, '1');
INSERT INTO `question` VALUES ('489', '下列哪些方法可以用来对高维数据进行降维: \n', null, '631', '2', '0', null, '1');
INSERT INTO `question` VALUES ('490', '关于NSOperation queue的说法，正确的是？ \n', null, '616', '4', '0', null, '1');
INSERT INTO `question` VALUES ('491', '表视图的数据源协议与委托协议有哪些？ \n', null, '616', '4', '0', null, '1');
INSERT INTO `question` VALUES ('492', '在堆排序算法中我们用一个数组A来模拟二叉树T，如果该A[0]存放的是T的根节点，那么A[K](K&gt;0)的父亲节点是 \n', null, '586', '2', '1', null, '1');
INSERT INTO `question` VALUES ('493', '最小堆[0,3,2,5,7,4,6,8],在删除堆顶元素0之后，其结果是（） \n', null, '586', '2', '1', null, '1');
INSERT INTO `question` VALUES ('494', '<p> 若有以下程序 </p> \n<pre class=\"prettyprint\">#include&nbsp;&lt;stdio.h&gt;\nmain(&nbsp;)\n{&nbsp;\n    FILE&nbsp;*&nbsp;fp;\n    int&nbsp;i,a[6]={1,2,3,4,5,6},k;\n    fp&nbsp;=&nbsp;fopen(\"data.dat\",\"w+\");\n    for&nbsp;(i=0;i&lt;6;i++)\n    {&nbsp;\n        fseek(fp,0L,0);&nbsp;\n        fprintf(fp,\"%d\\n\",a[i]);&nbsp;\n&nbsp;       rewind&nbsp;(fp);\n        fscanf(fp,\"%d\",&amp;k);\n    }\n       fclose(fp);\n       printf(\"%d\\n\",k);\n} </pre> \n<p> 则程序的输出结果是? </p> \n', null, '569', '4', '1', null, '1');
INSERT INTO `question` VALUES ('495', '<pre class=\"prettyprint\">unsigned char *p1; \nunsigned long *p2; \np1=(unsigned char *)0x801000; \np2=(unsigned long *)0x810000; </pre> 请问p1+5= 什么？\n<br> p2+5= 什么？ \n', null, '569', '4', '1', null, '1');
INSERT INTO `question` VALUES ('496', '<div>\n  关于代码输出正确的结果是() \n</div> \n<pre class=\"prettyprint lang-cpp\">int main(int argc, char *argv[])\n{\n	string a=\"hello world\";\n	string b=a;\n	if (a.c_str()==b.c_str())\n	{\n		cout&lt;&lt;\"true\"&lt;&lt;endl;\n	}\n	else cout&lt;&lt;\"false\"&lt;&lt;endl;\n	string c=b;\n	c=\"\";\n	if (a.c_str()==b.c_str())\n	{\n		cout&lt;&lt;\"true\"&lt;&lt;endl;\n	}\n	else cout&lt;&lt;\"false\"&lt;&lt;endl;\n	a=\"\";\n	if (a.c_str()==b.c_str())\n	{\n		cout&lt;&lt;\"true\"&lt;&lt;endl;\n	}\n	else cout&lt;&lt;\"false\"&lt;&lt;endl;\n	return 0;\n}</pre> \n', null, '569', '4', '1', null, '1');
INSERT INTO `question` VALUES ('497', '<div>\n  问题描述: \n</div> \n<pre class=\"prettyprint lang-cpp\">#pragma pack(2)\nclass BU\n{\n	int number;\n	union UBffer\n	{\n		char buffer[13];\n		int number;\n	}ubuf;\n	void foo(){}\n	typedef char*(*f)(void*);\n	enum{hdd,ssd,blueray}disk;\n}bu;</pre> \n<div>\n  sizeof(bu)的值是() \n</div> \n', null, '569', '4', '1', null, '1');
INSERT INTO `question` VALUES ('498', '<div>\n  下面程序的输出结果是() \n</div> \n<pre class=\"prettyprint\">#include &lt;iostream&gt;\nusing namespace std;\nint i = 0;\nint fun( int n )\n{\n&nbsp; &nbsp; static int a = 2;\n&nbsp; &nbsp; a++;\n&nbsp; &nbsp; return(a * n);\n}\n\n\nint main()\n{\n&nbsp; &nbsp; int k = 5;\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; int i = 2;\n&nbsp; &nbsp; &nbsp; &nbsp; k += fun( i );\n&nbsp; &nbsp; }\n&nbsp; &nbsp; k += fun( i );\n&nbsp; &nbsp; cout &lt;&lt; k;\n&nbsp; &nbsp; return(0);\n}\n</pre> \n<br> \n', null, '569', '4', '1', null, '1');
INSERT INTO `question` VALUES ('499', '对线性表进行折半查找时,要求线性表必须() \n', null, '589', '3', '1', null, '1');
INSERT INTO `question` VALUES ('500', '用二分法查找长度为10的、排好序的线性表，查找不成功时，最多需要比较多少次？ \n', null, '589', '3', '1', null, '1');
INSERT INTO `question` VALUES ('501', '红黑树中已经有n个数据，寻找某个key是否存在的时间复杂度为()。 \n', null, '589', '3', '1', null, '1');
INSERT INTO `question` VALUES ('502', '设有一组关键字序列{5,8,14,20,31,55,78,81,93,97,111}，使用二分（折半）法查找关键字93需要进行多少次比较（） \n', null, '589', '3', '1', null, '1');
INSERT INTO `question` VALUES ('503', '广告系统为了做地理位置定向，将IPV4分割为627672个区间，并标识了地理位置信息，区间之间无重叠，用二分查找将IP地址映射到地理位置信息，请问在最坏的情况下，需要查找多少次? \n', null, '589', '3', '1', null, '1');
INSERT INTO `question` VALUES ('504', 'IEEE802.3u标准是指? \n', null, '604', '2', '1', null, '1');
INSERT INTO `question` VALUES ('505', 'GSM的多址方式为 \n', null, '604', '2', '1', null, '1');
INSERT INTO `question` VALUES ('506', '以下四种介质中，带宽最大的是________。 \n', null, '604', '2', '1', null, '1');
INSERT INTO `question` VALUES ('507', 'A switch has been configured with PVLANs. With what type of PVLAN port should the default gateway be configured? \n', null, '604', '2', '1', null, '1');
INSERT INTO `question` VALUES ('508', '下列有关Socket的说法，错误的是（） \n', null, '604', '2', '1', null, '1');
INSERT INTO `question` VALUES ('509', 'linux下解释: ip rule add from 192.168.3.112/32 [tos 0x10] table 2 pref 1500。 \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('510', 'IP地址中网络号的作用有哪些？ \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('511', '各个路由协议衡量路由的好坏标准是（ ）。 \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('512', '下列哪个IP地址可以分配给一台计算机? \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('513', '适合于中等城市的本地网的网路组织是？ \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('514', '已知一算术表达式的中缀表达式为a-(b+c/d)*e,则后缀形式为？ \n', null, '609', '3', '1', null, '1');
INSERT INTO `question` VALUES ('515', '下列数最大的是（ ）。括号内为数字，括号外为进制。 \n', null, '609', '3', '1', null, '1');
INSERT INTO `question` VALUES ('516', '下面有关图片格式的对比，说法错误的是？ \n', null, '609', '3', '1', null, '1');
INSERT INTO `question` VALUES ('517', '大整数845678992357836701转化成16进制表示,最后两位字符是? \n', null, '609', '3', '1', null, '1');
INSERT INTO `question` VALUES ('518', '给字母重新进行二进制编码,以使得\"MT-TECH-TEAM\"(包含连字符,不包含引号)的长度最小.并能够根据编码,解码回原来的字符串.请问最优编码情况下该字串的长度是多少bit? \n', null, '609', '3', '1', null, '1');
INSERT INTO `question` VALUES ('519', '20个阿里巴巴B2B技术部的员工被安排为4排，每排5个人，我们任意选其中4人送给他们一人一本《effective c++》，那么我们选出的4人都在不同排的概率为： \n', null, '630', '3', '1', null, '1');
INSERT INTO `question` VALUES ('520', '一组数据,均值&gt;中位数&gt;众数,问这组数据 \n', null, '630', '3', '1', null, '1');
INSERT INTO `question` VALUES ('521', '想要了解上海市小学生的身高,需要抽取500个样本,这项调查中的样本是? \n', null, '630', '3', '1', null, '1');
INSERT INTO `question` VALUES ('522', '一个临界资源可以对应多个临界区。 \n', null, '607', '5', '1', null, '1');
INSERT INTO `question` VALUES ('523', '在单处理机系统中，相同的硬件条件下，要执行10个程序，每个程序单独执行需要6min。现在10个程序同时在多道程序系统执行，一般情况下，每个程序执行完毕需要的时间（）。 \n', null, '607', '5', '1', null, '1');
INSERT INTO `question` VALUES ('524', '下面关于inode描述错误的是? \n', null, '607', '5', '1', null, '1');
INSERT INTO `question` VALUES ('525', '在可变分区存储管理中的紧凑技术可以（）。 \n', null, '607', '5', '1', null, '1');
INSERT INTO `question` VALUES ('526', '设内存的分配情况如表所示。若要申请一块40KB字节的内存空间，采用最佳适应算法，则所得到的分区首址为（ ）。\n<br> &nbsp;分区表\n<br> 分区首址/KB &nbsp; &nbsp;状态&nbsp;\n<br> &nbsp;000K &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 占用\n<br> &nbsp;100K &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\n<br> &nbsp;180K &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 占用\n<br> \n<div>\n  &nbsp;190K &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \n</div> \n<div> \n <span>&nbsp;280K &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;占用</span> \n <br> \n</div> \n<div>\n  &nbsp;330k \n</div> \n<div>\n  &nbsp;390k&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;占用 \n</div> \n<div> \n <span>&nbsp;410K &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span> \n <br> \n</div> \n', null, '607', '5', '1', null, '1');
INSERT INTO `question` VALUES ('527', '若路由器接收的ip报文的目的地址不是路由器的接口ip地址，并且未匹配的路由项，则采取的策略是（）。 \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('528', '对于IP地址130.63.160.2，MASK为255.255.255.0，子网号为（） \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('529', '客户端C和服务器S之间建立了一个TCP连接，TCP最大段长度为1KB，客户端C当前的拥塞窗口是16KB，向服务器S连续发送2个最大段之后，成功收到服务器S发送的第一段的确认段，确认段中通告的接受窗口大小是4KB，那么此时客户端C还可以向服务器S发送的最大字节数是： \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('530', '主机甲和乙已建立了 TCP 连接,甲始终以 MSS=1KB 大小的段发送数据,并一直有数据 发送;乙每收到一个数据段都会发出一个接收窗口为 10KB 的确认段。若甲在 t 时刻发生超 时时拥塞窗口为 8KB,则从 t 时刻起,不再发生超时的情况下,经过 10 个 RTT 后,甲的发送窗口是() \n', null, '604', '4', '1', null, '1');
INSERT INTO `question` VALUES ('531', '以下有关Http协议的描述中，正确的有？ \n', null, '604', '4', '0', null, '1');
INSERT INTO `question` VALUES ('532', '下面的描述错误的是 \n', null, '581', '4', '1', null, '1');
INSERT INTO `question` VALUES ('533', '设计一个判别表达式中左、右括号是否配对出现的算法,采用()数据结构最佳 \n', null, '581', '4', '1', null, '1');
INSERT INTO `question` VALUES ('534', '单链表实现的栈，栈顶指针为Top(仅仅是一个指针)，入栈一个P节点时，其操作步骤为： \n', null, '581', '4', '1', null, '1');
INSERT INTO `question` VALUES ('535', '如果进栈序列是el，e2，e3，e4，e5，则可能的出栈序列是 \n', null, '581', '4', '0', null, '1');
INSERT INTO `question` VALUES ('536', '下列关键字序列为堆的是（）？ \n', null, '586', '3', '1', null, '1');
INSERT INTO `question` VALUES ('537', '下列关键字序列为堆的是______。 \n', null, '586', '3', '1', null, '1');
INSERT INTO `question` VALUES ('538', '表单提交时会触发什么Dom事件 \n', null, '574', '5', '1', null, '1');
INSERT INTO `question` VALUES ('539', '<div>\n  下列哪个操作是W3C标准定义的阻止事件向父容器传递： \n</div> \n', null, '574', '5', '1', null, '1');
INSERT INTO `question` VALUES ('540', '不换行必须设置哪些项？ \n', null, '574', '5', '0', null, '1');
INSERT INTO `question` VALUES ('541', '以下说法，错误的是 \n', null, '574', '5', '1', null, '1');
INSERT INTO `question` VALUES ('542', '队列逻辑上是一个下端和上端既能增加又能减少的线性表() \n', null, '582', '1', '1', null, '1');
INSERT INTO `question` VALUES ('543', '图的广度优先搜索算法需使用的辅助数据结构为（） \n', null, '582', '1', '1', null, '1');
INSERT INTO `question` VALUES ('544', '循环队列也存在空间溢出问题() \n', null, '582', '1', '1', null, '1');
INSERT INTO `question` VALUES ('545', '下面关于队列和栈的描述正确的是______。 \n', null, '582', '1', '1', null, '1');
INSERT INTO `question` VALUES ('546', '设数组a[]作为循环队列SQ的存储空间，数组的长度为m，f为队头指示，r为队尾指示则执行出队操作的语句为 \n', null, '582', '1', '1', null, '1');
INSERT INTO `question` VALUES ('547', '在日常管理中，通常CPU 会影响系统性能的情况是： \n', null, '618', '3', '1', null, '1');
INSERT INTO `question` VALUES ('548', '在xdm的配置目录中，哪个文件用来设置在用户通过xdm登录后自动起动的应用程序？ \n', null, '618', '3', '1', null, '1');
INSERT INTO `question` VALUES ('549', '内核不包括的子系统是 。 \n', null, '618', '3', '1', null, '1');
INSERT INTO `question` VALUES ('550', '若一台计算机的内存为128MB，则交换分区的大小通常是 。\n<br> \n', null, '618', '3', '1', null, '1');
INSERT INTO `question` VALUES ('551', '如果你想列出当前目录以及子目录下所有扩展名为“.txt”的文件，那么你可以使用的命令是 \n', null, '618', '3', '1', null, '1');
INSERT INTO `question` VALUES ('552', 'Which of the following is(are) true about providing security to database servers ? Select all that apply \n', null, '608', '2', '0', null, '1');
INSERT INTO `question` VALUES ('553', 'DNS欺骗的方式有哪些？ \n', null, '608', '2', '0', null, '1');
INSERT INTO `question` VALUES ('554', '下列关于关系数据模型的术语中,哪一个术语所表达的概念与二维表的\"行\"的概念最接近() \n', null, '606', '4', '1', null, '1');
INSERT INTO `question` VALUES ('555', '下列对于数据库索引的说法一定是错误的（） \n', null, '606', '4', '1', null, '1');
INSERT INTO `question` VALUES ('556', '关于PreparedStatement与Statement描述错误的是（） \n', null, '606', '4', '1', null, '1');
INSERT INTO `question` VALUES ('557', '在mysql中，与语句SELECT * FROM book b WHERE b.book_num NOT BETWEEN 200 AND 300;等价的有 \n', null, '606', '4', '1', null, '1');
INSERT INTO `question` VALUES ('558', 'spring的PROPAGATION_REQUIRES_NEW事务，下面哪些说法是正确的？ \n', null, '606', '4', '1', null, '1');
INSERT INTO `question` VALUES ('559', '下面有关ibatis 中的#与$的区别，描述错误的是？ \n', null, '606', '4', '1', null, '1');
INSERT INTO `question` VALUES ('560', '数据库中存在学生表S、课程表C和学生选课表SC三个表，它们的结构如下：S(S#，SN，SEX，AGE，DEPT)C(C#，CN)SC(S#，C#，GRADE)其中：S#为学号，SN为姓名，SEX为性别，AGE为年龄，DEPT为系别，C#为课程号，CN为课程名，GRADE为成绩。请检索选修课程号为C2的学生中成绩最高的学号。( ) \n', null, '606', '4', '1', null, '1');
INSERT INTO `question` VALUES ('561', '用命令（）可以查看mysql数据库中user表的表结构？ \n', null, '606', '4', '0', null, '1');
INSERT INTO `question` VALUES ('562', 'mysql数据库中一张user表中,其中包含字段A,B,C,字段类型如下:A:int,B:int,C:int根据字段A,B,C按照ABC顺序建立复合索引idx_A_B_C,以下查询语句中使用到索引idx_A_B_C的语句有哪些？ \n', null, '606', '4', '0', null, '1');
INSERT INTO `question` VALUES ('563', '单例类NSNotificationCenter提供信息广播通知，它采用的是观察者模式的通知机制。（）\n<br> \n<br> \n', null, '616', '5', '1', null, '1');
INSERT INTO `question` VALUES ('564', 'linux下侦测主机到目的主机之前所经过的路由的命令。 \n', null, '618', '2', '1', null, '1');
INSERT INTO `question` VALUES ('565', '下面对linux下mysqldump备份命令及参数描述正确的是 \n', null, '618', '2', '1', null, '1');
INSERT INTO `question` VALUES ('566', '在使用mkdir命令创建新的目录时，在其父目录不存在时先创建父目录的选项是 \n', null, '618', '2', '1', null, '1');
INSERT INTO `question` VALUES ('567', '写出linux命令: 在当前目录及其子目录所有的.cpp文件中查找字符串\"example\", 不区分大小写？\n<br> \n', null, '618', '2', '1', null, '1');
INSERT INTO `question` VALUES ('568', '软件项目存储于/ftproot，允许apache用户修改所有程序，设置访问权限的指令？ \n', null, '618', '2', '1', null, '1');
INSERT INTO `question` VALUES ('569', 'How should servlet developers handle the HttpServlet’s service() methond when extending HttpServlet? \n', null, '637', '1', '1', null, '1');
INSERT INTO `question` VALUES ('570', 'Which method is used by a servlet to place its session ID in a URL that is written to the servlet’s response output stream? \n', null, '637', '1', '1', null, '1');
INSERT INTO `question` VALUES ('571', '下面有关spring事务，描述错误的是？ \n', null, '637', '1', '1', null, '1');
INSERT INTO `question` VALUES ('572', '在J2EE中，使用Servlet过滤器，需要在web.xml中配置（）元素 \n', null, '637', '1', '0', null, '1');
INSERT INTO `question` VALUES ('573', 'Servlet接口的方法有哪些？ \n', null, '637', '1', '1', null, '1');
INSERT INTO `question` VALUES ('574', '从四个选项选出不同的一个。 \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('575', 'AngularJS1元素过滤的正确写法是哪一个？ \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('576', '如何判断一个js对象是否是Array,arr为要判断的对象，其中最准确的方法是？ \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('577', '哪种控制元素隐藏显示的做法是最正确的 \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('578', '页面有一个按钮button id为 button1，通过原生的js 设置背景色为红色？ \n', null, '571', '5', '1', null, '1');
INSERT INTO `question` VALUES ('579', '<span style=\"color:#333333;font-family:Arial, Verdana;line-height:25px;\">下列代码输出为（）：</span> \n<pre class=\"prettyprint\">class&nbsp;Father{\n    public&nbsp;void&nbsp;F()&nbsp;{&nbsp;\n        Console.WriteLine(“A.F”);&nbsp;\n    }\n    public&nbsp;virtual&nbsp;void&nbsp;G()&nbsp;{&nbsp;\n        Console.WriteLine(“A.G”);&nbsp;\n    }\n}\n&nbsp;\nclass&nbsp;Son:&nbsp;Father{\n    new&nbsp;public&nbsp;void&nbsp;F()&nbsp;{&nbsp;\n        Console.WriteLine(“B.F”);&nbsp;\n    }\n    public&nbsp;override&nbsp;void&nbsp;G()&nbsp;{&nbsp;\n        Console.WriteLine(“B.G”);&nbsp;\n    }\n}\n&nbsp;\nclass&nbsp;override_new\n{\n    static&nbsp;void&nbsp;Main()&nbsp;{\n    Son&nbsp;b&nbsp;=&nbsp;new&nbsp;Son();\n    Father&nbsp;a&nbsp;=&nbsp;b;\n    a.F();\n    b.F();\n    a.G();\n    b.G();\n    }\n}</pre> \n<br> \n', null, '572', '3', '1', null, '1');
INSERT INTO `question` VALUES ('580', 'C#的数据类型有？ \n', null, '572', '3', '1', null, '1');
INSERT INTO `question` VALUES ('581', '在C#中，装箱操作是将值类型转化成引用类型。 \n', null, '572', '3', '1', null, '1');
INSERT INTO `question` VALUES ('582', '连通分量指的是有向图中的极大连通子图() \n', null, '598', '2', '1', null, '1');
INSERT INTO `question` VALUES ('583', '十字链表是无向图的一种存储结构() \n', null, '598', '2', '1', null, '1');
INSERT INTO `question` VALUES ('584', '下面有关buddy内存分配算法的描述，说法错误的是？ \n', null, '598', '2', '1', null, '1');
INSERT INTO `question` VALUES ('585', '求解最短路径的Floyd算法的时间复杂度为() \n', null, '598', '2', '1', null, '1');
INSERT INTO `question` VALUES ('586', '<p> 下面描述中正确的为：</p> \n', null, '598', '2', '0', null, '1');
INSERT INTO `question` VALUES ('587', 'Android中可以使用System.out.println(“”);在控制台中显示你想要显示的字符吗？ \n', null, '617', '2', '1', null, '1');
INSERT INTO `question` VALUES ('588', '如果在android应用程序中需要发送短信,那么需要在AndroidManifest.xml文件中增加什么样的权限( ). \n', null, '617', '2', '1', null, '1');
INSERT INTO `question` VALUES ('589', '下列哪一项是manifest 文件的功能 \n', null, '617', '2', '1', null, '1');
INSERT INTO `question` VALUES ('590', '从架构图看，android分为几个层? \n', null, '617', '2', '1', null, '1');
INSERT INTO `question` VALUES ('591', '关于广播以下陈述正确的是( ). \n', null, '617', '2', '1', null, '1');
INSERT INTO `question` VALUES ('592', 'NSAssert类似的宏有哪些？ \n', null, '616', '4', '0', null, '1');
INSERT INTO `question` VALUES ('593', 'iOS中持久化方式有哪些？ \n', null, '616', '4', '0', null, '1');
INSERT INTO `question` VALUES ('594', '在UIViewController类中与模态相关方法有哪些？ \n', null, '616', '4', '0', null, '1');
INSERT INTO `question` VALUES ('595', '2只宠物合成，1只有5技能，1只有4技能，每个技能有 a%概率遗传，请问刚好有7 个技能遗传成功的概率是？&nbsp; \n', null, '601', '2', '1', null, '1');
INSERT INTO `question` VALUES ('596', '如果在高速公路上30分钟内看到车开过的几率是0.95，那么在10分钟内看到车开过的几率是多少?&nbsp; \n', null, '601', '2', '1', null, '1');
INSERT INTO `question` VALUES ('597', '假设在今日头条里面,有很多工作人员检查新闻是不是属于虚假新闻,所有新闻真实率到达了98%,工作人员在检验一个真实的新闻把它检验为一个虚假的新闻的概率为2%,而一个虚假的新闻被检验为真实的新闻的概率为5%.那么,一个被检验为真实的新闻确实是真实的新闻的概率是多大? \n', null, '601', '2', '1', null, '1');
INSERT INTO `question` VALUES ('598', '人工批量种植盆景虎皮兰，已知它们植株高度平均70cm，标准差5cm。现在从中随机输出100盆景到市场销售，则下面说法错误的是（）： \n', null, '601', '2', '1', null, '1');
INSERT INTO `question` VALUES ('599', '哈希法的平均查找长度不随表中结点数目的增加而增加,而是随负载因子的增大而增大() \n', null, '585', '3', '1', null, '1');
INSERT INTO `question` VALUES ('600', '现有一完全的P2P共享协议，每次两个节点通讯后都能获取对方已经获取的全部信息，现在使得系统中每个节点都知道所有节点的文件信息，共17个节点，假设只能通过多次两个对等节点之间通讯的方式，则最少需要（）次通讯 \n', null, '585', '3', '1', null, '1');
INSERT INTO `question` VALUES ('601', '已知某个哈希表的n个关键字具有相同的哈希值，如果使用二次探测再散列法将这n个关键字存入哈希表，至少要进行____次探测。 \n', null, '585', '3', '1', null, '1');
INSERT INTO `question` VALUES ('602', '下列哪些方法可以用作Hash函数的构造方法? \n', null, '585', '3', '0', null, '1');
INSERT INTO `question` VALUES ('603', '在开发一个系统时，如果用户对系统的目标不很清楚，难以定义需求，这时最好使用哪个软件工程模型？ \n', null, '612', '3', '1', null, '1');
INSERT INTO `question` VALUES ('604', '结构型模式中最体现扩展性的模式是（） \n', null, '612', '3', '1', null, '1');
INSERT INTO `question` VALUES ('605', '我们常说的mvc框架是指的什么的? \n', null, '612', '3', '1', null, '1');
INSERT INTO `question` VALUES ('606', '可维护性的特性中，相互矛盾的是() \n', null, '612', '3', '1', null, '1');
INSERT INTO `question` VALUES ('607', '一个系统，提供多个http协议的接口，返回的结果Y有json格式和jsonp格式。Json的格式为{\"code\":100,\"msg\":\"aaa\"},为了保证该协议变更之后更好的应用到多个接口，为了保证修改协议不影响到原先逻辑的代码，以下哪些设计模式是需要的?协议的变更指的是日后可能返回xml格式，或者是根据需求统一对返回的消息进行过滤。() \n', null, '612', '3', '0', null, '1');
INSERT INTO `question` VALUES ('608', '将一个Activity设置成窗口的样式，只需设置Theme \n', null, '617', '1', '1', null, '1');
INSERT INTO `question` VALUES ('609', 'Android中的R.java可以手动修改吗？ \n', null, '617', '1', '1', null, '1');
INSERT INTO `question` VALUES ('610', 'SharedPreferences保存文件的路径和扩展名是？ \n', null, '617', '1', '1', null, '1');
INSERT INTO `question` VALUES ('611', 'Intent传递数据时，下列的数据类型不可以被传递的是（） \n', null, '617', '1', '1', null, '1');
INSERT INTO `question` VALUES ('612', '下列关于数据持久化的描述正确的有 \n', null, '617', '1', '0', null, '1');
INSERT INTO `question` VALUES ('613', '在所有非抢占CPU调度算法中，系统平均响应时间最优的是（ ） \n', null, '610', '4', '1', null, '1');
INSERT INTO `question` VALUES ('614', '在8086 汇编下，逻辑地址和物理地址是怎样转换的？ \n', null, '610', '4', '1', null, '1');
INSERT INTO `question` VALUES ('615', '已知IBM的PowerPC是big-endian字节序列而Intel的X86是little-endian字节序，如果在地址啊存储的整形值时0x04030201，那么地址为a+3的字节内存储的值在PowerPC和Intel X86结构下的值分别是？ \n', null, '610', '4', '1', null, '1');
INSERT INTO `question` VALUES ('616', '两个浮点向量Xi和Yi(i=1,2,…n),相加后的结果为Zi。设浮点加法运算分4段(对阶、 尾加、规格化、舍入)完成。分别计算当 n=100,m=4(段数),N=20（处理单元数）时，t=1us（每段时间）时，串行、流水和向量运算所需的时间分别是( ) \n', null, '610', '4', '1', null, '1');
INSERT INTO `question` VALUES ('617', '<div>\n  CPU和两台输入/输出设备(I1,I2)多道程序设计环境下,同时有三个作业J1,J2,J3进行,这三个作业 \n</div> \n<div>\n  使用CPU和输入/输出设备的顺序和时间如下所示: \n</div> \n<blockquote> \n <div>\n   J1:I2(35ms);CPU(15ms);I1(35ms);CPU(15ms);I2(25ms) \n </div> \n <div>\n   J2:I1(25ms);CPU(30ms);I2(35ms) \n </div> \n <div>\n   J3:CPU(30ms);I1(25ms);CPU(15ms);I1(15ms); \n </div> \n</blockquote> \n<div>\n  假定CPU,I1,I2都能并行工作,J1的优先级最高,J2次之,J3优先级最低,优先级高的作业可以抢占\n <span>优先级低的作业的CPU,但不能抢占I1,I2,作业从J3开始到完成需要多少时间?</span> \n</div> \n', null, '610', '4', '1', null, '1');
INSERT INTO `question` VALUES ('618', '在AOE图中,关键路径上某个活动的时间缩短,整个工程的时间也就必定缩短() \n', null, '584', '3', '1', null, '1');
INSERT INTO `question` VALUES ('619', '下列关于无向连通图特性的叙述中，正确的是 \n<br> Ⅰ.所有顶点的度之和为偶数\n<br> Ⅱ.边数大于顶点个数\n<br> Ⅲ.至少有一个顶点的度为1 \n', null, '584', '3', '1', null, '1');
INSERT INTO `question` VALUES ('620', '<div>\n  设图 G 的相邻矩阵如下图:则 G 的顶点数和边数分别为() \n</div> \n<blockquote> \n <div>\n   01111 \n </div> \n <div>\n   10100 \n </div> \n <div>\n   11011 \n </div> \n <div>\n   10101 \n </div> \n <div>\n   10110 \n </div> \n</blockquote> \n', null, '584', '3', '1', null, '1');
INSERT INTO `question` VALUES ('621', '(1)求从指定源点到其余各顶点的迪杰斯特拉(Dijkstra)最短路径算法中弧上权不能为负的原因是在实际应用中无意义;(2)利用Dijkstra求每-对不同顶点之间的最短路径的算法时间是O(n\n<sup>3</sup> )(图用邻接矩阵表示);(3)Floyed求每对不同顶点对的算法中允许弧上的权为负,但不能有权和为负的回路。上面不正确的是() \n', null, '584', '3', '1', null, '1');
INSERT INTO `question` VALUES ('622', '两人在一个n个点的无向完全图上进行游戏，每次可以选择当前图中两个端点度数奇偶性相同的边删除，谁不能操作谁输，则在n=1,2,3,......,9,10中，有____个图先手有必胜策略。 \n', null, '584', '3', '1', null, '1');
INSERT INTO `question` VALUES ('623', '异常类对象均为System．Exception类的对象。 \n', null, '572', '1', '1', null, '1');
INSERT INTO `question` VALUES ('624', '下面不是面向对象的基本原则的是？ \n', null, '572', '1', '1', null, '1');
INSERT INTO `question` VALUES ('625', '在C#中，索引器是专门用来访问对象中的数组信息的。 \n', null, '572', '1', '1', null, '1');
INSERT INTO `question` VALUES ('626', '排序的稳定性是指排序算法中的比较次数保持不变,且算法能够终止() \n', null, '590', '1', '1', null, '1');
INSERT INTO `question` VALUES ('627', '()占用的额外空间的空间复杂性为O(1) \n', null, '590', '1', '1', null, '1');
INSERT INTO `question` VALUES ('628', '希尔 冒泡 快速 插入 哪个平均速度最快？ \n', null, '590', '1', '1', null, '1');
INSERT INTO `question` VALUES ('629', '下列排序算法中，在待排序数据有序的情况下，花费时间最多的是（ ） \n', null, '590', '1', '1', null, '1');
INSERT INTO `question` VALUES ('630', '假设线性表的长度为n，则在最坏情况下，冒泡排序需要的比较次数为多少次？ \n', null, '590', '1', '1', null, '1');
INSERT INTO `question` VALUES ('631', '以下序列不是堆的是() \n', null, '586', '1', '1', null, '1');
INSERT INTO `question` VALUES ('632', '不用递归就不能实现二叉树的前序遍历() \n', null, '591', '5', '1', null, '1');
INSERT INTO `question` VALUES ('633', '<pre class=\"prettyprint\">class program\n {\n &nbsp; &nbsp; static void Main(string[] args)\n &nbsp; &nbsp; {\n &nbsp; &nbsp; &nbsp; &nbsp; int i;\n &nbsp; &nbsp; &nbsp; &nbsp; i = x(x(8));\n &nbsp; &nbsp; }\n &nbsp; &nbsp; static int x(int n)\n &nbsp; &nbsp; {\n &nbsp; &nbsp; &nbsp; &nbsp; if (n &lt;= 3)\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 1;\n &nbsp; &nbsp; &nbsp; &nbsp; else\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return x(n - 2) + x(n - 4) + 1;\n &nbsp; &nbsp; }\n }</pre> \n<div>\n  递归算法x(x(8))需要调用几次函数x(int n)? \n</div> \n', null, '591', '5', '1', null, '1');
INSERT INTO `question` VALUES ('634', '根据栅格系统的标准用法，错误的是 \n', null, '574', '3', '1', null, '1');
INSERT INTO `question` VALUES ('635', '能在1024的windows机器上显示8列而在肾6手机上显示12列的是 \n', null, '574', '3', '1', null, '1');
INSERT INTO `question` VALUES ('636', '关于canvas不正确的是？ \n', null, '574', '3', '1', null, '1');
INSERT INTO `question` VALUES ('637', '用于加亮文本的标签是 \n', null, '574', '3', '1', null, '1');
INSERT INTO `question` VALUES ('638', '<div>\n  以下分析以下代码说法正确的是:（ ） \n</div> \n<pre class=\"prettyprint lang-html\">&lt;html&gt;\n&lt;head&gt;\n　&lt;script type=\"text/javascript\"&gt;\n　　function writeIt (value) { document.myfm.first_text.value=value;}\n　&lt;/script&gt;\n&lt;/head&gt;\n&lt;body bgcolor=\"#ffffff\"&gt;\n　&lt;form name=\"myfm\"&gt;\n　　&lt;input type=\"text\" name=\"first_text\"&gt;\n　　&lt;input type=\"text\" name=\"second_text\" onchange=\"writeIt(value)\"&gt;\n　&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre> \n', null, '574', '3', '0', null, '1');
INSERT INTO `question` VALUES ('639', '有些排序算法在每趟排序过程中,都会有一个元素被放置在其最终的位置上,下列算法不会出现此情况的是() \n', null, '590', '3', '1', null, '1');
INSERT INTO `question` VALUES ('640', '在文件\"局部有序\"或文件长度较小的情况下,最佳内部排序的方法是() \n', null, '590', '3', '1', null, '1');
INSERT INTO `question` VALUES ('641', '快速排序在下面哪种情况下优势最明显() \n', null, '590', '3', '1', null, '1');
INSERT INTO `question` VALUES ('642', '将整数数组（7-6-3-5-4-1-2）按照堆排序的方式原地进行升序排列，请问在第一轮排序结束之后，数组的顺序是_____。 \n', null, '590', '3', '1', null, '1');
INSERT INTO `question` VALUES ('643', '线性表如果要频繁的执行插入和删除操作，该线性表采取的存储结构应该是（） \n', null, '598', '5', '1', null, '1');
INSERT INTO `question` VALUES ('644', '旅行商问题是NP问题吗？ \n', null, '598', '5', '1', null, '1');
INSERT INTO `question` VALUES ('645', '用户双击鼠标时产生的消息序列，下面正确的是（） \n', null, '620', '5', '1', null, '1');
INSERT INTO `question` VALUES ('646', '下列哪些函数的返回类型是属于windows内核对象() \n', null, '620', '5', '0', null, '1');
INSERT INTO `question` VALUES ('647', '测试人员要坚持原则，缺陷未修复完坚决不予通过。请判断这句话的正确与否。 \n', null, '613', '2', '1', null, '1');
INSERT INTO `question` VALUES ('648', '系统测试的策略有哪些？ \n', null, '613', '2', '0', null, '1');
INSERT INTO `question` VALUES ('649', '软件验收测试包括哪些？ \n', null, '613', '2', '0', null, '1');
INSERT INTO `question` VALUES ('650', '用数组r存储静态链表,结点的next域指向后继,工作指针j指向链中结点,使j沿链移动的操作为() \n', null, '578', '4', '1', null, '1');
INSERT INTO `question` VALUES ('651', '折半查找的时间复杂性为() \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('652', '折半查找法的查找速度一定比顺序查找法快() \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('653', '下列有关图的遍历说法中，不正确的是 \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('654', '二分查找树里查询一个关键字的最坏时间复杂度是______ \n', null, '589', '5', '1', null, '1');
INSERT INTO `question` VALUES ('655', '在将E-R模型向关系模型转换的过程中，若将三个实体之间的多对多联系m:n:p转换为关系模式，则该关系模式的关键字为什么？ \n', null, '612', '3', '1', null, '1');
INSERT INTO `question` VALUES ('656', '下列关于B/S架构软件与C/S架构软件的区别描述错误的是？ \n', null, '612', '3', '1', null, '1');
INSERT INTO `question` VALUES ('657', '确定模块的功能和模块的接口是在软件设计的那个阶段完成的? \n', null, '612', '3', '1', null, '1');
INSERT INTO `question` VALUES ('658', '设栈采用顺序存储结构,若已有i-1个元素入栈,则将第i个元素入栈时,入栈算法的时间复杂性为O(i)() \n', null, '581', '5', '1', null, '1');
INSERT INTO `question` VALUES ('659', '一个栈的入栈序列为A B C D E 则不可能的输出序列为? \n', null, '581', '5', '1', null, '1');
INSERT INTO `question` VALUES ('660', '栈的输入序列是1,2,…,n,输出序列是a\n<sub>1</sub> ,a\n<sub>2</sub> ,…,a\n<sub>n</sub> ,若a\n<sub>i</sub> =n(1&lt;=i&lt;=n),则有:a\n<sub>i</sub> &gt;a\n<sub>i+1</sub> &gt;…&gt;a\n<sub>n</sub> () \n', null, '581', '5', '1', null, '1');
INSERT INTO `question` VALUES ('661', '栈和队列的共同点是 \n', null, '581', '5', '1', null, '1');
INSERT INTO `question` VALUES ('662', '栈通常采用的两种存储结构是什么？ \n', null, '581', '5', '1', null, '1');
INSERT INTO `question` VALUES ('663', 'NSURLConnectionDelegate协议中的 connectionDidFinishLoading:是成功完成加载数据，在 connection:didReceiveData方法之后执行。\n<br> \n', null, '616', '1', '1', null, '1');
INSERT INTO `question` VALUES ('664', '删除联系人使用的函数有哪些？\n<br> \n', null, '616', '1', '0', null, '1');
INSERT INTO `question` VALUES ('665', 'NSURLRequest的构造函数有？\n<br> \n', null, '616', '1', '0', null, '1');
INSERT INTO `question` VALUES ('666', '关于正态分布,下列说法错误的是: \n', null, '630', '3', '1', null, '1');
INSERT INTO `question` VALUES ('667', '下列哪个不属于CRF模型对于HMM和MEMM模型的优势（） \n', null, '630', '3', '1', null, '1');
INSERT INTO `question` VALUES ('668', '以下关于PMF(概率质量函数),PDF(概率密度函数),CDF(累积分布函数)描述错误的是() \n', null, '630', '3', '1', null, '1');
INSERT INTO `question` VALUES ('669', 'excel工作簿a中有两列id、age,工作簿b中有一列id,需要找到工作薄b中id对应的age,可用的函数包括 \n', null, '630', '3', '0', null, '1');
INSERT INTO `question` VALUES ('671', '明天会下雨', '会', '0', '1', '0', '5', '0');

-- ----------------------------
-- Table structure for type
-- ----------------------------
DROP TABLE IF EXISTS `type`;
CREATE TABLE `type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` varchar(255) DEFAULT NULL,
  `superType` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=639 DEFAULT CHARSET=gb2312;

-- ----------------------------
-- Records of type
-- ----------------------------
INSERT INTO `type` VALUES ('569', 'C/C++', '编程语言');
INSERT INTO `type` VALUES ('570', 'Java', '编程语言');
INSERT INTO `type` VALUES ('571', 'Javascript', '编程语言');
INSERT INTO `type` VALUES ('572', 'C#', '编程语言');
INSERT INTO `type` VALUES ('574', 'HTML/CSS', '编程语言');
INSERT INTO `type` VALUES ('578', '数组', '数据结构');
INSERT INTO `type` VALUES ('579', '字符串', '数据结构');
INSERT INTO `type` VALUES ('580', '链表', '数据结构');
INSERT INTO `type` VALUES ('581', '栈', '数据结构');
INSERT INTO `type` VALUES ('582', '队列', '数据结构');
INSERT INTO `type` VALUES ('583', '树', '数据结构');
INSERT INTO `type` VALUES ('584', '图', '数据结构');
INSERT INTO `type` VALUES ('585', '哈希', '数据结构');
INSERT INTO `type` VALUES ('586', '堆', '数据结构');
INSERT INTO `type` VALUES ('589', '查找', '算法');
INSERT INTO `type` VALUES ('590', '排序', '算法');
INSERT INTO `type` VALUES ('591', '递归', '算法');
INSERT INTO `type` VALUES ('597', '复杂度', '算法');
INSERT INTO `type` VALUES ('598', '高级算法', '算法');
INSERT INTO `type` VALUES ('600', '组合数学', '数学和逻辑');
INSERT INTO `type` VALUES ('601', '概率统计', '数学和逻辑');
INSERT INTO `type` VALUES ('602', '智力题', '数学和逻辑');
INSERT INTO `type` VALUES ('604', '网络基础', '计算机基础');
INSERT INTO `type` VALUES ('606', '数据库', '计算机基础');
INSERT INTO `type` VALUES ('607', '操作系统', '计算机基础');
INSERT INTO `type` VALUES ('608', '加密和安全', '计算机基础');
INSERT INTO `type` VALUES ('609', '编程基础', '计算机基础');
INSERT INTO `type` VALUES ('610', '编译和体系结构', '计算机基础');
INSERT INTO `type` VALUES ('612', '软件工程', '软件开发');
INSERT INTO `type` VALUES ('613', '软件测试', '软件开发');
INSERT INTO `type` VALUES ('616', 'iOS', '软件开发');
INSERT INTO `type` VALUES ('617', 'Android', '软件开发');
INSERT INTO `type` VALUES ('618', 'Linux', '软件开发');
INSERT INTO `type` VALUES ('620', 'Windows', '软件开发');
INSERT INTO `type` VALUES ('630', '数理统计', '软件开发');
INSERT INTO `type` VALUES ('631', '机器学习', '软件开发');
INSERT INTO `type` VALUES ('636', '并发', '软件开发');
INSERT INTO `type` VALUES ('637', 'Spring', '软件开发');
INSERT INTO `type` VALUES ('638', 'C++', '编程语言');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(32) NOT NULL,
  `password` varchar(32) NOT NULL,
  `email` varchar(32) DEFAULT NULL,
  `group` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('1', 'admin', 'admin', '15779784953@163.com', '2');
INSERT INTO `user` VALUES ('2', 'practice', 'practice', null, '1');
INSERT INTO `user` VALUES ('5', 'cai', '841446831', '841446831@q.com', '1');
INSERT INTO `user` VALUES ('12', 'cen', 'cen', '1125190449@11.com', '0');
